[{"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\index.tsx":"1","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\locales\\i18n.ts":"2","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\highlight.ts":"3","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\store.ts":"4","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\App.tsx":"5","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\contexts\\CollapseDrawerContext.tsx":"6","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\contexts\\JWTContext.tsx":"7","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\LoadingScreen.tsx":"8","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\index.ts":"9","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\rootReducer.ts":"10","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\jwt.ts":"11","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useAuth.ts":"12","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\RtlLayout.tsx":"13","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ThemePrimaryColor.tsx":"14","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\NotistackProvider.tsx":"15","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ThemeLocalization.tsx":"16","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\GoogleAnalytics.tsx":"17","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\globalStyles.tsx":"18","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Logo.tsx":"19","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\BaseOptionChart.tsx":"20","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\stage.ts":"21","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\wallet.ts":"22","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\project.ts":"23","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\investor.ts":"24","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\business.ts":"25","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\userKrowdrac.ts":"26","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\blog.ts":"27","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\product.ts":"28","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\chat.ts":"29","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\mail.ts":"30","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\stage.ts":"31","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\user.ts":"32","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\investor.ts":"33","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\wallet.ts":"34","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\transaction.ts":"35","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\field.ts":"36","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\riskType.ts":"37","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\project.ts":"38","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\business.ts":"39","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\area.ts":"40","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\account.ts":"41","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\products.ts":"42","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\blog.ts":"43","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\user.ts":"44","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\mail.ts":"45","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\chat.ts":"46","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\axios.ts":"47","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\config.ts":"48","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\index.tsx":"49","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useLocales.ts":"50","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useSettings.ts":"51","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\routes\\index.tsx":"52","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\api\\firebase.ts":"53","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ScrollButton.tsx":"54","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\mock.ts":"55","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\shadows.ts":"56","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\contexts\\SettingsContext.tsx":"57","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Page404.tsx":"58","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\ComponentsOverview.tsx":"59","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\PageTopUp.tsx":"60","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\PageSuccess.tsx":"61","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Page500.tsx":"62","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Payment.tsx":"63","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Maintenance.tsx":"64","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\KrowdPackage.tsx":"65","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Details.tsx":"66","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\project\\Project.tsx":"67","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\index.ts":"68","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\palette.ts":"69","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\index.ts":"70","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useLocalStorage.ts":"71","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Page.tsx":"72","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\contentDB.ts":"73","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\number.ts":"74","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\content.ts":"75","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\text.ts":"76","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\LoadingButton.ts":"77","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\ControlLabel.ts":"78","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\ToggleButton.ts":"79","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Autocomplete.ts":"80","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\ButtonGroup.ts":"81","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Breadcrumbs.ts":"82","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Pagination.ts":"83","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\IconButton.ts":"84","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Accordion.ts":"85","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Typography.ts":"86","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Container.ts":"87","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Timeline.ts":"88","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Progress.ts":"89","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Snackbar.ts":"90","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Backdrop.ts":"91","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Skeleton.ts":"92","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Pickers.ts":"93","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Stepper.ts":"94","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Popover.ts":"95","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Tooltip.ts":"96","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Select.ts":"97","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\SvgIcon.ts":"98","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Switch.ts":"99","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Button.ts":"100","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Slider.ts":"101","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Checkbox.tsx":"102","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\TreeView.tsx":"103","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Drawer.ts":"104","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Avatar.ts":"105","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Radio.ts":"106","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Dialog.ts":"107","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\routes\\paths.ts":"108","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Input.ts":"109","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Paper.ts":"110","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Badge.ts":"111","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Table.ts":"112","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Lists.ts":"113","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Link.ts":"114","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\DataGrid.tsx":"115","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Grid.ts":"116","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\formatNumber.ts":"117","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Rating.tsx":"118","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Menu.ts":"119","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Tabs.ts":"120","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Alert.tsx":"121","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MHidden.tsx":"122","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\analytics.ts":"123","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Card.ts":"124","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Fab.ts":"125","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\name.ts":"126","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\index.tsx":"127","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\address.ts":"128","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\phoneNumber.ts":"129","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\company.ts":"130","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\boolean.ts":"131","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\email.ts":"132","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\role.ts":"133","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Chip.tsx":"134","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\index.ts":"135","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\index.ts":"136","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailFAQsBusiness.tsx":"137","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\StageListKrowdTable.tsx":"138","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailHowItWorks.tsx":"139","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\KrowdProjectStage.tsx":"140","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailsPress.tsx":"141","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectPackage.tsx":"142","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailHighLight.tsx":"143","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailAfterPitch.tsx":"144","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailAlbumCarousel.tsx":"145","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailDocument.tsx":"146","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailNavbar.tsx":"147","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailExtension.tsx":"148","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailPitch.tsx":"149","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailHeading.tsx":"150","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailCard.tsx":"151","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MIconButton.tsx":"152","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MFab.tsx":"153","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MBreadcrumbs.tsx":"154","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingKrowdFranchising.tsx":"155","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingStepsInvestment.tsx":"156","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingAdvertisement.tsx":"157","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingKrowdFaqs.tsx":"158","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingInvest.tsx":"159","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingStartup.tsx":"160","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingSteps.tsx":"161","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingAppDownload.tsx":"162","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingKrowdSteps.tsx":"163","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingHero.tsx":"164","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MAvatar.tsx":"165","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\LightboxModal.tsx":"166","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\@types\\krowd\\project.ts":"167","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\krowd-table\\KrowdTable.tsx":"168","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\index.ts":"169","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\index.ts":"170","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\components\\KrowdTableListHead.tsx":"171","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\index.ts":"172","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project\\index.ts":"173","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartRadialBar.tsx":"174","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\index.tsx":"175","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartRadarBar.tsx":"176","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartPie.tsx":"177","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartLine.tsx":"178","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartMixed.tsx":"179","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselThumbnail.tsx":"180","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselCenterMode.tsx":"181","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic3.tsx":"182","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic4.tsx":"183","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselAnimation.tsx":"184","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic2.tsx":"185","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic1.tsx":"186","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnSingle.tsx":"187","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartDonut.tsx":"188","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnStacked.tsx":"189","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnNegative.tsx":"190","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnMultiple.tsx":"191","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Label.tsx":"192","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Scrollbar.tsx":"193","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\index.ts":"194","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\TextAnimate.tsx":"195","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\ButtonAnimate.tsx":"196","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\index.ts":"197","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\index.ts":"198","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsCategory.tsx":"199","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsList.tsx":"200","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsForm.tsx":"201","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsHero.tsx":"202","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostsSort.tsx":"203","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostTags.tsx":"204","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\TransactionsSort.tsx":"205","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostsSearch.tsx":"206","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostRecent.tsx":"207","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostHero.tsx":"208","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCommentItem.tsx":"209","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCommentList.tsx":"210","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCommentForm.tsx":"211","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BusinessProjectForm.tsx":"212","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCard.tsx":"213","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsArrowsIndex.tsx":"214","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsArrowsBasic2.tsx":"215","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsArrowsBasic1.tsx":"216","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsPaging2.tsx":"217","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsPaging1.tsx":"218","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_plan_premium.tsx":"219","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_plan_starter.tsx":"220","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_plan_free.tsx":"221","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_sent.tsx":"222","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_checkout.tsx":"223","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\index.ts":"224","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_checkin.tsx":"225","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_booking.tsx":"226","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_order_complete.tsx":"227","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_maintenance.tsx":"228","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_coming_soon.tsx":"229","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_motivation.tsx":"230","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\formatTime.ts":"231","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\fakeRequest.ts":"232","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_404.tsx":"233","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_500.tsx":"234","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_upload.tsx":"235","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_seo.tsx":"236","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_doc.tsx":"237","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\SearchNotFound.tsx":"238","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\SvgIconStyle.tsx":"239","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\Path.ts":"240","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\Wrap.ts":"241","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\Actions.ts":"242","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project\\ProjectCard.tsx":"243","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\DialogAnimate.tsx":"244","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\MotionContainer.tsx":"245","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\MotionInView.tsx":"246","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\rotate\\index.ts":"247","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\scale\\index.ts":"248","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\flip\\index.ts":"249","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\zoom\\index.ts":"250","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\bounce\\index.ts":"251","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\slide\\index.ts":"252","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\fade\\index.ts":"253","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\index.ts":"254","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartArea.tsx":"255","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartBar.tsx":"256","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\rotate\\RotateOut.ts":"257","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\fade\\FadeOut.ts":"258","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\fade\\FadeIn.ts":"259","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\slide\\SlideOut.ts":"260","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\slide\\SlideIn.ts":"261","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\bounce\\BounceOut.ts":"262","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\bounce\\BounceIn.ts":"263","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\zoom\\ZoomOut.ts":"264","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\zoom\\ZoomIn.ts":"265","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\flip\\FlipOut.ts":"266","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\flip\\FlipIn.ts":"267","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\scale\\ScaleOut.ts":"268","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\scale\\ScaleIn.ts":"269","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\BackgroundColor.ts":"270","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\BackgroundPan.ts":"271","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\BackgroundKenburns.ts":"272","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\rotate\\RotateIn.ts":"273","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\HeaderBreadcrumbs.tsx":"274","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserAccountForm.tsx":"275","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainNavbarTopUp.tsx":"276","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\ComingSoon.tsx":"277","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Faqs.tsx":"278","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Contact.tsx":"279","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\index.tsx":"280","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\LandingPage.tsx":"281","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\About.tsx":"282","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\Mail.tsx":"283","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\Chat.tsx":"284","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserCreate.tsx":"285","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainFooter.tsx":"286","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\ProjectStageReport.tsx":"287","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\BillReportDailyProject.tsx":"288","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\ReportDailyProject.tsx":"289","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useIsMountedRef.ts":"290","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useOffSetTop.ts":"291","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MenuConfig.tsx":"292","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MenuMobile.tsx":"293","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\ProjectListInvested.tsx":"294","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserInvestmentAll.tsx":"295","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserPeriodRevenueHistory.tsx":"296","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserPaymentProject.tsx":"297","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserInvestment.tsx":"298","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserWalletTransaction.tsx":"299","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useCountdown.ts":"300","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserWithDrawTransaction.tsx":"301","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserAccount.tsx":"302","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserAccountTransaction.tsx":"303","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserList.tsx":"304","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentSummary.tsx":"305","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentNewCardForm.tsx":"306","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentMethods.tsx":"307","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\index.ts":"308","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentBillingAddress.tsx":"309","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserCards.tsx":"310","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserProfile.tsx":"311","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProjectOwner.tsx":"312","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProjectMedia.tsx":"313","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\UserNewForm.tsx":"314","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProjectEntity.tsx":"315","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceInvoice.tsx":"316","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProject.tsx":"317","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\BlogPost.tsx":"318","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\PackageVoucherCheckout.tsx":"319","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceProductCreate.tsx":"320","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceProductList.tsx":"321","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceProductDetails.tsx":"322","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceShop.tsx":"323","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralBooking.tsx":"324","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralAnalytics.tsx":"325","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\WalletBanking.tsx":"326","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralEcommerce.tsx":"327","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\ProjectBillDailyReport.tsx":"328","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\TermOfService.tsx":"329","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\Communication.tsx":"330","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\PrivaryPolicy.tsx":"331","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToContact.tsx":"332","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToJoinKrowdEco.tsx":"333","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToCallInvest.tsx":"334","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToInvest.tsx":"335","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowReturnWork.tsx":"336","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskManager.tsx":"337","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskForField.tsx":"338","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskFranchise.tsx":"339","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskInvest.tsx":"340","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\index.ts":"341","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\NavSection.tsx":"342","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\index.ts":"343","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\index.ts":"344","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\index.ts":"345","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\WhatIGetInvest.tsx":"346","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\LearnHowItWork.tsx":"347","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\DealTerm.tsx":"348","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralApp.tsx":"349","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\BusinessMaterialUI.tsx":"350","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\BusinessHero.tsx":"351","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\BusinessContent.tsx":"352","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\countries.ts":"353","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\authentication\\VerifyCode.tsx":"354","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\authentication\\Register.tsx":"355","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\ProjectReportRevenue.tsx":"356","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Markdown.tsx":"357","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\ProductNewForm.tsx":"358","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\CartWidget.tsx":"359","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\breakpoints.ts":"360","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\typography.ts":"361","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\shape.ts":"362","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\authentication\\Login.tsx":"363","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\transaction.ts":"364","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\LogoOnlyLayout.tsx":"365","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\guards\\AuthGuard.tsx":"366","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\guards\\GuestGuard.tsx":"367","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\ProjectTable.tsx":"368","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\InvestmentTableAll.tsx":"369","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\PeriodRevenueHistoryTable.tsx":"370","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\PaymentProjectTable.tsx":"371","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\InvestmentTable.tsx":"372","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\WalletTransactionTable.tsx":"373","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\index.ts":"374","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\index.ts":"375","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\ContactMap.tsx":"376","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\ContactForm.tsx":"377","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\ContactHero.tsx":"378","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\AccountTransactionWithDrawTable.tsx":"379","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\AccounTransactionTable.tsx":"380","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\cards\\index.ts":"381","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatWindow.tsx":"382","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatSidebar.tsx":"383","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatSearchResults.tsx":"384","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomGroupParticipant.tsx":"385","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\index.ts":"386","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomOneParticipant.tsx":"387","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\index.ts":"388","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomAttachment.tsx":"389","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoom.tsx":"390","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatMessageInput.tsx":"391","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatMessageItem.tsx":"392","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatMessageList.tsx":"393","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatHeaderDetail.tsx":"394","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatHeaderCompose.tsx":"395","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatConversationList.tsx":"396","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\index.ts":"397","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-list\\index.ts":"398","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\index.ts":"399","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\index.ts":"400","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\index.ts":"401","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\index.ts":"402","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\index.ts":"403","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatConversationItem.tsx":"404","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatContactSearch.tsx":"405","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatAccount.tsx":"406","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailSidebarItem.tsx":"407","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailSidebar.tsx":"408","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailToolbar.tsx":"409","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\AuthLayout.tsx":"410","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\index.ts":"411","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailItemAction.tsx":"412","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailItem.tsx":"413","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\index.ts":"414","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailList.tsx":"415","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetailsReplyInput.tsx":"416","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetailsToolbar.tsx":"417","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetailsAttachments.tsx":"418","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetails.tsx":"419","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailCompose.tsx":"420","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutTestimonials.tsx":"421","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutVision.tsx":"422","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\index.tsx":"423","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainNavbar.tsx":"424","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutWhat.tsx":"425","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutTeam.tsx":"426","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutHero.tsx":"427","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\learnInvest\\index.tsx":"428","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\index.tsx":"429","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\UserMoreMenu.tsx":"430","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\index.ts":"431","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\UserListToolbar.tsx":"432","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\UserListHead.tsx":"433","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountBillingInvoiceHistory.tsx":"434","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountGeneral.tsx":"435","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\cards\\UserCard.tsx":"436","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomPopup.tsx":"437","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\ProjectEntitytForm.tsx":"438","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\ProjectEntitytMediaForm.tsx":"439","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\KrowdNewProjectOwnerForm.tsx":"440","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\getFileFormat.tsx":"441","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfilePostInput.tsx":"442","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\EmojiPicker.tsx":"443","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileSocialInfo.tsx":"444","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\BadgeStatus.tsx":"445","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileFollowInfo.tsx":"446","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileFollowers.tsx":"447","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileAbout.tsx":"448","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfilePostCard.tsx":"449","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileGallery.tsx":"450","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileFriends.tsx":"451","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\verify-code\\index.ts":"452","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileCover.tsx":"453","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\createAvatar.ts":"454","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceCurrentBalance.tsx":"455","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceLatestProducts.tsx":"456","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceSalesOverview.tsx":"457","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceSaleByGender.tsx":"458","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceYearlySales.tsx":"459","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceTotalBalance.tsx":"460","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceProductSold.tsx":"461","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceSalesProfit.tsx":"462","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceBestSalesman.tsx":"463","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceNewProducts.tsx":"464","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceWelcome.tsx":"465","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\index.ts":"466","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingExpensesCategories.tsx":"467","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\EmptyContent.tsx":"468","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\UploadAvatar.tsx":"469","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\login\\index.ts":"470","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\UploadSingleFile.tsx":"471","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\index.tsx":"472","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\UploadMultiFile.tsx":"473","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopProductSort.tsx":"474","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useCollapseDrawer.ts":"475","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MenuDesktop.tsx":"476","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopProductList.tsx":"477","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopProductCard.tsx":"478","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopFilterSidebar.tsx":"479","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\DashboardSidebar.tsx":"480","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\DashboardNavbar.tsx":"481","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\learnInvest\\DashboardSidebarLearn.tsx":"482","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopTagFiltered.tsx":"483","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\MyAvatar.tsx":"484","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingRecentTransitions.tsx":"485","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingBalanceStatistics.tsx":"486","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingCurrentBalance.tsx":"487","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingInviteFriends.tsx":"488","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingQuickTransfer.tsx":"489","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\index.tsx":"490","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingContacts.tsx":"491","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\ProjectPaymentWallet.tsx":"492","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\CollectionWallet.tsx":"493","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\AdvanceWallet.tsx":"494","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppWidgets2.tsx":"495","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppWidgets1.tsx":"496","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppWelcome.tsx":"497","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTotalDownloads.tsx":"498","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\WalletWelcome.tsx":"499","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTotalInstalled.tsx":"500","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTotalActiveUsers.tsx":"501","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTopRelated.tsx":"502","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppNewInvoice.tsx":"503","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppFeatured.tsx":"504","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppCurrentDownload.tsx":"505","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppAreaInstalled.tsx":"506","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\TempWallet.tsx":"507","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\SharedInvestmentWallet.tsx":"508","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingReservationStats.tsx":"509","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCustomerReviews.tsx":"510","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCheckInWidgets.tsx":"511","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingNewestBooking.tsx":"512","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingRoomAvailable.tsx":"513","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingTotalIncomes.tsx":"514","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\KrowdProjectProgress.tsx":"515","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCheckOut.tsx":"516","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingDetails.tsx":"517","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCheckIn.tsx":"518","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\verify-code\\VerifyCodeForm.tsx":"519","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingTotal.tsx":"520","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\SharedRevenue.tsx":"521","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsWebsiteVisits.tsx":"522","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsTrafficBySite.tsx":"523","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsTasks.tsx":"524","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsOrderTimeline.tsx":"525","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsNewsUpdate.tsx":"526","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\MembersParticipation.tsx":"527","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\MultiplierProject.tsx":"528","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsCurrentVisits.tsx":"529","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ColorPreview.tsx":"530","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsCurrentSubject.tsx":"531","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsConversionRates.tsx":"532","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\TermOfProject.tsx":"533","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProductDetailsSummary.tsx":"534","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsReviewOverview.tsx":"535","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsReviewList.tsx":"536","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsHero.tsx":"537","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainNavbarLearn.tsx":"538","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\DashboardProjectSidebar.tsx":"539","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\DashboardNavbar.tsx":"540","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\login\\LoginFormBusiness.tsx":"541","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\login\\LoginForm.tsx":"542","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\SidebarConfig.tsx":"543","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\ContactsPopover.tsx":"544","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\AccountPopover.tsx":"545","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\learnInvest\\SidebarConfigLearn.tsx":"546","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\MenuPopover.tsx":"547","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapZoomToBounds.tsx":"548","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapMarkersPopups.tsx":"549","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapClusters.tsx":"550","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapHighlightByFilter.tsx":"551","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\draft\\index.tsx":"552","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapGeoJSONAnimation.tsx":"553","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\quill\\index.tsx":"554","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapDeckglOverlay.tsx":"555","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsReview.tsx":"556","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProductDetailsCarousel.tsx":"557","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-list\\ProductListToolbar.tsx":"558","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPackageSummary.tsx":"559","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-list\\ProductListHead.tsx":"560","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutProductList.tsx":"561","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPaymentMethods.tsx":"562","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPayment.tsx":"563","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutOrderComplete.tsx":"564","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutNewAddressForm.tsx":"565","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutDelivery.tsx":"566","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\SidebarProjectConfig.tsx":"567","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\AccountPopover.tsx":"568","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPackage.tsx":"569","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutBillingInfo.tsx":"570","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutBillingAddress.tsx":"571","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\Profile.tsx":"572","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountBillingAddressBook.tsx":"573","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountBilling.tsx":"574","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\index.ts":"575","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-interaction\\index.tsx":"576","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-viewport-animation\\index.tsx":"577","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-heatmap\\index.tsx":"578","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-geojson\\index.tsx":"579","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-dynamic-styling\\index.tsx":"580","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-draggable-markers\\index.tsx":"581","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-change-theme\\index.tsx":"582","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\quill\\QuillEditorToolbar.tsx":"583","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\getColorName.ts":"584","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\draft\\DraftEditorStyle.tsx":"585","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\draft\\DraftEditorToolbar.tsx":"586","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\countries.ts":"587","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlScale.tsx":"588","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlPopup.tsx":"589","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlGeolocate.tsx":"590","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlNavigation.tsx":"591","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlMarker.tsx":"592","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlFullscreen.tsx":"593","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-change-theme\\ControlPanel.tsx":"594","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-draggable-markers\\ControlPanel.tsx":"595","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-geojson\\ControlPanel.tsx":"596","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-dynamic-styling\\ControlPanel.tsx":"597","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-viewport-animation\\ControlPanel.tsx":"598","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-interaction\\ControlPanel.tsx":"599","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-heatmap\\ControlPanel.tsx":"600","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\quill\\QuillEditorToolbarStyle.tsx":"601","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\NotificationsPopover.tsx":"602","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailUpdateNews.tsx":"603","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\PaymentHistory.tsx":"604"},{"size":2999,"mtime":1668689970126,"results":"605","hashOfConfig":"606"},{"size":1056,"mtime":1668590767707,"results":"607","hashOfConfig":"606"},{"size":304,"mtime":1668590767754,"results":"608","hashOfConfig":"606"},{"size":931,"mtime":1668590767738,"results":"609","hashOfConfig":"606"},{"size":1482,"mtime":1668689970087,"results":"610","hashOfConfig":"606"},{"size":2024,"mtime":1668590767707,"results":"611","hashOfConfig":"606"},{"size":4804,"mtime":1668590767707,"results":"612","hashOfConfig":"606"},{"size":3557,"mtime":1668590767597,"results":"613","hashOfConfig":"606"},{"size":398,"mtime":1668590767582,"results":"614","hashOfConfig":"606"},{"size":2055,"mtime":1668590767722,"results":"615","hashOfConfig":"606"},{"size":1372,"mtime":1668590767754,"results":"616","hashOfConfig":"606"},{"size":564,"mtime":1668590767707,"results":"617","hashOfConfig":"606"},{"size":867,"mtime":1668590767597,"results":"618","hashOfConfig":"606"},{"size":965,"mtime":1668590767597,"results":"619","hashOfConfig":"606"},{"size":3294,"mtime":1668590767597,"results":"620","hashOfConfig":"606"},{"size":629,"mtime":1668590767597,"results":"621","hashOfConfig":"606"},{"size":704,"mtime":1668590767597,"results":"622","hashOfConfig":"606"},{"size":1951,"mtime":1668590767738,"results":"623","hashOfConfig":"606"},{"size":396,"mtime":1668590767597,"results":"624","hashOfConfig":"606"},{"size":5974,"mtime":1668590767675,"results":"625","hashOfConfig":"606"},{"size":1109,"mtime":1668590767582,"results":"626","hashOfConfig":"606"},{"size":762,"mtime":1668590767582,"results":"627","hashOfConfig":"606"},{"size":4221,"mtime":1670423186648,"results":"628","hashOfConfig":"606"},{"size":3361,"mtime":1668759855498,"results":"629","hashOfConfig":"606"},{"size":880,"mtime":1668590767582,"results":"630","hashOfConfig":"606"},{"size":8361,"mtime":1668590767738,"results":"631","hashOfConfig":"606"},{"size":3812,"mtime":1668590767738,"results":"632","hashOfConfig":"606"},{"size":6490,"mtime":1668590767738,"results":"633","hashOfConfig":"606"},{"size":6015,"mtime":1668590767738,"results":"634","hashOfConfig":"606"},{"size":3048,"mtime":1668590767738,"results":"635","hashOfConfig":"606"},{"size":3055,"mtime":1668590767738,"results":"636","hashOfConfig":"606"},{"size":4282,"mtime":1668760123350,"results":"637","hashOfConfig":"606"},{"size":2350,"mtime":1668590767738,"results":"638","hashOfConfig":"606"},{"size":2051,"mtime":1668590767738,"results":"639","hashOfConfig":"606"},{"size":17250,"mtime":1671206079131,"results":"640","hashOfConfig":"606"},{"size":3174,"mtime":1668590767738,"results":"641","hashOfConfig":"606"},{"size":2513,"mtime":1668590767738,"results":"642","hashOfConfig":"606"},{"size":14514,"mtime":1670423200588,"results":"643","hashOfConfig":"606"},{"size":2164,"mtime":1668590767738,"results":"644","hashOfConfig":"606"},{"size":1615,"mtime":1668590767738,"results":"645","hashOfConfig":"606"},{"size":3265,"mtime":1668590767582,"results":"646","hashOfConfig":"606"},{"size":5055,"mtime":1668590767582,"results":"647","hashOfConfig":"606"},{"size":11636,"mtime":1668590767582,"results":"648","hashOfConfig":"606"},{"size":6691,"mtime":1668590767582,"results":"649","hashOfConfig":"606"},{"size":5252,"mtime":1668590767582,"results":"650","hashOfConfig":"606"},{"size":22681,"mtime":1668590767582,"results":"651","hashOfConfig":"606"},{"size":350,"mtime":1668590767754,"results":"652","hashOfConfig":"606"},{"size":1431,"mtime":1668590767707,"results":"653","hashOfConfig":"606"},{"size":1552,"mtime":1668590767738,"results":"654","hashOfConfig":"606"},{"size":916,"mtime":1668590767707,"results":"655","hashOfConfig":"606"},{"size":267,"mtime":1668590767707,"results":"656","hashOfConfig":"606"},{"size":16938,"mtime":1671211553261,"results":"657","hashOfConfig":"606"},{"size":465,"mtime":1668590767582,"results":"658","hashOfConfig":"606"},{"size":1436,"mtime":1668590767597,"results":"659","hashOfConfig":"606"},{"size":288,"mtime":1668590767582,"results":"660","hashOfConfig":"606"},{"size":4749,"mtime":1668590767738,"results":"661","hashOfConfig":"606"},{"size":4123,"mtime":1668590767707,"results":"662","hashOfConfig":"606"},{"size":1837,"mtime":1668590767722,"results":"663","hashOfConfig":"606"},{"size":1074,"mtime":1668590767707,"results":"664","hashOfConfig":"606"},{"size":8944,"mtime":1668590767722,"results":"665","hashOfConfig":"606"},{"size":2599,"mtime":1669842793057,"results":"666","hashOfConfig":"606"},{"size":1412,"mtime":1668590767722,"results":"667","hashOfConfig":"606"},{"size":4278,"mtime":1668590767722,"results":"668","hashOfConfig":"606"},{"size":1310,"mtime":1668590767722,"results":"669","hashOfConfig":"606"},{"size":62868,"mtime":1669842567369,"results":"670","hashOfConfig":"606"},{"size":17652,"mtime":1671209138835,"results":"671","hashOfConfig":"606"},{"size":2629,"mtime":1670580084658,"results":"672","hashOfConfig":"606"},{"size":2523,"mtime":1668590767754,"results":"673","hashOfConfig":"606"},{"size":4349,"mtime":1668590767738,"results":"674","hashOfConfig":"606"},{"size":2793,"mtime":1668590767738,"results":"675","hashOfConfig":"606"},{"size":1113,"mtime":1668590767707,"results":"676","hashOfConfig":"606"},{"size":1149,"mtime":1668590767597,"results":"677","hashOfConfig":"606"},{"size":349,"mtime":1668590767754,"results":"678","hashOfConfig":"606"},{"size":1092,"mtime":1668590767754,"results":"679","hashOfConfig":"606"},{"size":2382,"mtime":1668590767754,"results":"680","hashOfConfig":"606"},{"size":5353,"mtime":1668590767754,"results":"681","hashOfConfig":"606"},{"size":548,"mtime":1668590767738,"results":"682","hashOfConfig":"606"},{"size":608,"mtime":1668590767738,"results":"683","hashOfConfig":"606"},{"size":707,"mtime":1668590767738,"results":"684","hashOfConfig":"606"},{"size":341,"mtime":1668590767738,"results":"685","hashOfConfig":"606"},{"size":1441,"mtime":1668590767738,"results":"686","hashOfConfig":"606"},{"size":379,"mtime":1668590767738,"results":"687","hashOfConfig":"606"},{"size":1075,"mtime":1668590767738,"results":"688","hashOfConfig":"606"},{"size":280,"mtime":1668590767738,"results":"689","hashOfConfig":"606"},{"size":981,"mtime":1668590767738,"results":"690","hashOfConfig":"606"},{"size":416,"mtime":1668590767738,"results":"691","hashOfConfig":"606"},{"size":278,"mtime":1668590767738,"results":"692","hashOfConfig":"606"},{"size":469,"mtime":1668590767738,"results":"693","hashOfConfig":"606"},{"size":650,"mtime":1668590767738,"results":"694","hashOfConfig":"606"},{"size":283,"mtime":1668590767738,"results":"695","hashOfConfig":"606"},{"size":788,"mtime":1668590767738,"results":"696","hashOfConfig":"606"},{"size":409,"mtime":1668590767738,"results":"697","hashOfConfig":"606"},{"size":192,"mtime":1668590767738,"results":"698","hashOfConfig":"606"},{"size":336,"mtime":1668590767738,"results":"699","hashOfConfig":"606"},{"size":331,"mtime":1668590767738,"results":"700","hashOfConfig":"606"},{"size":496,"mtime":1668590767738,"results":"701","hashOfConfig":"606"},{"size":429,"mtime":1668590767738,"results":"702","hashOfConfig":"606"},{"size":483,"mtime":1668590767738,"results":"703","hashOfConfig":"606"},{"size":983,"mtime":1668590767738,"results":"704","hashOfConfig":"606"},{"size":1536,"mtime":1668590767738,"results":"705","hashOfConfig":"606"},{"size":723,"mtime":1668590767738,"results":"706","hashOfConfig":"606"},{"size":1913,"mtime":1668590767738,"results":"707","hashOfConfig":"606"},{"size":1126,"mtime":1668590767738,"results":"708","hashOfConfig":"606"},{"size":825,"mtime":1668590767738,"results":"709","hashOfConfig":"606"},{"size":748,"mtime":1668590767738,"results":"710","hashOfConfig":"606"},{"size":456,"mtime":1668590767738,"results":"711","hashOfConfig":"606"},{"size":1476,"mtime":1668590767738,"results":"712","hashOfConfig":"606"},{"size":9065,"mtime":1671211525960,"results":"713","hashOfConfig":"606"},{"size":1708,"mtime":1668590767738,"results":"714","hashOfConfig":"606"},{"size":372,"mtime":1668590767738,"results":"715","hashOfConfig":"606"},{"size":355,"mtime":1668590767738,"results":"716","hashOfConfig":"606"},{"size":2202,"mtime":1668590767738,"results":"717","hashOfConfig":"606"},{"size":784,"mtime":1668590767738,"results":"718","hashOfConfig":"606"},{"size":331,"mtime":1668590767738,"results":"719","hashOfConfig":"606"},{"size":3062,"mtime":1668590767738,"results":"720","hashOfConfig":"606"},{"size":242,"mtime":1668590767738,"results":"721","hashOfConfig":"606"},{"size":902,"mtime":1668590767754,"results":"722","hashOfConfig":"606"},{"size":908,"mtime":1668590767738,"results":"723","hashOfConfig":"606"},{"size":487,"mtime":1668590767738,"results":"724","hashOfConfig":"606"},{"size":1436,"mtime":1668590767738,"results":"725","hashOfConfig":"606"},{"size":2598,"mtime":1668590767738,"results":"726","hashOfConfig":"606"},{"size":911,"mtime":1668590767597,"results":"727","hashOfConfig":"606"},{"size":999,"mtime":1668590767754,"results":"728","hashOfConfig":"606"},{"size":917,"mtime":1668590767738,"results":"729","hashOfConfig":"606"},{"size":977,"mtime":1668590767738,"results":"730","hashOfConfig":"606"},{"size":1990,"mtime":1668590767754,"results":"731","hashOfConfig":"606"},{"size":1216,"mtime":1668845938031,"results":"732","hashOfConfig":"606"},{"size":3131,"mtime":1668590767754,"results":"733","hashOfConfig":"606"},{"size":884,"mtime":1668590767754,"results":"734","hashOfConfig":"606"},{"size":1096,"mtime":1668590767754,"results":"735","hashOfConfig":"606"},{"size":487,"mtime":1668590767754,"results":"736","hashOfConfig":"606"},{"size":1323,"mtime":1668590767754,"results":"737","hashOfConfig":"606"},{"size":960,"mtime":1668590767754,"results":"738","hashOfConfig":"606"},{"size":1512,"mtime":1668590767738,"results":"739","hashOfConfig":"606"},{"size":257,"mtime":1668590767597,"results":"740","hashOfConfig":"606"},{"size":682,"mtime":1668590767660,"results":"741","hashOfConfig":"606"},{"size":3193,"mtime":1668590767660,"results":"742","hashOfConfig":"606"},{"size":6612,"mtime":1671211129864,"results":"743","hashOfConfig":"606"},{"size":2088,"mtime":1668590767660,"results":"744","hashOfConfig":"606"},{"size":5011,"mtime":1668590767660,"results":"745","hashOfConfig":"606"},{"size":5498,"mtime":1668590767660,"results":"746","hashOfConfig":"606"},{"size":6531,"mtime":1669116776473,"results":"747","hashOfConfig":"606"},{"size":2488,"mtime":1668590767660,"results":"748","hashOfConfig":"606"},{"size":5678,"mtime":1670923251573,"results":"749","hashOfConfig":"606"},{"size":5858,"mtime":1668590767660,"results":"750","hashOfConfig":"606"},{"size":1627,"mtime":1668590767660,"results":"751","hashOfConfig":"606"},{"size":5227,"mtime":1669912554629,"results":"752","hashOfConfig":"606"},{"size":2931,"mtime":1668590767660,"results":"753","hashOfConfig":"606"},{"size":2401,"mtime":1668590767660,"results":"754","hashOfConfig":"606"},{"size":2111,"mtime":1668590767660,"results":"755","hashOfConfig":"606"},{"size":6920,"mtime":1669913609191,"results":"756","hashOfConfig":"606"},{"size":512,"mtime":1668590767597,"results":"757","hashOfConfig":"606"},{"size":1463,"mtime":1668590767597,"results":"758","hashOfConfig":"606"},{"size":2151,"mtime":1668590767597,"results":"759","hashOfConfig":"606"},{"size":5566,"mtime":1668590767660,"results":"760","hashOfConfig":"606"},{"size":4844,"mtime":1668590767660,"results":"761","hashOfConfig":"606"},{"size":5036,"mtime":1668590767660,"results":"762","hashOfConfig":"606"},{"size":1207,"mtime":1668590767660,"results":"763","hashOfConfig":"606"},{"size":24596,"mtime":1670925668734,"results":"764","hashOfConfig":"606"},{"size":25243,"mtime":1670600061540,"results":"765","hashOfConfig":"606"},{"size":6361,"mtime":1668590767660,"results":"766","hashOfConfig":"606"},{"size":2998,"mtime":1669843925883,"results":"767","hashOfConfig":"606"},{"size":3109,"mtime":1668590767660,"results":"768","hashOfConfig":"606"},{"size":4055,"mtime":1668590767660,"results":"769","hashOfConfig":"606"},{"size":1157,"mtime":1668590767597,"results":"770","hashOfConfig":"606"},{"size":4347,"mtime":1668590767597,"results":"771","hashOfConfig":"606"},{"size":6621,"mtime":1669195091372,"results":"772","hashOfConfig":"606"},{"size":24594,"mtime":1670922682791,"results":"773","hashOfConfig":"606"},{"size":798,"mtime":1668590767675,"results":"774","hashOfConfig":"606"},{"size":490,"mtime":1668590767675,"results":"775","hashOfConfig":"606"},{"size":522,"mtime":1668590767691,"results":"776","hashOfConfig":"606"},{"size":332,"mtime":1668590767660,"results":"777","hashOfConfig":"606"},{"size":57,"mtime":1668590767660,"results":"778","hashOfConfig":"606"},{"size":1369,"mtime":1668590767675,"results":"779","hashOfConfig":"606"},{"size":212,"mtime":1668590767660,"results":"780","hashOfConfig":"606"},{"size":1307,"mtime":1668590767675,"results":"781","hashOfConfig":"606"},{"size":807,"mtime":1668590767675,"results":"782","hashOfConfig":"606"},{"size":672,"mtime":1668590767675,"results":"783","hashOfConfig":"606"},{"size":1503,"mtime":1668590767675,"results":"784","hashOfConfig":"606"},{"size":4627,"mtime":1668590767675,"results":"785","hashOfConfig":"606"},{"size":4274,"mtime":1668590767675,"results":"786","hashOfConfig":"606"},{"size":2097,"mtime":1668590767675,"results":"787","hashOfConfig":"606"},{"size":3176,"mtime":1668590767675,"results":"788","hashOfConfig":"606"},{"size":3787,"mtime":1668590767675,"results":"789","hashOfConfig":"606"},{"size":2510,"mtime":1668590767675,"results":"790","hashOfConfig":"606"},{"size":2128,"mtime":1668590767675,"results":"791","hashOfConfig":"606"},{"size":801,"mtime":1668590767675,"results":"792","hashOfConfig":"606"},{"size":640,"mtime":1668590767675,"results":"793","hashOfConfig":"606"},{"size":1149,"mtime":1668590767675,"results":"794","hashOfConfig":"606"},{"size":2089,"mtime":1668590767675,"results":"795","hashOfConfig":"606"},{"size":940,"mtime":1668590767675,"results":"796","hashOfConfig":"606"},{"size":2962,"mtime":1668590767597,"results":"797","hashOfConfig":"606"},{"size":1706,"mtime":1668689970103,"results":"798","hashOfConfig":"606"},{"size":1382,"mtime":1668590767597,"results":"799","hashOfConfig":"606"},{"size":835,"mtime":1668590767660,"results":"800","hashOfConfig":"606"},{"size":722,"mtime":1668590767660,"results":"801","hashOfConfig":"606"},{"size":725,"mtime":1668590767644,"results":"802","hashOfConfig":"606"},{"size":433,"mtime":1668590767675,"results":"803","hashOfConfig":"606"},{"size":1967,"mtime":1668590767660,"results":"804","hashOfConfig":"606"},{"size":2592,"mtime":1668590767660,"results":"805","hashOfConfig":"606"},{"size":1139,"mtime":1668590767660,"results":"806","hashOfConfig":"606"},{"size":2738,"mtime":1668590767660,"results":"807","hashOfConfig":"606"},{"size":1315,"mtime":1668590767644,"results":"808","hashOfConfig":"606"},{"size":1538,"mtime":1668590767644,"results":"809","hashOfConfig":"606"},{"size":1005,"mtime":1668590767644,"results":"810","hashOfConfig":"606"},{"size":5104,"mtime":1668590767644,"results":"811","hashOfConfig":"606"},{"size":4195,"mtime":1668590767644,"results":"812","hashOfConfig":"606"},{"size":4236,"mtime":1668590767644,"results":"813","hashOfConfig":"606"},{"size":2759,"mtime":1668590767644,"results":"814","hashOfConfig":"606"},{"size":1512,"mtime":1668590767644,"results":"815","hashOfConfig":"606"},{"size":3256,"mtime":1668689970105,"results":"816","hashOfConfig":"606"},{"size":18471,"mtime":1668689970105,"results":"817","hashOfConfig":"606"},{"size":5574,"mtime":1668590767644,"results":"818","hashOfConfig":"606"},{"size":2445,"mtime":1668590767675,"results":"819","hashOfConfig":"606"},{"size":2529,"mtime":1668590767675,"results":"820","hashOfConfig":"606"},{"size":2114,"mtime":1668590767675,"results":"821","hashOfConfig":"606"},{"size":1623,"mtime":1668590767675,"results":"822","hashOfConfig":"606"},{"size":1437,"mtime":1668590767675,"results":"823","hashOfConfig":"606"},{"size":5525,"mtime":1668590767582,"results":"824","hashOfConfig":"606"},{"size":3896,"mtime":1668590767582,"results":"825","hashOfConfig":"606"},{"size":2027,"mtime":1668590767582,"results":"826","hashOfConfig":"606"},{"size":4992,"mtime":1668590767582,"results":"827","hashOfConfig":"606"},{"size":5113,"mtime":1668590767582,"results":"828","hashOfConfig":"606"},{"size":290,"mtime":1668590767675,"results":"829","hashOfConfig":"606"},{"size":5496,"mtime":1668590767582,"results":"830","hashOfConfig":"606"},{"size":18695,"mtime":1668590767582,"results":"831","hashOfConfig":"606"},{"size":127068,"mtime":1668590767597,"results":"832","hashOfConfig":"606"},{"size":281912,"mtime":1668590767597,"results":"833","hashOfConfig":"606"},{"size":189235,"mtime":1668590767582,"results":"834","hashOfConfig":"606"},{"size":182226,"mtime":1668590767597,"results":"835","hashOfConfig":"606"},{"size":849,"mtime":1668590767754,"results":"836","hashOfConfig":"606"},{"size":188,"mtime":1668590767754,"results":"837","hashOfConfig":"606"},{"size":160975,"mtime":1668590767582,"results":"838","hashOfConfig":"606"},{"size":184205,"mtime":1668590767582,"results":"839","hashOfConfig":"606"},{"size":27407,"mtime":1668590767597,"results":"840","hashOfConfig":"606"},{"size":190555,"mtime":1668590767597,"results":"841","hashOfConfig":"606"},{"size":85907,"mtime":1668590767582,"results":"842","hashOfConfig":"606"},{"size":767,"mtime":1668635081450,"results":"843","hashOfConfig":"606"},{"size":854,"mtime":1668590767597,"results":"844","hashOfConfig":"606"},{"size":298,"mtime":1668590767660,"results":"845","hashOfConfig":"606"},{"size":467,"mtime":1668590767660,"results":"846","hashOfConfig":"606"},{"size":310,"mtime":1668590767660,"results":"847","hashOfConfig":"606"},{"size":9326,"mtime":1668590767660,"results":"848","hashOfConfig":"606"},{"size":1352,"mtime":1668590767660,"results":"849","hashOfConfig":"606"},{"size":643,"mtime":1668590767660,"results":"850","hashOfConfig":"606"},{"size":1199,"mtime":1668590767660,"results":"851","hashOfConfig":"606"},{"size":59,"mtime":1668590767675,"results":"852","hashOfConfig":"606"},{"size":57,"mtime":1668590767675,"results":"853","hashOfConfig":"606"},{"size":55,"mtime":1668590767675,"results":"854","hashOfConfig":"606"},{"size":55,"mtime":1668590767675,"results":"855","hashOfConfig":"606"},{"size":59,"mtime":1668590767675,"results":"856","hashOfConfig":"606"},{"size":57,"mtime":1668590767675,"results":"857","hashOfConfig":"606"},{"size":55,"mtime":1668590767675,"results":"858","hashOfConfig":"606"},{"size":109,"mtime":1668590767675,"results":"859","hashOfConfig":"606"},{"size":948,"mtime":1668590767675,"results":"860","hashOfConfig":"606"},{"size":873,"mtime":1668590767675,"results":"861","hashOfConfig":"606"},{"size":307,"mtime":1668590767675,"results":"862","hashOfConfig":"606"},{"size":1258,"mtime":1668590767675,"results":"863","hashOfConfig":"606"},{"size":1283,"mtime":1668590767675,"results":"864","hashOfConfig":"606"},{"size":946,"mtime":1668590767675,"results":"865","hashOfConfig":"606"},{"size":970,"mtime":1668590767675,"results":"866","hashOfConfig":"606"},{"size":726,"mtime":1668590767675,"results":"867","hashOfConfig":"606"},{"size":1641,"mtime":1668590767675,"results":"868","hashOfConfig":"606"},{"size":901,"mtime":1668590767675,"results":"869","hashOfConfig":"606"},{"size":1398,"mtime":1668590767675,"results":"870","hashOfConfig":"606"},{"size":451,"mtime":1668590767675,"results":"871","hashOfConfig":"606"},{"size":678,"mtime":1668590767675,"results":"872","hashOfConfig":"606"},{"size":450,"mtime":1668590767675,"results":"873","hashOfConfig":"606"},{"size":662,"mtime":1668590767675,"results":"874","hashOfConfig":"606"},{"size":695,"mtime":1668590767660,"results":"875","hashOfConfig":"606"},{"size":1190,"mtime":1668590767675,"results":"876","hashOfConfig":"606"},{"size":859,"mtime":1668590767660,"results":"877","hashOfConfig":"606"},{"size":460,"mtime":1668590767675,"results":"878","hashOfConfig":"606"},{"size":1567,"mtime":1668590767597,"results":"879","hashOfConfig":"606"},{"size":10890,"mtime":1668689970127,"results":"880","hashOfConfig":"606"},{"size":11005,"mtime":1670579727696,"results":"881","hashOfConfig":"606"},{"size":4013,"mtime":1669912674819,"results":"882","hashOfConfig":"606"},{"size":1157,"mtime":1668590767707,"results":"883","hashOfConfig":"606"},{"size":1010,"mtime":1668590767707,"results":"884","hashOfConfig":"606"},{"size":274,"mtime":1668590767660,"results":"885","hashOfConfig":"606"},{"size":1304,"mtime":1668590767707,"results":"886","hashOfConfig":"606"},{"size":867,"mtime":1668590767707,"results":"887","hashOfConfig":"606"},{"size":1899,"mtime":1668590767722,"results":"888","hashOfConfig":"606"},{"size":1290,"mtime":1668590767722,"results":"889","hashOfConfig":"606"},{"size":1762,"mtime":1668590767722,"results":"890","hashOfConfig":"606"},{"size":5891,"mtime":1668590767707,"results":"891","hashOfConfig":"606"},{"size":6078,"mtime":1671210631309,"results":"892","hashOfConfig":"606"},{"size":602,"mtime":1668590767722,"results":"893","hashOfConfig":"606"},{"size":557,"mtime":1668590767722,"results":"894","hashOfConfig":"606"},{"size":320,"mtime":1668590767707,"results":"895","hashOfConfig":"606"},{"size":599,"mtime":1668590767707,"results":"896","hashOfConfig":"606"},{"size":1948,"mtime":1668590767707,"results":"897","hashOfConfig":"606"},{"size":9878,"mtime":1670579709529,"results":"898","hashOfConfig":"606"},{"size":448,"mtime":1668590767722,"results":"899","hashOfConfig":"606"},{"size":466,"mtime":1668590767722,"results":"900","hashOfConfig":"606"},{"size":497,"mtime":1668590767722,"results":"901","hashOfConfig":"606"},{"size":473,"mtime":1668590767722,"results":"902","hashOfConfig":"606"},{"size":713,"mtime":1668590767722,"results":"903","hashOfConfig":"606"},{"size":734,"mtime":1668590767722,"results":"904","hashOfConfig":"606"},{"size":1352,"mtime":1668590767707,"results":"905","hashOfConfig":"606"},{"size":507,"mtime":1670923109458,"results":"906","hashOfConfig":"606"},{"size":3255,"mtime":1668590767722,"results":"907","hashOfConfig":"606"},{"size":472,"mtime":1668590767722,"results":"908","hashOfConfig":"606"},{"size":9726,"mtime":1668590767722,"results":"909","hashOfConfig":"606"},{"size":3793,"mtime":1668590767660,"results":"910","hashOfConfig":"606"},{"size":3317,"mtime":1668590767660,"results":"911","hashOfConfig":"606"},{"size":5020,"mtime":1668590767660,"results":"912","hashOfConfig":"606"},{"size":195,"mtime":1668590767644,"results":"913","hashOfConfig":"606"},{"size":1907,"mtime":1668590767660,"results":"914","hashOfConfig":"606"},{"size":1859,"mtime":1668590767722,"results":"915","hashOfConfig":"606"},{"size":4922,"mtime":1668590767722,"results":"916","hashOfConfig":"606"},{"size":1008,"mtime":1668590767722,"results":"917","hashOfConfig":"606"},{"size":1006,"mtime":1668590767722,"results":"918","hashOfConfig":"606"},{"size":11061,"mtime":1668689970116,"results":"919","hashOfConfig":"606"},{"size":1001,"mtime":1668590767722,"results":"920","hashOfConfig":"606"},{"size":8889,"mtime":1668692054466,"results":"921","hashOfConfig":"606"},{"size":942,"mtime":1668590767722,"results":"922","hashOfConfig":"606"},{"size":3536,"mtime":1668590767722,"results":"923","hashOfConfig":"606"},{"size":4402,"mtime":1668590767722,"results":"924","hashOfConfig":"606"},{"size":1944,"mtime":1668590767722,"results":"925","hashOfConfig":"606"},{"size":10384,"mtime":1668590767722,"results":"926","hashOfConfig":"606"},{"size":6461,"mtime":1668590767722,"results":"927","hashOfConfig":"606"},{"size":6090,"mtime":1668590767722,"results":"928","hashOfConfig":"606"},{"size":2069,"mtime":1668590767722,"results":"929","hashOfConfig":"606"},{"size":2305,"mtime":1668590767722,"results":"930","hashOfConfig":"606"},{"size":1786,"mtime":1671031599619,"results":"931","hashOfConfig":"606"},{"size":2026,"mtime":1668590767722,"results":"932","hashOfConfig":"606"},{"size":2606,"mtime":1671128420773,"results":"933","hashOfConfig":"606"},{"size":4218,"mtime":1668590767722,"results":"934","hashOfConfig":"606"},{"size":2741,"mtime":1668590767722,"results":"935","hashOfConfig":"606"},{"size":4218,"mtime":1668590767722,"results":"936","hashOfConfig":"606"},{"size":4217,"mtime":1668590767722,"results":"937","hashOfConfig":"606"},{"size":4222,"mtime":1668590767722,"results":"938","hashOfConfig":"606"},{"size":11328,"mtime":1668590767722,"results":"939","hashOfConfig":"606"},{"size":8442,"mtime":1668590767722,"results":"940","hashOfConfig":"606"},{"size":1839,"mtime":1668590767722,"results":"941","hashOfConfig":"606"},{"size":9143,"mtime":1668590767722,"results":"942","hashOfConfig":"606"},{"size":8731,"mtime":1668590767722,"results":"943","hashOfConfig":"606"},{"size":9168,"mtime":1668590767722,"results":"944","hashOfConfig":"606"},{"size":4177,"mtime":1668590767722,"results":"945","hashOfConfig":"606"},{"size":169,"mtime":1668590767660,"results":"946","hashOfConfig":"606"},{"size":6227,"mtime":1668590767597,"results":"947","hashOfConfig":"606"},{"size":285,"mtime":1668590767644,"results":"948","hashOfConfig":"606"},{"size":685,"mtime":1668590767629,"results":"949","hashOfConfig":"606"},{"size":1074,"mtime":1668590767613,"results":"950","hashOfConfig":"606"},{"size":2809,"mtime":1668590767722,"results":"951","hashOfConfig":"606"},{"size":15545,"mtime":1668590767722,"results":"952","hashOfConfig":"606"},{"size":5569,"mtime":1669912822539,"results":"953","hashOfConfig":"606"},{"size":1677,"mtime":1669198945417,"results":"954","hashOfConfig":"606"},{"size":7003,"mtime":1668590767644,"results":"955","hashOfConfig":"606"},{"size":2983,"mtime":1668590767644,"results":"956","hashOfConfig":"606"},{"size":13989,"mtime":1668590767644,"results":"957","hashOfConfig":"606"},{"size":13677,"mtime":1668590767644,"results":"958","hashOfConfig":"606"},{"size":2094,"mtime":1668590767722,"results":"959","hashOfConfig":"606"},{"size":3587,"mtime":1668590767722,"results":"960","hashOfConfig":"606"},{"size":4324,"mtime":1671128419209,"results":"961","hashOfConfig":"606"},{"size":3322,"mtime":1668590767597,"results":"962","hashOfConfig":"606"},{"size":10903,"mtime":1668689970103,"results":"963","hashOfConfig":"606"},{"size":1770,"mtime":1668590767613,"results":"964","hashOfConfig":"606"},{"size":222,"mtime":1668690926709,"results":"965","hashOfConfig":"606"},{"size":2323,"mtime":1668590767738,"results":"966","hashOfConfig":"606"},{"size":325,"mtime":1668590767738,"results":"967","hashOfConfig":"606"},{"size":2788,"mtime":1670321461624,"results":"968","hashOfConfig":"606"},{"size":5808,"mtime":1671206061005,"results":"969","hashOfConfig":"606"},{"size":812,"mtime":1668590767707,"results":"970","hashOfConfig":"606"},{"size":913,"mtime":1668590767707,"results":"971","hashOfConfig":"606"},{"size":557,"mtime":1668590767707,"results":"972","hashOfConfig":"606"},{"size":5762,"mtime":1671031306792,"results":"973","hashOfConfig":"606"},{"size":37779,"mtime":1671031163867,"results":"974","hashOfConfig":"606"},{"size":3037,"mtime":1668590767691,"results":"975","hashOfConfig":"606"},{"size":3020,"mtime":1671210604393,"results":"976","hashOfConfig":"606"},{"size":3945,"mtime":1671032090271,"results":"977","hashOfConfig":"606"},{"size":16846,"mtime":1669914525728,"results":"978","hashOfConfig":"606"},{"size":302,"mtime":1668590767644,"results":"979","hashOfConfig":"606"},{"size":183,"mtime":1668590767644,"results":"980","hashOfConfig":"606"},{"size":3530,"mtime":1668590767660,"results":"981","hashOfConfig":"606"},{"size":1283,"mtime":1668590767660,"results":"982","hashOfConfig":"606"},{"size":2555,"mtime":1668590767660,"results":"983","hashOfConfig":"606"},{"size":51934,"mtime":1671032015140,"results":"984","hashOfConfig":"606"},{"size":4219,"mtime":1670922711935,"results":"985","hashOfConfig":"606"},{"size":51,"mtime":1668590767644,"results":"986","hashOfConfig":"606"},{"size":3941,"mtime":1668590767613,"results":"987","hashOfConfig":"606"},{"size":6960,"mtime":1668590767613,"results":"988","hashOfConfig":"606"},{"size":1702,"mtime":1668590767613,"results":"989","hashOfConfig":"606"},{"size":3590,"mtime":1668590767613,"results":"990","hashOfConfig":"606"},{"size":637,"mtime":1668590767644,"results":"991","hashOfConfig":"606"},{"size":3339,"mtime":1668590767613,"results":"992","hashOfConfig":"606"},{"size":235,"mtime":1668590767644,"results":"993","hashOfConfig":"606"},{"size":3515,"mtime":1668590767597,"results":"994","hashOfConfig":"606"},{"size":4597,"mtime":1668590767597,"results":"995","hashOfConfig":"606"},{"size":3389,"mtime":1668590767597,"results":"996","hashOfConfig":"606"},{"size":3161,"mtime":1668590767597,"results":"997","hashOfConfig":"606"},{"size":1915,"mtime":1668590767597,"results":"998","hashOfConfig":"606"},{"size":3436,"mtime":1668590767597,"results":"999","hashOfConfig":"606"},{"size":5227,"mtime":1668593662610,"results":"1000","hashOfConfig":"606"},{"size":1846,"mtime":1668590767597,"results":"1001","hashOfConfig":"606"},{"size":736,"mtime":1668590767613,"results":"1002","hashOfConfig":"606"},{"size":136,"mtime":1668590767613,"results":"1003","hashOfConfig":"606"},{"size":555,"mtime":1668590767613,"results":"1004","hashOfConfig":"606"},{"size":882,"mtime":1668590767613,"results":"1005","hashOfConfig":"606"},{"size":785,"mtime":1668590767629,"results":"1006","hashOfConfig":"606"},{"size":880,"mtime":1668590767629,"results":"1007","hashOfConfig":"606"},{"size":839,"mtime":1668590767629,"results":"1008","hashOfConfig":"606"},{"size":5257,"mtime":1668760652340,"results":"1009","hashOfConfig":"606"},{"size":1817,"mtime":1668590767597,"results":"1010","hashOfConfig":"606"},{"size":3914,"mtime":1668590767597,"results":"1011","hashOfConfig":"606"},{"size":2634,"mtime":1668590767629,"results":"1012","hashOfConfig":"606"},{"size":2167,"mtime":1668590767629,"results":"1013","hashOfConfig":"606"},{"size":4337,"mtime":1668590767629,"results":"1014","hashOfConfig":"606"},{"size":1725,"mtime":1668590767707,"results":"1015","hashOfConfig":"606"},{"size":329,"mtime":1668590767613,"results":"1016","hashOfConfig":"606"},{"size":2383,"mtime":1668590767629,"results":"1017","hashOfConfig":"606"},{"size":7033,"mtime":1668590767629,"results":"1018","hashOfConfig":"606"},{"size":191,"mtime":1668590767691,"results":"1019","hashOfConfig":"606"},{"size":3127,"mtime":1668590767629,"results":"1020","hashOfConfig":"606"},{"size":1708,"mtime":1668590767629,"results":"1021","hashOfConfig":"606"},{"size":3443,"mtime":1668590767629,"results":"1022","hashOfConfig":"606"},{"size":3116,"mtime":1668590767629,"results":"1023","hashOfConfig":"606"},{"size":1990,"mtime":1668590767629,"results":"1024","hashOfConfig":"606"},{"size":4240,"mtime":1668590767629,"results":"1025","hashOfConfig":"606"},{"size":7352,"mtime":1668590767644,"results":"1026","hashOfConfig":"606"},{"size":2689,"mtime":1668590767644,"results":"1027","hashOfConfig":"606"},{"size":740,"mtime":1668689970126,"results":"1028","hashOfConfig":"606"},{"size":11350,"mtime":1670579807049,"results":"1029","hashOfConfig":"606"},{"size":5540,"mtime":1668590767644,"results":"1030","hashOfConfig":"606"},{"size":4928,"mtime":1668590767644,"results":"1031","hashOfConfig":"606"},{"size":2648,"mtime":1668590767644,"results":"1032","hashOfConfig":"606"},{"size":1806,"mtime":1668590767707,"results":"1033","hashOfConfig":"606"},{"size":1669,"mtime":1668590767707,"results":"1034","hashOfConfig":"606"},{"size":2116,"mtime":1668590767644,"results":"1035","hashOfConfig":"606"},{"size":758,"mtime":1668590767629,"results":"1036","hashOfConfig":"606"},{"size":2673,"mtime":1668590767644,"results":"1037","hashOfConfig":"606"},{"size":1440,"mtime":1668590767644,"results":"1038","hashOfConfig":"606"},{"size":1554,"mtime":1668590767644,"results":"1039","hashOfConfig":"606"},{"size":7632,"mtime":1668590767644,"results":"1040","hashOfConfig":"606"},{"size":3925,"mtime":1668590767644,"results":"1041","hashOfConfig":"606"},{"size":2244,"mtime":1668590767613,"results":"1042","hashOfConfig":"606"},{"size":9688,"mtime":1668590767644,"results":"1043","hashOfConfig":"606"},{"size":5123,"mtime":1668590767644,"results":"1044","hashOfConfig":"606"},{"size":5563,"mtime":1668590767644,"results":"1045","hashOfConfig":"606"},{"size":2960,"mtime":1668590767754,"results":"1046","hashOfConfig":"606"},{"size":1653,"mtime":1668590767644,"results":"1047","hashOfConfig":"606"},{"size":3726,"mtime":1668590767597,"results":"1048","hashOfConfig":"606"},{"size":1949,"mtime":1668590767644,"results":"1049","hashOfConfig":"606"},{"size":2453,"mtime":1668590767597,"results":"1050","hashOfConfig":"606"},{"size":1089,"mtime":1668590767644,"results":"1051","hashOfConfig":"606"},{"size":2250,"mtime":1668590767644,"results":"1052","hashOfConfig":"606"},{"size":2193,"mtime":1668590767644,"results":"1053","hashOfConfig":"606"},{"size":6880,"mtime":1668590767644,"results":"1054","hashOfConfig":"606"},{"size":3362,"mtime":1668590767644,"results":"1055","hashOfConfig":"606"},{"size":4524,"mtime":1668590767644,"results":"1056","hashOfConfig":"606"},{"size":63,"mtime":1668590767675,"results":"1057","hashOfConfig":"606"},{"size":2287,"mtime":1668590767644,"results":"1058","hashOfConfig":"606"},{"size":1079,"mtime":1668590767754,"results":"1059","hashOfConfig":"606"},{"size":1913,"mtime":1668590767629,"results":"1060","hashOfConfig":"606"},{"size":3054,"mtime":1668590767629,"results":"1061","hashOfConfig":"606"},{"size":1862,"mtime":1668590767629,"results":"1062","hashOfConfig":"606"},{"size":2421,"mtime":1668590767629,"results":"1063","hashOfConfig":"606"},{"size":2467,"mtime":1668590767629,"results":"1064","hashOfConfig":"606"},{"size":2935,"mtime":1668590767629,"results":"1065","hashOfConfig":"606"},{"size":2842,"mtime":1668590767629,"results":"1066","hashOfConfig":"606"},{"size":2917,"mtime":1668590767629,"results":"1067","hashOfConfig":"606"},{"size":3399,"mtime":1668590767629,"results":"1068","hashOfConfig":"606"},{"size":2636,"mtime":1668590767629,"results":"1069","hashOfConfig":"606"},{"size":1480,"mtime":1668590767629,"results":"1070","hashOfConfig":"606"},{"size":102,"mtime":1668590767675,"results":"1071","hashOfConfig":"606"},{"size":3076,"mtime":1668590767629,"results":"1072","hashOfConfig":"606"},{"size":1208,"mtime":1668590767597,"results":"1073","hashOfConfig":"606"},{"size":4356,"mtime":1668590767691,"results":"1074","hashOfConfig":"606"},{"size":122,"mtime":1668590767675,"results":"1075","hashOfConfig":"606"},{"size":4078,"mtime":1668590767691,"results":"1076","hashOfConfig":"606"},{"size":1958,"mtime":1668590767707,"results":"1077","hashOfConfig":"606"},{"size":7652,"mtime":1668590767691,"results":"1078","hashOfConfig":"606"},{"size":3867,"mtime":1668590767613,"results":"1079","hashOfConfig":"606"},{"size":297,"mtime":1668590767707,"results":"1080","hashOfConfig":"606"},{"size":7886,"mtime":1668590767707,"results":"1081","hashOfConfig":"606"},{"size":974,"mtime":1668590767613,"results":"1082","hashOfConfig":"606"},{"size":2514,"mtime":1668590767613,"results":"1083","hashOfConfig":"606"},{"size":7492,"mtime":1668590767613,"results":"1084","hashOfConfig":"606"},{"size":9725,"mtime":1668590767707,"results":"1085","hashOfConfig":"606"},{"size":2267,"mtime":1668763316348,"results":"1086","hashOfConfig":"606"},{"size":4085,"mtime":1668590767707,"results":"1087","hashOfConfig":"606"},{"size":4837,"mtime":1668590767613,"results":"1088","hashOfConfig":"606"},{"size":679,"mtime":1668590767597,"results":"1089","hashOfConfig":"606"},{"size":5469,"mtime":1669914798931,"results":"1090","hashOfConfig":"606"},{"size":2825,"mtime":1668590767629,"results":"1091","hashOfConfig":"606"},{"size":6602,"mtime":1668590767629,"results":"1092","hashOfConfig":"606"},{"size":2219,"mtime":1668590767629,"results":"1093","hashOfConfig":"606"},{"size":9524,"mtime":1668590767629,"results":"1094","hashOfConfig":"606"},{"size":897,"mtime":1668590767691,"results":"1095","hashOfConfig":"606"},{"size":2145,"mtime":1668590767629,"results":"1096","hashOfConfig":"606"},{"size":19669,"mtime":1671031835766,"results":"1097","hashOfConfig":"606"},{"size":44151,"mtime":1671031952662,"results":"1098","hashOfConfig":"606"},{"size":3870,"mtime":1671031855371,"results":"1099","hashOfConfig":"606"},{"size":2130,"mtime":1668590767629,"results":"1100","hashOfConfig":"606"},{"size":2086,"mtime":1668590767629,"results":"1101","hashOfConfig":"606"},{"size":1732,"mtime":1668590767629,"results":"1102","hashOfConfig":"606"},{"size":2685,"mtime":1668590767629,"results":"1103","hashOfConfig":"606"},{"size":1301,"mtime":1668590767629,"results":"1104","hashOfConfig":"606"},{"size":2683,"mtime":1668590767629,"results":"1105","hashOfConfig":"606"},{"size":5475,"mtime":1671207264268,"results":"1106","hashOfConfig":"606"},{"size":3389,"mtime":1668590767629,"results":"1107","hashOfConfig":"606"},{"size":3571,"mtime":1669199541343,"results":"1108","hashOfConfig":"606"},{"size":1486,"mtime":1669197958183,"results":"1109","hashOfConfig":"606"},{"size":2559,"mtime":1668590767613,"results":"1110","hashOfConfig":"606"},{"size":2625,"mtime":1668590767613,"results":"1111","hashOfConfig":"606"},{"size":2706,"mtime":1671031543663,"results":"1112","hashOfConfig":"606"},{"size":37249,"mtime":1669191396304,"results":"1113","hashOfConfig":"606"},{"size":2803,"mtime":1668590767629,"results":"1114","hashOfConfig":"606"},{"size":3936,"mtime":1668590767629,"results":"1115","hashOfConfig":"606"},{"size":2950,"mtime":1668590767629,"results":"1116","hashOfConfig":"606"},{"size":4721,"mtime":1668590767629,"results":"1117","hashOfConfig":"606"},{"size":2430,"mtime":1668590767629,"results":"1118","hashOfConfig":"606"},{"size":2593,"mtime":1668590767629,"results":"1119","hashOfConfig":"606"},{"size":2108,"mtime":1668590767629,"results":"1120","hashOfConfig":"606"},{"size":1169,"mtime":1668590767629,"results":"1121","hashOfConfig":"606"},{"size":6876,"mtime":1668590767629,"results":"1122","hashOfConfig":"606"},{"size":1165,"mtime":1668590767629,"results":"1123","hashOfConfig":"606"},{"size":3271,"mtime":1668590767675,"results":"1124","hashOfConfig":"606"},{"size":1168,"mtime":1668590767629,"results":"1125","hashOfConfig":"606"},{"size":3106,"mtime":1668590767613,"results":"1126","hashOfConfig":"606"},{"size":1807,"mtime":1668590767613,"results":"1127","hashOfConfig":"606"},{"size":2201,"mtime":1668590767613,"results":"1128","hashOfConfig":"606"},{"size":4404,"mtime":1668590767613,"results":"1129","hashOfConfig":"606"},{"size":2319,"mtime":1668590767613,"results":"1130","hashOfConfig":"606"},{"size":2538,"mtime":1668590767613,"results":"1131","hashOfConfig":"606"},{"size":3439,"mtime":1668590767613,"results":"1132","hashOfConfig":"606"},{"size":3050,"mtime":1668590767613,"results":"1133","hashOfConfig":"606"},{"size":2236,"mtime":1668590767613,"results":"1134","hashOfConfig":"606"},{"size":1281,"mtime":1668590767597,"results":"1135","hashOfConfig":"606"},{"size":2179,"mtime":1668590767613,"results":"1136","hashOfConfig":"606"},{"size":1386,"mtime":1668590767613,"results":"1137","hashOfConfig":"606"},{"size":3078,"mtime":1668590767613,"results":"1138","hashOfConfig":"606"},{"size":10193,"mtime":1668590767613,"results":"1139","hashOfConfig":"606"},{"size":3565,"mtime":1668590767613,"results":"1140","hashOfConfig":"606"},{"size":2294,"mtime":1668590767613,"results":"1141","hashOfConfig":"606"},{"size":2782,"mtime":1668590767613,"results":"1142","hashOfConfig":"606"},{"size":9783,"mtime":1670580016087,"results":"1143","hashOfConfig":"606"},{"size":6958,"mtime":1668590767707,"results":"1144","hashOfConfig":"606"},{"size":2157,"mtime":1668845451654,"results":"1145","hashOfConfig":"606"},{"size":6348,"mtime":1668590767675,"results":"1146","hashOfConfig":"606"},{"size":1506,"mtime":1668590767675,"results":"1147","hashOfConfig":"606"},{"size":2647,"mtime":1671211509971,"results":"1148","hashOfConfig":"606"},{"size":3569,"mtime":1668761883315,"results":"1149","hashOfConfig":"606"},{"size":4290,"mtime":1669842703582,"results":"1150","hashOfConfig":"606"},{"size":3584,"mtime":1668590767707,"results":"1151","hashOfConfig":"606"},{"size":1445,"mtime":1668590767597,"results":"1152","hashOfConfig":"606"},{"size":2674,"mtime":1668590767691,"results":"1153","hashOfConfig":"606"},{"size":3344,"mtime":1668590767691,"results":"1154","hashOfConfig":"606"},{"size":2881,"mtime":1668590767691,"results":"1155","hashOfConfig":"606"},{"size":2975,"mtime":1668590767691,"results":"1156","hashOfConfig":"606"},{"size":882,"mtime":1668590767675,"results":"1157","hashOfConfig":"606"},{"size":2051,"mtime":1668590767691,"results":"1158","hashOfConfig":"606"},{"size":2161,"mtime":1668590767691,"results":"1159","hashOfConfig":"606"},{"size":1369,"mtime":1668590767691,"results":"1160","hashOfConfig":"606"},{"size":1451,"mtime":1668590767613,"results":"1161","hashOfConfig":"606"},{"size":6225,"mtime":1668590767613,"results":"1162","hashOfConfig":"606"},{"size":2685,"mtime":1668590767613,"results":"1163","hashOfConfig":"606"},{"size":2520,"mtime":1668590767613,"results":"1164","hashOfConfig":"606"},{"size":1847,"mtime":1668590767613,"results":"1165","hashOfConfig":"606"},{"size":5760,"mtime":1668590767613,"results":"1166","hashOfConfig":"606"},{"size":5036,"mtime":1668590767613,"results":"1167","hashOfConfig":"606"},{"size":4703,"mtime":1668590767613,"results":"1168","hashOfConfig":"606"},{"size":2717,"mtime":1668590767613,"results":"1169","hashOfConfig":"606"},{"size":6855,"mtime":1668590767613,"results":"1170","hashOfConfig":"606"},{"size":2950,"mtime":1668590767613,"results":"1171","hashOfConfig":"606"},{"size":2183,"mtime":1671210197886,"results":"1172","hashOfConfig":"606"},{"size":3727,"mtime":1668590767707,"results":"1173","hashOfConfig":"606"},{"size":4430,"mtime":1668590767613,"results":"1174","hashOfConfig":"606"},{"size":1595,"mtime":1668590767613,"results":"1175","hashOfConfig":"606"},{"size":4589,"mtime":1668590767613,"results":"1176","hashOfConfig":"606"},{"size":1189,"mtime":1668590767644,"results":"1177","hashOfConfig":"606"},{"size":2378,"mtime":1668590767644,"results":"1178","hashOfConfig":"606"},{"size":2240,"mtime":1668590767644,"results":"1179","hashOfConfig":"606"},{"size":420,"mtime":1668590767691,"results":"1180","hashOfConfig":"606"},{"size":1651,"mtime":1668590767691,"results":"1181","hashOfConfig":"606"},{"size":1623,"mtime":1668590767691,"results":"1182","hashOfConfig":"606"},{"size":3413,"mtime":1668590767691,"results":"1183","hashOfConfig":"606"},{"size":4644,"mtime":1668590767691,"results":"1184","hashOfConfig":"606"},{"size":1012,"mtime":1668590767691,"results":"1185","hashOfConfig":"606"},{"size":2081,"mtime":1668590767691,"results":"1186","hashOfConfig":"606"},{"size":1358,"mtime":1668590767691,"results":"1187","hashOfConfig":"606"},{"size":5207,"mtime":1668590767675,"results":"1188","hashOfConfig":"606"},{"size":700,"mtime":1668590767754,"results":"1189","hashOfConfig":"606"},{"size":9298,"mtime":1668590767675,"results":"1190","hashOfConfig":"606"},{"size":4745,"mtime":1668590767675,"results":"1191","hashOfConfig":"606"},{"size":13677,"mtime":1668590767613,"results":"1192","hashOfConfig":"606"},{"size":1104,"mtime":1668590767691,"results":"1193","hashOfConfig":"606"},{"size":1985,"mtime":1668590767691,"results":"1194","hashOfConfig":"606"},{"size":832,"mtime":1668590767691,"results":"1195","hashOfConfig":"606"},{"size":816,"mtime":1668590767691,"results":"1196","hashOfConfig":"606"},{"size":1131,"mtime":1668590767691,"results":"1197","hashOfConfig":"606"},{"size":717,"mtime":1668590767691,"results":"1198","hashOfConfig":"606"},{"size":1504,"mtime":1668590767691,"results":"1199","hashOfConfig":"606"},{"size":1773,"mtime":1668590767691,"results":"1200","hashOfConfig":"606"},{"size":1245,"mtime":1668590767691,"results":"1201","hashOfConfig":"606"},{"size":5060,"mtime":1668590767691,"results":"1202","hashOfConfig":"606"},{"size":1470,"mtime":1668590767691,"results":"1203","hashOfConfig":"606"},{"size":3529,"mtime":1668590767691,"results":"1204","hashOfConfig":"606"},{"size":2422,"mtime":1668590767691,"results":"1205","hashOfConfig":"606"},{"size":7372,"mtime":1668590767691,"results":"1206","hashOfConfig":"606"},{"size":7470,"mtime":1670430966939,"results":"1207","hashOfConfig":"606"},{"size":2626,"mtime":1668846380105,"results":"1208","hashOfConfig":"606"},{"size":547,"mtime":1671210458411,"results":"1209","hashOfConfig":"606"},{"filePath":"1210","messages":"1211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1212","usedDeprecatedRules":"1213"},"8myggm",{"filePath":"1214","messages":"1215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1216","messages":"1217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1218","messages":"1219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1220","messages":"1221","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1222","usedDeprecatedRules":"1213"},{"filePath":"1223","messages":"1224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1225","messages":"1226","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1227","usedDeprecatedRules":"1213"},{"filePath":"1228","messages":"1229","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1230","usedDeprecatedRules":"1213"},{"filePath":"1231","messages":"1232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1233","messages":"1234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1235","messages":"1236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1237","messages":"1238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1239","messages":"1240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1241","messages":"1242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1243","messages":"1244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1245","messages":"1246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1247","messages":"1248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1249","messages":"1250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1251","messages":"1252","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1253","usedDeprecatedRules":"1213"},{"filePath":"1254","messages":"1255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1256","messages":"1257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1258","messages":"1259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1260","messages":"1261","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1262","usedDeprecatedRules":"1213"},{"filePath":"1263","messages":"1264","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1265","usedDeprecatedRules":"1213"},{"filePath":"1266","messages":"1267","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1268","usedDeprecatedRules":"1213"},{"filePath":"1269","messages":"1270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1271","messages":"1272","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1273","messages":"1274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1275","messages":"1276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1277","messages":"1278","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1279","messages":"1280","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1281","usedDeprecatedRules":"1213"},{"filePath":"1282","messages":"1283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1284","messages":"1285","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1286","messages":"1287","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1288","usedDeprecatedRules":"1213"},{"filePath":"1289","messages":"1290","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1291","messages":"1292","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1293","usedDeprecatedRules":"1213"},{"filePath":"1294","messages":"1295","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1296","usedDeprecatedRules":"1213"},{"filePath":"1297","messages":"1298","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1299","usedDeprecatedRules":"1213"},{"filePath":"1300","messages":"1301","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1302","usedDeprecatedRules":"1213"},{"filePath":"1303","messages":"1304","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1305","usedDeprecatedRules":"1213"},{"filePath":"1306","messages":"1307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1308","messages":"1309","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1310","messages":"1311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1312","messages":"1313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1314","messages":"1315","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1316","messages":"1317","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1318","messages":"1319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1320","messages":"1321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1322","messages":"1323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1324","messages":"1325","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1326","usedDeprecatedRules":"1213"},{"filePath":"1327","messages":"1328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1329","messages":"1330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1331","messages":"1332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1333","messages":"1334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1335","messages":"1336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1337","messages":"1338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1339","messages":"1340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1341","messages":"1342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1343","messages":"1344","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1345","messages":"1346","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1347","usedDeprecatedRules":"1213"},{"filePath":"1348","messages":"1349","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1350","usedDeprecatedRules":"1213"},{"filePath":"1351","messages":"1352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1353","messages":"1354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1355","messages":"1356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1357","messages":"1358","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1359","usedDeprecatedRules":"1213"},{"filePath":"1360","messages":"1361","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1362","messages":"1363","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1364","usedDeprecatedRules":"1213"},{"filePath":"1365","messages":"1366","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1367","usedDeprecatedRules":"1213"},{"filePath":"1368","messages":"1369","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1370","messages":"1371","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1372","messages":"1373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1374","messages":"1375","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1376","messages":"1377","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1378","messages":"1379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1380","messages":"1381","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1382","messages":"1383","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1384","messages":"1385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1386","messages":"1387","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1388","messages":"1389","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1390","messages":"1391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1392","messages":"1393","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1394","messages":"1395","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1396","messages":"1397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1398","messages":"1399","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1400","messages":"1401","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1402","messages":"1403","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1404","messages":"1405","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1406","messages":"1407","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1408","messages":"1409","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1410","messages":"1411","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1412","messages":"1413","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1414","messages":"1415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1416","messages":"1417","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1418","messages":"1419","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1420","messages":"1421","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1422","messages":"1423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1424","messages":"1425","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1426","messages":"1427","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1428","messages":"1429","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1430","messages":"1431","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1432","messages":"1433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1434","messages":"1435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1436","messages":"1437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1438","messages":"1439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1440","messages":"1441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1442","messages":"1443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1444","messages":"1445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1446","messages":"1447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"1448","messages":"1449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1450","messages":"1451","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1452","messages":"1453","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1454","messages":"1455","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1456","messages":"1457","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1458","messages":"1459","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1460","messages":"1461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1462","messages":"1463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1464","messages":"1465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1466","messages":"1467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1468","messages":"1469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1470","messages":"1471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1472","messages":"1473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1474","messages":"1475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1476","messages":"1477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1478","messages":"1479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1480","messages":"1481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1482","messages":"1483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1484","messages":"1485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1486","messages":"1487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1488","messages":"1489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1490","messages":"1491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1492","messages":"1493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1494","messages":"1495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1496","messages":"1497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1498","messages":"1499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1500","messages":"1501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1502","messages":"1503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1504","messages":"1505","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1506","usedDeprecatedRules":"1213"},{"filePath":"1507","messages":"1508","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1509","messages":"1510","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1511","usedDeprecatedRules":"1213"},{"filePath":"1512","messages":"1513","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1514","usedDeprecatedRules":"1213"},{"filePath":"1515","messages":"1516","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1517","usedDeprecatedRules":"1213"},{"filePath":"1518","messages":"1519","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1520","usedDeprecatedRules":"1213"},{"filePath":"1521","messages":"1522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1523","messages":"1524","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1525","usedDeprecatedRules":"1213"},{"filePath":"1526","messages":"1527","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1528","usedDeprecatedRules":"1213"},{"filePath":"1529","messages":"1530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1531","messages":"1532","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1533","usedDeprecatedRules":"1213"},{"filePath":"1534","messages":"1535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1536","messages":"1537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1538","messages":"1539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1540","usedDeprecatedRules":"1213"},{"filePath":"1541","messages":"1542","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1543","usedDeprecatedRules":"1213"},{"filePath":"1544","messages":"1545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1546","messages":"1547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1548","messages":"1549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1550","messages":"1551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1552","messages":"1553","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1554","usedDeprecatedRules":"1213"},{"filePath":"1555","messages":"1556","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1557","messages":"1558","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1559","usedDeprecatedRules":"1213"},{"filePath":"1560","messages":"1561","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1562","usedDeprecatedRules":"1213"},{"filePath":"1563","messages":"1564","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1565","usedDeprecatedRules":"1213"},{"filePath":"1566","messages":"1567","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1568","usedDeprecatedRules":"1213"},{"filePath":"1569","messages":"1570","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1571","usedDeprecatedRules":"1213"},{"filePath":"1572","messages":"1573","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1574","usedDeprecatedRules":"1213"},{"filePath":"1575","messages":"1576","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1577","usedDeprecatedRules":"1213"},{"filePath":"1578","messages":"1579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1580","messages":"1581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1582","messages":"1583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1584","messages":"1585","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1586","usedDeprecatedRules":"1213"},{"filePath":"1587","messages":"1588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1589","messages":"1590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1591","messages":"1592","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1593","usedDeprecatedRules":"1213"},{"filePath":"1594","messages":"1595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1596","messages":"1597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1598","messages":"1599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1600","messages":"1601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1602","messages":"1603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1604","messages":"1605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1606","messages":"1607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1608","messages":"1609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1610","messages":"1611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1612","messages":"1613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1614","messages":"1615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1616","messages":"1617","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1618","messages":"1619","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1620","messages":"1621","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1622","messages":"1623","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1624","messages":"1625","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1626","messages":"1627","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1628","messages":"1629","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1630","messages":"1631","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1632","messages":"1633","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1634","messages":"1635","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1636","messages":"1637","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1638","usedDeprecatedRules":"1213"},{"filePath":"1639","messages":"1640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1641","messages":"1642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1643","messages":"1644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1645","messages":"1646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1647","messages":"1648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1649","messages":"1650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1651","messages":"1652","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1653","usedDeprecatedRules":"1213"},{"filePath":"1654","messages":"1655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1656","messages":"1657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1658","messages":"1659","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1660","usedDeprecatedRules":"1213"},{"filePath":"1661","messages":"1662","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1663","messages":"1664","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1665","usedDeprecatedRules":"1213"},{"filePath":"1666","messages":"1667","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1668","usedDeprecatedRules":"1213"},{"filePath":"1669","messages":"1670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1671","messages":"1672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1673","messages":"1674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1675","messages":"1676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1677","messages":"1678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1679","messages":"1680","errorCount":0,"fatalErrorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1681","usedDeprecatedRules":"1213"},{"filePath":"1682","messages":"1683","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1684","messages":"1685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1686","messages":"1687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1688","messages":"1689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1690","messages":"1691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1692","messages":"1693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1694","messages":"1695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1696","messages":"1697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1698","messages":"1699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1700","messages":"1701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1702","messages":"1703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1704","messages":"1705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1706","messages":"1707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1708","messages":"1709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1710","messages":"1711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1712","messages":"1713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1714","messages":"1715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1716","messages":"1717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1718","messages":"1719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1720","messages":"1721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1722","messages":"1723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1724","messages":"1725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1726","messages":"1727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1728","messages":"1729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1730","messages":"1731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1732","messages":"1733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1734","messages":"1735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1736","messages":"1737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1738","messages":"1739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1740","messages":"1741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1742","messages":"1743","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1744","usedDeprecatedRules":"1213"},{"filePath":"1745","messages":"1746","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1747","messages":"1748","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1749","messages":"1750","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1751","messages":"1752","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1753","messages":"1754","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1755","messages":"1756","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1757","messages":"1758","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1759","messages":"1760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1761","messages":"1762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1763","messages":"1764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1765","messages":"1766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1767","messages":"1768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1769","messages":"1770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1771","messages":"1772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1773","messages":"1774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1775","messages":"1776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1777","messages":"1778","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1779","messages":"1780","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1781","messages":"1782","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1783","messages":"1784","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1785","messages":"1786","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1787","messages":"1788","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1789","messages":"1790","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1791","messages":"1792","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1793","messages":"1794","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1795","messages":"1796","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1797","messages":"1798","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1799","messages":"1800","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1801","messages":"1802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1803","messages":"1804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1805","messages":"1806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1807","messages":"1808","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1809","usedDeprecatedRules":"1213"},{"filePath":"1810","messages":"1811","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1812","usedDeprecatedRules":"1213"},{"filePath":"1813","messages":"1814","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1815","usedDeprecatedRules":"1213"},{"filePath":"1816","messages":"1817","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1818","messages":"1819","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1820","messages":"1821","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1822","messages":"1823","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1824","usedDeprecatedRules":"1213"},{"filePath":"1825","messages":"1826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1827","messages":"1828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1829","messages":"1830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1831","messages":"1832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1833","messages":"1834","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1835","usedDeprecatedRules":"1213"},{"filePath":"1836","messages":"1837","errorCount":0,"fatalErrorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1838","messages":"1839","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1840","usedDeprecatedRules":"1213"},{"filePath":"1841","messages":"1842","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1843","usedDeprecatedRules":"1213"},{"filePath":"1844","messages":"1845","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1846","messages":"1847","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1848","messages":"1849","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1850","messages":"1851","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1852","usedDeprecatedRules":"1213"},{"filePath":"1853","messages":"1854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1855","messages":"1856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1857","messages":"1858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1859","messages":"1860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1861","messages":"1862","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1863","usedDeprecatedRules":"1213"},{"filePath":"1864","messages":"1865","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1866","usedDeprecatedRules":"1213"},{"filePath":"1867","messages":"1868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1869","messages":"1870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1871","messages":"1872","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1873","usedDeprecatedRules":"1213"},{"filePath":"1874","messages":"1875","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1876","messages":"1877","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1878","usedDeprecatedRules":"1213"},{"filePath":"1879","messages":"1880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1881","messages":"1882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1883","messages":"1884","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1885","messages":"1886","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1887","messages":"1888","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1889","messages":"1890","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1891","messages":"1892","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1893","messages":"1894","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1895","messages":"1896","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1897","messages":"1898","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1899","messages":"1900","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1901","messages":"1902","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1903","messages":"1904","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1905","messages":"1906","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1907","messages":"1908","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1909","usedDeprecatedRules":"1213"},{"filePath":"1910","messages":"1911","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1912","messages":"1913","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1914","messages":"1915","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1916","messages":"1917","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1918","usedDeprecatedRules":"1213"},{"filePath":"1919","messages":"1920","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1921","messages":"1922","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1923","usedDeprecatedRules":"1213"},{"filePath":"1924","messages":"1925","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1926","usedDeprecatedRules":"1213"},{"filePath":"1927","messages":"1928","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1929","messages":"1930","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"1931","messages":"1932","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1933","usedDeprecatedRules":"1213"},{"filePath":"1934","messages":"1935","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1936","messages":"1937","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1938","usedDeprecatedRules":"1213"},{"filePath":"1939","messages":"1940","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1941","usedDeprecatedRules":"1213"},{"filePath":"1942","messages":"1943","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1944","usedDeprecatedRules":"1213"},{"filePath":"1945","messages":"1946","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1947","usedDeprecatedRules":"1213"},{"filePath":"1948","messages":"1949","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1950","usedDeprecatedRules":"1213"},{"filePath":"1951","messages":"1952","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1953","usedDeprecatedRules":"1213"},{"filePath":"1954","messages":"1955","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1956","usedDeprecatedRules":"1213"},{"filePath":"1957","messages":"1958","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1959","usedDeprecatedRules":"1213"},{"filePath":"1960","messages":"1961","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1962","usedDeprecatedRules":"1213"},{"filePath":"1963","messages":"1964","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1965","usedDeprecatedRules":"1213"},{"filePath":"1966","messages":"1967","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1968","messages":"1969","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1970","messages":"1971","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1972","messages":"1973","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1974","messages":"1975","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1976","messages":"1977","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1978","messages":"1979","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1980","messages":"1981","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1982","usedDeprecatedRules":"1213"},{"filePath":"1983","messages":"1984","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1985","usedDeprecatedRules":"1213"},{"filePath":"1986","messages":"1987","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1988","usedDeprecatedRules":"1213"},{"filePath":"1989","messages":"1990","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1991","messages":"1992","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"1993","usedDeprecatedRules":"1213"},{"filePath":"1994","messages":"1995","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1996","messages":"1997","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"1998","messages":"1999","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2000","messages":"2001","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2002","messages":"2003","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2004","messages":"2005","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2006","messages":"2007","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2008","messages":"2009","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2010","messages":"2011","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2012","messages":"2013","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2014","messages":"2015","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2016","usedDeprecatedRules":"1213"},{"filePath":"2017","messages":"2018","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2019","messages":"2020","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2021","messages":"2022","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2023","messages":"2024","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2025","messages":"2026","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2027","usedDeprecatedRules":"1213"},{"filePath":"2028","messages":"2029","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2030","usedDeprecatedRules":"1213"},{"filePath":"2031","messages":"2032","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2033","usedDeprecatedRules":"1213"},{"filePath":"2034","messages":"2035","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2036","messages":"2037","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2038","usedDeprecatedRules":"1213"},{"filePath":"2039","messages":"2040","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2041","usedDeprecatedRules":"1213"},{"filePath":"2042","messages":"2043","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2044","messages":"2045","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2046","messages":"2047","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2048","messages":"2049","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2050","messages":"2051","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2052","usedDeprecatedRules":"1213"},{"filePath":"2053","messages":"2054","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2055","usedDeprecatedRules":"1213"},{"filePath":"2056","messages":"2057","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2058","usedDeprecatedRules":"1213"},{"filePath":"2059","messages":"2060","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2061","messages":"2062","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2063","messages":"2064","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2065","messages":"2066","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2067","messages":"2068","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2069","messages":"2070","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2071","messages":"2072","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2073","messages":"2074","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2075","messages":"2076","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2077","messages":"2078","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2079","messages":"2080","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2081","messages":"2082","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2083","messages":"2084","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2085","messages":"2086","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2087","messages":"2088","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2089","messages":"2090","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2091","messages":"2092","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2093","messages":"2094","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2095","messages":"2096","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2097","messages":"2098","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2099","messages":"2100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2101","messages":"2102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2103","messages":"2104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2105","messages":"2106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2107","messages":"2108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2109","messages":"2110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2111","messages":"2112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2113","messages":"2114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2115","messages":"2116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2117","messages":"2118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2119","messages":"2120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2121","messages":"2122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2123","messages":"2124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2125","messages":"2126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2127","messages":"2128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2129","messages":"2130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2131","messages":"2132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2133","messages":"2134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2135","messages":"2136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2137","messages":"2138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2139","messages":"2140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2141","messages":"2142","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2143","usedDeprecatedRules":"1213"},{"filePath":"2144","messages":"2145","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2146","usedDeprecatedRules":"1213"},{"filePath":"2147","messages":"2148","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2149","usedDeprecatedRules":"1213"},{"filePath":"2150","messages":"2151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2152","usedDeprecatedRules":"1213"},{"filePath":"2153","messages":"2154","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2155","usedDeprecatedRules":"1213"},{"filePath":"2156","messages":"2157","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2158","usedDeprecatedRules":"1213"},{"filePath":"2159","messages":"2160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2161","messages":"2162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2163","messages":"2164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2165","messages":"2166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2167","messages":"2168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2169","messages":"2170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2171","usedDeprecatedRules":"1213"},{"filePath":"2172","messages":"2173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2174","messages":"2175","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2176","usedDeprecatedRules":"1213"},{"filePath":"2177","messages":"2178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2179","messages":"2180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2181","messages":"2182","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2183","usedDeprecatedRules":"1213"},{"filePath":"2184","messages":"2185","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2186","usedDeprecatedRules":"1213"},{"filePath":"2187","messages":"2188","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2189","usedDeprecatedRules":"1213"},{"filePath":"2190","messages":"2191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2192","messages":"2193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2194","messages":"2195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2196","messages":"2197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2198","messages":"2199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2200","messages":"2201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2202","messages":"2203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2204","messages":"2205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2206","messages":"2207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2208","messages":"2209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2210","messages":"2211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2212","messages":"2213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2214","messages":"2215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2216","messages":"2217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2218","messages":"2219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2220","messages":"2221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2222","messages":"2223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2224","messages":"2225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2226","messages":"2227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2228","messages":"2229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2230","messages":"2231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2232","messages":"2233","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2234","messages":"2235","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2236","messages":"2237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2238","messages":"2239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2240","messages":"2241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2242","messages":"2243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2244","messages":"2245","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2246","messages":"2247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2248","messages":"2249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2250","messages":"2251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2252","messages":"2253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2254","messages":"2255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2256","messages":"2257","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2258","usedDeprecatedRules":"1213"},{"filePath":"2259","messages":"2260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2261","messages":"2262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2263","messages":"2264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2265","messages":"2266","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2267","messages":"2268","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2269","usedDeprecatedRules":"1213"},{"filePath":"2270","messages":"2271","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2272","usedDeprecatedRules":"1213"},{"filePath":"2273","messages":"2274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2275","usedDeprecatedRules":"1213"},{"filePath":"2276","messages":"2277","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2278","usedDeprecatedRules":"1213"},{"filePath":"2279","messages":"2280","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2281","usedDeprecatedRules":"1213"},{"filePath":"2282","messages":"2283","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2284","usedDeprecatedRules":"1213"},{"filePath":"2285","messages":"2286","errorCount":0,"fatalErrorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2287","usedDeprecatedRules":"1213"},{"filePath":"2288","messages":"2289","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2290","messages":"2291","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2292","usedDeprecatedRules":"1213"},{"filePath":"2293","messages":"2294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2295","messages":"2296","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2297","messages":"2298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2299","messages":"2300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2301","messages":"2302","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2303","usedDeprecatedRules":"1213"},{"filePath":"2304","messages":"2305","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2306","usedDeprecatedRules":"1213"},{"filePath":"2307","messages":"2308","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2309","usedDeprecatedRules":"1213"},{"filePath":"2310","messages":"2311","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2312","messages":"2313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2314","messages":"2315","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2316","usedDeprecatedRules":"1213"},{"filePath":"2317","messages":"2318","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2319","messages":"2320","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2321","usedDeprecatedRules":"1213"},{"filePath":"2322","messages":"2323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2324","messages":"2325","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2326","messages":"2327","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2328","messages":"2329","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2330","usedDeprecatedRules":"1213"},{"filePath":"2331","messages":"2332","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2333","usedDeprecatedRules":"1213"},{"filePath":"2334","messages":"2335","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2336","messages":"2337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2338","messages":"2339","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2340","usedDeprecatedRules":"1213"},{"filePath":"2341","messages":"2342","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2343","usedDeprecatedRules":"1213"},{"filePath":"2344","messages":"2345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2346","messages":"2347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2348","messages":"2349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2350","messages":"2351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2352","messages":"2353","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2354","messages":"2355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2356","messages":"2357","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2358","messages":"2359","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2360","messages":"2361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2362","messages":"2363","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2364","messages":"2365","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2366","messages":"2367","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2368","messages":"2369","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2370","usedDeprecatedRules":"1213"},{"filePath":"2371","messages":"2372","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2373","messages":"2374","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2375","messages":"2376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2377","messages":"2378","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2379","messages":"2380","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2381","messages":"2382","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2383","usedDeprecatedRules":"1213"},{"filePath":"2384","messages":"2385","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2386","usedDeprecatedRules":"1213"},{"filePath":"2387","messages":"2388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2389","messages":"2390","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2391","messages":"2392","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2393","messages":"2394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2395","messages":"2396","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2397","usedDeprecatedRules":"1213"},{"filePath":"2398","messages":"2399","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2400","usedDeprecatedRules":"1213"},{"filePath":"2401","messages":"2402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2403","messages":"2404","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2405","usedDeprecatedRules":"1213"},{"filePath":"2406","messages":"2407","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2408","usedDeprecatedRules":"1213"},{"filePath":"2409","messages":"2410","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2411","usedDeprecatedRules":"1213"},{"filePath":"2412","messages":"2413","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2414","usedDeprecatedRules":"1213"},{"filePath":"2415","messages":"2416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2417","messages":"2418","errorCount":0,"fatalErrorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2419","usedDeprecatedRules":"1213"},{"filePath":"2420","messages":"2421","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2422","usedDeprecatedRules":"1213"},{"filePath":"2423","messages":"2424","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"2425","messages":"2426","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2427","messages":"2428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2429","messages":"2430","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2431","usedDeprecatedRules":"1213"},{"filePath":"2432","messages":"2433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2434","messages":"2435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2436","messages":"2437","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2438","messages":"2439","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2440","messages":"2441","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2442","messages":"2443","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2444","messages":"2445","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2446","messages":"2447","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2448","messages":"2449","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2450","messages":"2451","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2452","usedDeprecatedRules":"1213"},{"filePath":"2453","messages":"2454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2455","messages":"2456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2457","messages":"2458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2459","usedDeprecatedRules":"1213"},{"filePath":"2460","messages":"2461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2462","messages":"2463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2464","messages":"2465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2466","messages":"2467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2468","messages":"2469","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2470","usedDeprecatedRules":"1213"},{"filePath":"2471","messages":"2472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2473","messages":"2474","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2475","messages":"2476","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"2477","messages":"2478","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2479","usedDeprecatedRules":"1213"},{"filePath":"2480","messages":"2481","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2482","usedDeprecatedRules":"1213"},{"filePath":"2483","messages":"2484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2485","messages":"2486","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2487","usedDeprecatedRules":"1213"},{"filePath":"2488","messages":"2489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2490","messages":"2491","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2492","usedDeprecatedRules":"1213"},{"filePath":"2493","messages":"2494","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2495","usedDeprecatedRules":"1213"},{"filePath":"2496","messages":"2497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2498","messages":"2499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2500","messages":"2501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2502","messages":"2503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2504","messages":"2505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2506","messages":"2507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2508","messages":"2509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2510","messages":"2511","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2512","messages":"2513","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2514","messages":"2515","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2516","messages":"2517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2518","messages":"2519","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2520","messages":"2521","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2522","messages":"2523","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2524","messages":"2525","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2526","messages":"2527","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2528","messages":"2529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2530","messages":"2531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2532","messages":"2533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2534","messages":"2535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2536","messages":"2537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2538","messages":"2539","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2540","messages":"2541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2542","messages":"2543","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2544","messages":"2545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2546","messages":"2547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2548","messages":"2549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"1213"},{"filePath":"2550","messages":"2551","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2552","usedDeprecatedRules":"1213"},{"filePath":"2553","messages":"2554","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"2555","usedDeprecatedRules":"1213"},{"filePath":"2556","messages":"2557","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\index.tsx",["2558"],"// mock api\r\nimport './_apis_';\r\n\r\n// i18n\r\nimport './locales/i18n';\r\n\r\n// highlight\r\nimport './utils/highlight';\r\n\r\n// scroll bar\r\nimport 'simplebar/src/simplebar.css';\r\n\r\n// map\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\n// lightbox\r\nimport 'react-image-lightbox/style.css';\r\n\r\n// editor\r\nimport 'react-quill/dist/quill.snow.css';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\n// slick-carousel\r\nimport 'slick-carousel/slick/slick.css';\r\nimport 'slick-carousel/slick/slick-theme.css';\r\n\r\n// lazy image\r\nimport 'lazysizes';\r\nimport 'lazysizes/plugins/attrchange/ls.attrchange';\r\nimport 'lazysizes/plugins/object-fit/ls.object-fit';\r\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { HelmetProvider } from 'react-helmet-async';\r\nimport { Provider as ReduxProvider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/lib/integration/react';\r\n// material\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\n// redux\r\nimport { store, persistor } from './redux/store';\r\n// contexts\r\nimport { SettingsProvider } from './contexts/SettingsContext';\r\nimport { CollapseDrawerProvider } from './contexts/CollapseDrawerContext';\r\n// components\r\nimport LoadingScreen from './components/LoadingScreen';\r\n\r\nimport { AuthProvider } from './contexts/JWTContext';\r\n// import { AuthProvider } from './contexts/AwsCognitoContext';\r\n// import { AuthProvider } from './contexts/Auth0Context';\r\n// import { AuthProvider } from './contexts/FirebaseContext';\r\n\r\n//\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nReactDOM.render(\r\n  <HelmetProvider>\r\n    <ReduxProvider store={store}>\r\n      <PersistGate loading={<LoadingScreen />} persistor={persistor}>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          {/* <SettingsProvider> */}\r\n          <CollapseDrawerProvider>\r\n            <BrowserRouter>\r\n              <AuthProvider>\r\n                <App />\r\n              </AuthProvider>\r\n            </BrowserRouter>\r\n          </CollapseDrawerProvider>\r\n          {/* </SettingsProvider> */}\r\n        </LocalizationProvider>\r\n      </PersistGate>\r\n    </ReduxProvider>\r\n  </HelmetProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.unregister();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["2559","2560"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\locales\\i18n.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\highlight.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\store.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\App.tsx",["2561"],"// routes\r\nimport Router from './routes';\r\n// theme\r\nimport ThemeConfig from './theme';\r\nimport GlobalStyles from './theme/globalStyles';\r\n// hooks\r\nimport useAuth from './hooks/useAuth';\r\n// components\r\nimport Settings from './components/settings';\r\nimport RtlLayout from './components/RtlLayout';\r\nimport GoogleAnalytics from './components/GoogleAnalytics';\r\nimport NotistackProvider from './components/NotistackProvider';\r\nimport ThemePrimaryColor from './components/ThemePrimaryColor';\r\nimport ThemeLocalization from './components/ThemeLocalization';\r\nimport { BaseOptionChartStyle } from './components/charts/BaseOptionChart';\r\nimport LoadingScreen, { ProgressBarStyle } from './components/LoadingScreen';\r\nimport ScrollButton from 'components/ScrollButton';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function App() {\r\n  const { isInitialized } = useAuth();\r\n\r\n  return (\r\n    <ThemeConfig>\r\n      <ThemePrimaryColor>\r\n        <ThemeLocalization>\r\n          <RtlLayout>\r\n            <NotistackProvider>\r\n              <GlobalStyles />\r\n              <ProgressBarStyle />\r\n              <BaseOptionChartStyle />\r\n              {/* <Settings /> */}\r\n              <ScrollButton />\r\n              <GoogleAnalytics />\r\n              {isInitialized ? <Router /> : <LoadingScreen />}\r\n            </NotistackProvider>\r\n          </RtlLayout>\r\n        </ThemeLocalization>\r\n      </ThemePrimaryColor>\r\n    </ThemeConfig>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\contexts\\CollapseDrawerContext.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\contexts\\JWTContext.tsx",["2562","2563"],"import { createContext, ReactNode, useEffect, useReducer } from 'react';\r\n// utils\r\nimport { isValidToken, setSession } from '../utils/jwt';\r\n// @types\r\nimport { ActionMap, AuthState, AuthUser, JWTContextType } from '../@types/authentication';\r\nimport FirebaseService from 'api/firebase';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nenum Types {\r\n  Initial = 'INITIALIZE',\r\n  Login = 'LOGIN',\r\n  Logout = 'LOGOUT',\r\n  Register = 'REGISTER'\r\n}\r\n\r\ntype JWTAuthPayload = {\r\n  [Types.Initial]: {\r\n    isAuthenticated: boolean;\r\n    user: AuthUser;\r\n  };\r\n  [Types.Login]: {\r\n    user: AuthUser;\r\n  };\r\n  [Types.Logout]: undefined;\r\n  [Types.Register]: {\r\n    user: AuthUser;\r\n  };\r\n};\r\n\r\nexport type JWTActions = ActionMap<JWTAuthPayload>[keyof ActionMap<JWTAuthPayload>];\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  isInitialized: false,\r\n  user: null\r\n};\r\n\r\nconst JWTReducer = (state: AuthState, action: JWTActions) => {\r\n  switch (action.type) {\r\n    case 'INITIALIZE':\r\n      return {\r\n        isAuthenticated: action.payload.isAuthenticated,\r\n        isInitialized: true,\r\n        user: action.payload.user\r\n      };\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        user: action.payload.user\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        user: null\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst AuthContext = createContext<JWTContextType | null>(null);\r\n\r\nfunction AuthProvider({ children }: { children: ReactNode }) {\r\n  const [state, dispatch] = useReducer(JWTReducer, initialState);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        const accessToken = window.localStorage.getItem('accessToken');\r\n        const userId = window.localStorage.getItem('userId');\r\n        if (accessToken && userId && isValidToken(accessToken)) {\r\n          const response = await axios.get(REACT_APP_API_URL + `/users/${userId}`, {\r\n            headers: { Authorization: `Bearer ${accessToken}` }\r\n          });\r\n          const { id, investorId, email, phoneNum, lastName, firstName, image, role } =\r\n            response.data;\r\n          const user = {\r\n            id: id,\r\n            investorId: investorId,\r\n            email: email,\r\n            image: image,\r\n            fullName: `${firstName} ${lastName}`,\r\n            phoneNum: phoneNum,\r\n            role: role.name\r\n          };\r\n          setSession(accessToken);\r\n          console.log(user);\r\n          dispatch({\r\n            type: Types.Initial,\r\n            payload: {\r\n              isAuthenticated: true,\r\n              user\r\n            }\r\n          });\r\n        } else {\r\n          dispatch({\r\n            type: Types.Initial,\r\n            payload: {\r\n              isAuthenticated: false,\r\n              user: null\r\n            }\r\n          });\r\n        }\r\n      } catch (err) {\r\n        console.error(err);\r\n        dispatch({\r\n          type: Types.Initial,\r\n          payload: {\r\n            isAuthenticated: false,\r\n            user: null\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, []);\r\n\r\n  const login = async () => {\r\n    const firebaseLogin = await FirebaseService.loginWithGoogle();\r\n    const firebaseUser = await firebaseLogin.user?.getIdTokenResult();\r\n    if (!firebaseUser) return;\r\n    const firebaseToken = firebaseUser.token;\r\n    console.log(firebaseToken);\r\n    const response = await axios.post(\r\n      REACT_APP_API_URL + `/authenticate/investor?token=${firebaseToken}`\r\n    );\r\n    const { token, id, investorId, email, phoneNum, fullName, image, roleName } = response.data;\r\n    const user = {\r\n      id: id,\r\n      investorId: investorId,\r\n      email: email,\r\n      image: image,\r\n      fullName: fullName,\r\n      phoneNum: phoneNum,\r\n      token: token,\r\n      role: roleName\r\n    };\r\n    setSession(token);\r\n    window.localStorage.setItem('userId', id);\r\n    dispatch({\r\n      type: Types.Login,\r\n      payload: {\r\n        user\r\n      }\r\n    });\r\n  };\r\n\r\n  const logout = async () => {\r\n    setSession(null);\r\n    window.localStorage.removeItem('firebaseToken');\r\n    window.location.replace('/');\r\n    dispatch({ type: Types.Logout });\r\n  };\r\n\r\n  const resetPassword = (email: string) => console.log(email);\r\n\r\n  const updateProfile = () => {};\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        ...state,\r\n        method: 'jwt',\r\n        login,\r\n        logout,\r\n        updateProfile\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport { AuthContext, AuthProvider };\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\LoadingScreen.tsx",["2564"],"import NProgress from 'nprogress';\r\nimport { useEffect, useMemo } from 'react';\r\nimport { motion } from 'framer-motion';\r\n// material\r\nimport { alpha, styled, useTheme } from '@mui/material/styles';\r\nimport { Box, GlobalStyles, Typography } from '@mui/material';\r\n//\r\nimport Logo from './Logo';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  backgroundColor: theme.palette.background.default\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function ProgressBarStyle() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <GlobalStyles\r\n      styles={{\r\n        '#nprogress': {\r\n          pointerEvents: 'none',\r\n          '& .bar': {\r\n            top: 0,\r\n            left: 0,\r\n            height: 2,\r\n            width: '100%',\r\n            position: 'fixed',\r\n            zIndex: theme.zIndex.snackbar,\r\n            backgroundColor: theme.palette.primary.main,\r\n            boxShadow: `0 0 2px ${theme.palette.primary.main}`\r\n          },\r\n          '& .peg': {\r\n            right: 0,\r\n            opacity: 1,\r\n            width: 100,\r\n            height: '100%',\r\n            display: 'block',\r\n            position: 'absolute',\r\n            transform: 'rotate(3deg) translate(0px, -4px)',\r\n            boxShadow: `0 0 10px ${theme.palette.primary.main}, 0 0 5px ${theme.palette.primary.main}`\r\n          }\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nfunction ProgressBar() {\r\n  NProgress.configure({\r\n    showSpinner: false\r\n  });\r\n\r\n  useMemo(() => {\r\n    NProgress.start();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    NProgress.done();\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default function LoadingScreen({ ...other }) {\r\n  return (\r\n    <>\r\n      <ProgressBar />\r\n\r\n      <RootStyle {...other}>\r\n        <motion.div\r\n          initial={{ rotateY: 0 }}\r\n          animate={{ rotateY: 360 }}\r\n          transition={{\r\n            duration: 2,\r\n            ease: 'easeInOut',\r\n            repeatDelay: 1,\r\n            repeat: Infinity\r\n          }}\r\n        >\r\n          <Logo sx={{ width: 64, height: 64 }} />\r\n        </motion.div>\r\n\r\n        <Box\r\n          component={motion.div}\r\n          animate={{\r\n            scale: [1.2, 1, 1, 1.2, 1.2],\r\n            rotate: [270, 0, 0, 270, 270],\r\n            opacity: [0.25, 1, 1, 1, 0.25],\r\n            borderRadius: ['25%', '25%', '50%', '50%', '25%']\r\n          }}\r\n          transition={{ ease: 'linear', duration: 3.2, repeat: Infinity }}\r\n          sx={{\r\n            width: 100,\r\n            height: 100,\r\n            borderRadius: '25%',\r\n            position: 'absolute',\r\n            border: (theme) => `solid 3px ${alpha(theme.palette.primary.dark, 0.24)}`\r\n          }}\r\n        />\r\n\r\n        <Box\r\n          component={motion.div}\r\n          animate={{\r\n            scale: [1, 1.2, 1.2, 1, 1],\r\n            rotate: [0, 270, 270, 0, 0],\r\n            opacity: [1, 0.25, 0.25, 0.25, 1],\r\n            borderRadius: ['25%', '25%', '50%', '50%', '25%']\r\n          }}\r\n          transition={{\r\n            ease: 'linear',\r\n            duration: 3.2,\r\n            repeat: Infinity\r\n          }}\r\n          sx={{\r\n            width: 120,\r\n            height: 120,\r\n            borderRadius: '25%',\r\n            position: 'absolute',\r\n            border: (theme) => `solid 8px ${alpha(theme.palette.primary.dark, 0.24)}`\r\n          }}\r\n        />\r\n      </RootStyle>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\rootReducer.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\jwt.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useAuth.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\RtlLayout.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ThemePrimaryColor.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\NotistackProvider.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ThemeLocalization.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\GoogleAnalytics.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\globalStyles.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Logo.tsx",["2565","2566"],"// material\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, BoxProps } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Logo({ sx }: BoxProps) {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Box sx={{ width: 40, height: 40, ...sx }}>\r\n      <img src=\"/static/home/logo.png\" />\r\n    </Box>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\BaseOptionChart.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\stage.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\wallet.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\project.ts",["2567"],"import axios from 'axios';\r\nimport { string } from 'yup';\r\nimport { REACT_APP_API_URL } from '../../config';\r\nconst API_PACKAGE_ID = '/packages/project';\r\nconst API_PACKAGE_BY_ID = '/packages';\r\nconst API_PROJECT = '/projects';\r\nconst API_PROJECT_MOST = '/projects/outstandingProject';\r\n\r\nconst API_PROJECT_INVESTED = '/projects/investedProject';\r\nconst API_STAGE_ID = '/stages';\r\nconst API_TRANSACTION = '/account_transactions';\r\n\r\nfunction getToken() {\r\n  return window.localStorage.getItem('accessToken');\r\n}\r\n\r\nfunction getHeader() {\r\n  const token = getToken();\r\n  return { Authorization: `Bearer ${token}` };\r\n}\r\nasync function gets(params?: { businessId: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT}`, {\r\n    params: params,\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getProjectInvested(params?: { pageIndex: number; pageSize: number }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT_INVESTED}`, {\r\n    params: params,\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getProjectInvestedByID(Id: string) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT_INVESTED}/${Id}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getAllProject() {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getAllProjectMostTransaction() {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT_MOST}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getProjectByFilter({\r\n  fieldIds,\r\n  businessId,\r\n  investmentTargetCapital,\r\n  status\r\n}: {\r\n  fieldIds: string[];\r\n  businessId: string;\r\n  investmentTargetCapital: string;\r\n  status: string;\r\n}) {\r\n  const headers = getHeader();\r\n  const fieldQueryString =\r\n    fieldIds.length > 0\r\n      ? `${fieldIds.map((_value) => `listFieldId=${_value}&`)}`.split(',').join('')\r\n      : '';\r\n  const businessIdQueryString = businessId ? `businessId=${businessId}&` : '';\r\n  const investmentTargetCapitalQueryString = `investmentTargetCapital=${investmentTargetCapital}&`;\r\n  const statusQueryString = status ? `status=${status}` : '';\r\n  const paramQueryString =\r\n    fieldQueryString +\r\n    businessIdQueryString +\r\n    investmentTargetCapitalQueryString +\r\n    statusQueryString;\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT}?${paramQueryString}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\n\r\nasync function get({ id }: { id: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PROJECT}/${id}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getPackageID({ id }: { id: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PACKAGE_ID}/${id}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\n\r\nasync function getPackageBYID({ id }: { id: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_PACKAGE_BY_ID}/${id}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getStageId({ id }: { id: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_STAGE_ID}/${id}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getsTransaction() {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `${API_TRANSACTION}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\n\r\nexport const ProjectAPI = {\r\n  gets: gets,\r\n  get: get,\r\n  getPackageID: getPackageID,\r\n  getAllProject: getAllProject,\r\n  getAllProjectMostTransaction: getAllProjectMostTransaction,\r\n  getStageId: getStageId,\r\n  getPackageBYID: getPackageBYID,\r\n  getProjectInvested: getProjectInvested,\r\n  getProjectInvestedByID: getProjectInvestedByID,\r\n  getsTransaction: getsTransaction,\r\n  getProjectByFilter: getProjectByFilter\r\n};\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\investor.ts",["2568"],"import axios from 'axios';\r\nimport { REACT_APP_API_URL } from '../../config';\r\n\r\ntype InvestorFormPostImage = {\r\n  entityId: string | null;\r\n  entityName: string;\r\n  files: string | null | undefined;\r\n};\r\ntype InvestorFormPut = {\r\n  id: string;\r\n  description: string | null | undefined;\r\n  phoneNum: string | null | undefined;\r\n  idCard: string | null | undefined;\r\n  email: string | null | undefined;\r\n  gender: string | null | undefined;\r\n  //   dateOfBirth: string | null | undefined;\r\n  taxIdentificationNumber: string | null | undefined;\r\n  city: string | null | undefined;\r\n  district: string | null | undefined;\r\n  address: string | null | undefined;\r\n  bankName: string | null | undefined;\r\n  //   bankAccount: string | null | undefined;\r\n  lastName: string | null | undefined;\r\n  firstName: string | null | undefined;\r\n};\r\nfunction getToken() {\r\n  return window.localStorage.getItem('accessToken');\r\n}\r\nfunction getHeaderFormData() {\r\n  const token = getToken();\r\n  return { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}` };\r\n}\r\nfunction getHeader() {\r\n  const token = getToken();\r\n  return { Authorization: `Bearer ${token}` };\r\n}\r\nasync function put({\r\n  firstName,\r\n  address,\r\n  email,\r\n  phoneNum,\r\n  taxIdentificationNumber,\r\n  lastName,\r\n  city,\r\n  district,\r\n  idCard,\r\n  bankName,\r\n  id\r\n}: InvestorFormPut) {\r\n  const header = getHeaderFormData();\r\n  const formData = new FormData();\r\n  formData.append('firstName', firstName ?? '');\r\n  formData.append('email', email ?? '');\r\n  formData.append('lastName', lastName ?? '');\r\n  formData.append('phoneNum', phoneNum ?? '');\r\n  formData.append('city', city ?? '');\r\n  formData.append('district', district ?? '');\r\n  formData.append('address', address ?? '');\r\n  formData.append('idCard', 'idCard');\r\n  formData.append('bankName', bankName ?? '');\r\n  formData.append('roleId', 'ad5f37da-ca48-4dc5-9f4b-963d94b535e6');\r\n  formData.append('dateOfBirth', '24/07/2000');\r\n  formData.append('taxIdentificationNumber', '123');\r\n  formData.append('bankAccount', '123');\r\n  formData.append('gender', 'male');\r\n  formData.append('description', '123');\r\n  await axios({\r\n    method: 'put',\r\n    url: REACT_APP_API_URL + `/users/${id}`,\r\n    data: formData,\r\n    headers: header\r\n  });\r\n}\r\nasync function postImage({ investorId, files }: { investorId: string; files: File | null }) {\r\n  const header = getHeaderFormData();\r\n  const formData = new FormData();\r\n  if (files === null) {\r\n    throw new Error('No data');\r\n  }\r\n  formData.append('entityId', investorId);\r\n  formData.append('entityName', 'User');\r\n  formData.append('files', files);\r\n  await axios({\r\n    method: 'post',\r\n    url: REACT_APP_API_URL + '/upload-files/firebase',\r\n    data: formData,\r\n    headers: header\r\n  });\r\n}\r\nasync function get({ id }: { id: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `/users/${id ?? '_'}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function getNotification(params: { userId: string; seen: boolean }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `/notifications`, {\r\n    headers: headers,\r\n    params: params\r\n  });\r\n  return response;\r\n}\r\nexport const InvestorAPI = {\r\n  put: put,\r\n  postImage: postImage,\r\n  getNotification: getNotification,\r\n  get: get\r\n};\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\business.ts",["2569"],"import axios from 'axios';\r\nimport { REACT_APP_API_URL } from '../../config';\r\n\r\nfunction getToken() {\r\n  return window.localStorage.getItem('accessToken');\r\n}\r\n\r\nfunction getHeaderFormData() {\r\n  const token = getToken();\r\n  return { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}` };\r\n}\r\nfunction getHeader() {\r\n  const token = getToken();\r\n  return { Authorization: `Bearer ${token}` };\r\n}\r\nasync function get({ id }: { id: string }) {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `/businesses/${id ?? 'null'}`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nasync function gets() {\r\n  const headers = getHeader();\r\n  const response = await axios.get(REACT_APP_API_URL + `/businesses`, {\r\n    headers: headers\r\n  });\r\n  return response;\r\n}\r\nexport const BusinessAPI = {\r\n  get: get,\r\n  gets: gets\r\n};\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\userKrowdrac.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\blog.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\product.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\chat.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\mail.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\stage.ts",["2570","2571","2572","2573"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch, store } from '../../store';\r\n// utils\r\nimport axios from 'axios';\r\nimport { REACT_APP_API_URL } from '../../../config';\r\nimport { Stage, ProjectStageList, Chart } from '../../../@types/krowd/stage';\r\nimport { ProjectStageAPI } from '_apis_/krowd_apis/stage';\r\n// ----------------------------------------------------------------------\r\n\r\ntype ProjectState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  projectStageList: {\r\n    numOfStage: number;\r\n    listOfStage: Stage[];\r\n  };\r\n  stageDetail: { isStageLoading: boolean; StageId: Stage | null };\r\n  chartStage: Chart | null;\r\n  listOfChartStage: Chart[];\r\n};\r\n\r\nconst initialState: ProjectState = {\r\n  isLoading: false,\r\n  error: false,\r\n  projectStageList: { numOfStage: 0, listOfStage: [] },\r\n  listOfChartStage: [],\r\n  chartStage: null,\r\n  stageDetail: { isStageLoading: false, StageId: null }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'stage',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET Chart LIST\r\n    getProjectStageListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.listOfChartStage = action.payload;\r\n    },\r\n    //ALL STAGE\r\n    getAllProjectStageSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.projectStageList = action.payload;\r\n    },\r\n\r\n    // GET STAGE ID\r\n    // START LOADING\r\n    startStageIDLoading(state) {\r\n      state.stageDetail.isStageLoading = true;\r\n    },\r\n\r\n    //1 STAGE\r\n\r\n    getProjectStageIDSuccess(state, action) {\r\n      state.stageDetail.isStageLoading = false;\r\n      state.stageDetail.StageId = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n//--------------------------------------\r\nexport function getProjectStageList(projectId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await ProjectStageAPI.get({ id: projectId });\r\n      dispatch(slice.actions.getProjectStageListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\nexport function getAllProjectStage(projectId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await ProjectStageAPI.gets({ id: projectId });\r\n      dispatch(slice.actions.getAllProjectStageSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\nexport function getProjectStageID(stageId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startStageIDLoading());\r\n    try {\r\n      const response = await ProjectStageAPI.getStageId({ id: stageId });\r\n      dispatch(slice.actions.getProjectStageIDSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\user.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\investor.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\wallet.ts",["2574","2575","2576","2577","2578","2579","2580","2581"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch, store } from '../../store';\r\n// utils\r\nimport axios from 'axios';\r\nimport { business, NewProjectEntityFormValues, Project1 } from '../../../@types/krowd/project';\r\nimport { REACT_APP_API_URL } from '../../../config';\r\nimport { ListOfInvestorWallet, WalletType } from '../../../@types/krowd/wallet';\r\nimport { WalletAPI } from '../../../_apis_/krowd_apis/wallet';\r\n// ----------------------------------------------------------------------\r\n\r\ntype ProjectState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  walletList: {\r\n    totalAsset: number;\r\n    listOfInvestorWallet: ListOfInvestorWallet[];\r\n    listOfProjectWallet: null;\r\n  };\r\n};\r\n\r\nconst initialState: ProjectState = {\r\n  isLoading: false,\r\n  error: false,\r\n  walletList: { totalAsset: 0, listOfInvestorWallet: [], listOfProjectWallet: null }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'project',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET MANAGE USERS\r\n    getWalletListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.walletList = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n//--------------------------------------\r\nexport function getWalletList() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await WalletAPI.gets();\r\n      dispatch(slice.actions.getWalletListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\nexport function getWalletByID(Id: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await WalletAPI.getbyID({ id: Id });\r\n      dispatch(getWalletList());\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\transaction.ts",["2582","2583","2584"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\field.ts",["2585","2586","2587"],"import { map, filter } from 'lodash';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch } from '../../store';\r\n// utils\r\nimport axios from 'axios';\r\nimport { Field } from '../../../@types/krowd/fields';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype FieldState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  fieldList: {\r\n    numOfField: number;\r\n    listOfField: Field[];\r\n  };\r\n  activeFieldId: Field | null;\r\n};\r\n\r\nconst initialState: FieldState = {\r\n  isLoading: false,\r\n  error: false,\r\n  activeFieldId: null,\r\n  fieldList: {\r\n    numOfField: 0,\r\n    listOfField: []\r\n  }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'fields',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    getFieldListIDSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.activeFieldId = action.payload;\r\n    },\r\n    // GET MANAGE USERS\r\n    getFieldListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.fieldList = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------\r\nexport function getFieldList() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get(\r\n        'https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/fields'\r\n      );\r\n      dispatch(slice.actions.getFieldListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n//waitting\r\nexport function getFieldListByBusinessId(fieldId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get(\r\n        `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/fields/${fieldId}`\r\n      );\r\n      dispatch(slice.actions.getFieldListIDSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\nexport function getFieldListById(fieldId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get(\r\n        `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/fields/${fieldId}`\r\n      );\r\n      dispatch(slice.actions.getFieldListIDSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n//delete\r\nexport function delFieldListById(fieldId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.delete(\r\n        `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/fields/${fieldId}`\r\n      );\r\n      dispatch(getFieldList());\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\riskType.ts",["2588","2589"],"import { map, filter } from 'lodash';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch } from '../../store';\r\n// utils\r\nimport axios from 'axios';\r\nimport { RiskTypes } from '../../../@types/krowd/riskTypeKrowd';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype RiskTypeState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  riskTypeList: RiskTypes[];\r\n  activeRiskTypeId: RiskTypes | null;\r\n};\r\n\r\nconst initialState: RiskTypeState = {\r\n  isLoading: false,\r\n  error: false,\r\n  activeRiskTypeId: null,\r\n  riskTypeList: []\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'riskType',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n    getRiskTypeListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.riskTypeList = action.payload;\r\n    },\r\n    getRiskTypeIDSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.activeRiskTypeId = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\n\r\nexport function getRiskTypeList() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get(\r\n        'https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/risk_types'\r\n      );\r\n      dispatch(slice.actions.getRiskTypeListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n// get by ID\r\nexport function getRiskTypeById(risk_typeId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get(\r\n        `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/risk_types/${risk_typeId}`\r\n      );\r\n      dispatch(slice.actions.getRiskTypeIDSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n//delete\r\nexport function delRiskTypeById(risk_typeId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      await axios.delete(\r\n        `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/risk_types/${risk_typeId}`\r\n      );\r\n      dispatch(getRiskTypeList());\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\project.ts",["2590","2591","2592","2593","2594","2595"],"import { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch, store } from '../../store';\r\n// utils\r\nimport axios from 'axios';\r\nimport {\r\n  ALL_Project,\r\n  business,\r\n  InvestedProjectDetail,\r\n  ListOfProjectInvested,\r\n  NewProjectEntityFormValues,\r\n  Package,\r\n  Project1\r\n} from '../../../@types/krowd/project';\r\nimport { REACT_APP_API_URL } from '../../../config';\r\nimport { ProjectAPI } from '_apis_/krowd_apis/project';\r\nimport PackageVoucherCheckout from 'pages/dashboard/PackageVoucherCheckout';\r\nimport { BusinessAPI } from '_apis_/krowd_apis/business';\r\n// ----------------------------------------------------------------------\r\n\r\ntype ProjectState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  projectListLanding: {\r\n    isLoadingProjectListLanding: boolean;\r\n    numOfProject: number;\r\n    listOfProject: ALL_Project[];\r\n    errorProjectList: boolean;\r\n  };\r\n  listAllProjectLanding: {\r\n    isLoadinglistAllProjectLanding: boolean;\r\n    numOfProject: number;\r\n    listOfProject: ALL_Project[];\r\n    errorProjectlistAllProjectLanding: boolean;\r\n  };\r\n  listAllProjectLandingMostTransaction: {\r\n    isLoadinglistAllProjectLanding: boolean;\r\n    numOfProject: number;\r\n    listOfProject: ALL_Project[];\r\n    errorProjectlistAllProjectLanding: boolean;\r\n  };\r\n  projectList: {\r\n    isLoadingProjectList: boolean;\r\n    numOfProject: number;\r\n    listOfProject: Project1[];\r\n    errorProjectList: boolean;\r\n  };\r\n  projectListInvested: {\r\n    isLoadingProjectListInvested: boolean;\r\n    numOfProject: number;\r\n    listOfProject: ListOfProjectInvested[];\r\n    errorProjectListInvested: boolean;\r\n  };\r\n  InvestedProjectDetails: {\r\n    isLoadingProjectListInvested: boolean;\r\n    listOfProject: InvestedProjectDetail | null;\r\n    errorProjectListInvested: boolean;\r\n  };\r\n\r\n  detailOfProject: {\r\n    isLoadingDetailOfProjectID: boolean;\r\n    detailOfProjectID: Project1 | null;\r\n    errorDetailOfProjectID: boolean;\r\n  };\r\n  projectPackageDetails: {\r\n    projectPackageDetailsLoading: boolean;\r\n    PackageDetails: Package | null;\r\n  };\r\n\r\n  activeProjectEntityId: NewProjectEntityFormValues | null;\r\n\r\n  projects: Project1[];\r\n\r\n  project: Project1 | null;\r\n  sortBy: Project1 | null;\r\n  filters: {\r\n    areaId: string;\r\n    status: number[];\r\n  };\r\n  ProjectState: {\r\n    isLoading: boolean;\r\n    projectList: {\r\n      numOfProject: number;\r\n      listOfProject: Project1[];\r\n    };\r\n    error: boolean;\r\n  };\r\n  packageLists: {\r\n    isPackageLoading: boolean;\r\n    numOfPackage: number;\r\n    listOfPackage: Package[];\r\n  };\r\n};\r\n\r\nconst initialState: ProjectState = {\r\n  isLoading: false,\r\n  error: false,\r\n\r\n  detailOfProject: {\r\n    isLoadingDetailOfProjectID: false,\r\n    detailOfProjectID: null,\r\n    errorDetailOfProjectID: false\r\n  },\r\n\r\n  activeProjectEntityId: null,\r\n  projectList: {\r\n    isLoadingProjectList: false,\r\n    numOfProject: 0,\r\n    listOfProject: [],\r\n    errorProjectList: false\r\n  },\r\n\r\n  projectListLanding: {\r\n    isLoadingProjectListLanding: false,\r\n    numOfProject: 0,\r\n    listOfProject: [],\r\n    errorProjectList: false\r\n  },\r\n  listAllProjectLanding: {\r\n    isLoadinglistAllProjectLanding: false,\r\n    numOfProject: 0,\r\n    listOfProject: [],\r\n    errorProjectlistAllProjectLanding: false\r\n  },\r\n  listAllProjectLandingMostTransaction: {\r\n    isLoadinglistAllProjectLanding: false,\r\n    numOfProject: 0,\r\n    listOfProject: [],\r\n    errorProjectlistAllProjectLanding: false\r\n  },\r\n\r\n  projectListInvested: {\r\n    isLoadingProjectListInvested: false,\r\n    numOfProject: 0,\r\n    listOfProject: [],\r\n    errorProjectListInvested: false\r\n  },\r\n  InvestedProjectDetails: {\r\n    isLoadingProjectListInvested: false,\r\n    listOfProject: null,\r\n    errorProjectListInvested: false\r\n  },\r\n  projects: [],\r\n  project: null,\r\n  sortBy: null,\r\n  filters: {\r\n    areaId: 'HCM',\r\n    status: []\r\n  },\r\n  ProjectState: {\r\n    isLoading: false,\r\n    projectList: {\r\n      numOfProject: 0,\r\n      listOfProject: []\r\n    },\r\n    error: false\r\n  },\r\n  packageLists: {\r\n    isPackageLoading: false,\r\n    numOfPackage: 0,\r\n    listOfPackage: []\r\n  },\r\n  projectPackageDetails: {\r\n    projectPackageDetailsLoading: false,\r\n    PackageDetails: null\r\n  }\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'project',\r\n  initialState,\r\n  reducers: {\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // ------ GET ALL PROJECT ------------ //\r\n    startLoadingProjectList(state) {\r\n      state.projectList.isLoadingProjectList = true;\r\n    },\r\n    hasGetAllProjectError(state, action) {\r\n      state.projectList.isLoadingProjectList = false;\r\n      state.projectList.errorProjectList = action.payload;\r\n    },\r\n    getProjectListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.projectList = action.payload;\r\n    },\r\n    // ------ GET PROJECT BY FILTER 1/10/2022 ------------ //\r\n    startLoadingProjectListLanding(state) {\r\n      state.projectListLanding.isLoadingProjectListLanding = true;\r\n    },\r\n    hasGetAllProjectLandingError(state, action) {\r\n      state.projectListLanding.isLoadingProjectListLanding = false;\r\n      state.projectListLanding.errorProjectList = action.payload;\r\n    },\r\n    getProjectListLandingSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.projectListLanding = action.payload;\r\n    },\r\n    // ------ GET ALL PROJECT IN LANDING ------------ //\r\n    startLoadingListAllProjectLanding(state) {\r\n      state.listAllProjectLanding.isLoadinglistAllProjectLanding = true;\r\n    },\r\n    hasGetListAllProjectLandingError(state, action) {\r\n      state.listAllProjectLanding.isLoadinglistAllProjectLanding = false;\r\n      state.listAllProjectLanding.errorProjectlistAllProjectLanding = action.payload;\r\n    },\r\n    getListAllProjectLandingSuccess(state, action) {\r\n      state.listAllProjectLanding.isLoadinglistAllProjectLanding = false;\r\n      state.listAllProjectLanding = action.payload;\r\n    },\r\n    // ------ GET ALL PROJECT IN LANDING MOST TRANSACTION ------------ //\r\n    startLoadingListAllProjectMostTransactionLanding(state) {\r\n      state.listAllProjectLandingMostTransaction.isLoadinglistAllProjectLanding = true;\r\n    },\r\n    hasGetListAllProjectLandingMostTransactionError(state, action) {\r\n      state.listAllProjectLandingMostTransaction.isLoadinglistAllProjectLanding = false;\r\n      state.listAllProjectLandingMostTransaction.errorProjectlistAllProjectLanding = action.payload;\r\n    },\r\n    getListAllProjectLandingMostTransactionSuccess(state, action) {\r\n      state.listAllProjectLandingMostTransaction.isLoadinglistAllProjectLanding = false;\r\n      state.listAllProjectLandingMostTransaction = action.payload;\r\n    },\r\n    // ------ GET ALL PROJECT INVESTED ------------ //\r\n    startLoadingProjectInvestedList(state) {\r\n      state.projectListInvested.isLoadingProjectListInvested = true;\r\n    },\r\n    hasGetAllProjectInvestedError(state, action) {\r\n      state.projectListInvested.isLoadingProjectListInvested = false;\r\n      state.projectListInvested.errorProjectListInvested = action.payload;\r\n    },\r\n    getProjectListInvestedSuccess(state, action) {\r\n      state.projectListInvested.isLoadingProjectListInvested = false;\r\n      state.projectListInvested = action.payload;\r\n    },\r\n    // ------ GET PROJECT INVESTED BY ID------------ //\r\n    startLoadingProjectInvestedById(state) {\r\n      state.InvestedProjectDetails.isLoadingProjectListInvested = true;\r\n    },\r\n    hasGetProjectInvestedByIdError(state, action) {\r\n      state.InvestedProjectDetails.isLoadingProjectListInvested = false;\r\n      state.InvestedProjectDetails.errorProjectListInvested = action.payload;\r\n    },\r\n    getProjectListInvestedByIdSuccess(state, action) {\r\n      state.InvestedProjectDetails.isLoadingProjectListInvested = false;\r\n      state.InvestedProjectDetails.listOfProject = action.payload;\r\n    },\r\n\r\n    // ------ GET ALL PROJECT BY ID------------ //\r\n\r\n    starDetailOfProjectIDtLoading(state) {\r\n      state.detailOfProject.isLoadingDetailOfProjectID = true;\r\n    },\r\n    hasDetailOfProjectIDError(state, action) {\r\n      state.detailOfProject.isLoadingDetailOfProjectID = false;\r\n      state.detailOfProject.errorDetailOfProjectID = action.payload;\r\n    },\r\n    getProjectListIDSuccess(state, action) {\r\n      state.detailOfProject.isLoadingDetailOfProjectID = false;\r\n      state.detailOfProject.detailOfProjectID = action.payload;\r\n    },\r\n\r\n    // ------ GET ALL PACKAGE BY PROJECT ID------------ //\r\n    // START LOADING\r\n    startPackageListLoading(state) {\r\n      state.packageLists.isPackageLoading = true;\r\n    },\r\n\r\n    getProjectPackageSuccess(state, action) {\r\n      state.packageLists.isPackageLoading = false;\r\n      state.packageLists = action.payload;\r\n    },\r\n    // ------ GET PACKAGE BY  ID------------ //\r\n    // START LOADING\r\n    startPackageIDLoading(state) {\r\n      state.projectPackageDetails.projectPackageDetailsLoading = true;\r\n    },\r\n\r\n    getPackageIDSuccess(state, action) {\r\n      state.projectPackageDetails.projectPackageDetailsLoading = false;\r\n      state.projectPackageDetails.PackageDetails = action.payload;\r\n    },\r\n\r\n    //  SORT & FILTER PRODUCTS\r\n    sortByProjects(state, action) {\r\n      state.sortBy = action.payload;\r\n    },\r\n\r\n    filterProjects(state, action) {\r\n      state.filters.areaId = action.payload.areaId;\r\n      state.filters.status = action.payload.status;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\nexport const { sortByProjects, filterProjects } = slice.actions;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// PACKAGE PROJECT\r\nexport function getProjectPackage(projectId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startPackageListLoading());\r\n    try {\r\n      const response = await ProjectAPI.getPackageID({ id: projectId });\r\n      dispatch(slice.actions.getProjectPackageSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n// PACKAGE PROJECT BY ID\r\n\r\nexport function getPackageBYID(Id: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startPackageIDLoading());\r\n    try {\r\n      const response = await ProjectAPI.getPackageBYID({ id: Id });\r\n      dispatch(slice.actions.getPackageIDSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n// ALL PROJECT\r\nexport function getAllProject() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingProjectList());\r\n    try {\r\n      const response = await ProjectAPI.getAllProject();\r\n      dispatch(slice.actions.getProjectListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasGetAllProjectError(error));\r\n    }\r\n  };\r\n}\r\n// ALL PROJECT BY FILTER 1/10/2022\r\nexport function getProjectLandingByFilter() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingProjectListLanding());\r\n    try {\r\n      const response = await ProjectAPI.getAllProject();\r\n      dispatch(slice.actions.getProjectListLandingSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasGetAllProjectLandingError(error));\r\n    }\r\n  };\r\n}\r\n// ALL PROJECT 1/10/2022\r\nexport function getListAllProjectLanding() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingListAllProjectLanding());\r\n    try {\r\n      const response = await ProjectAPI.getAllProject();\r\n      dispatch(slice.actions.getListAllProjectLandingSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasGetListAllProjectLandingError(error));\r\n    }\r\n  };\r\n}\r\n// ALL PROJECT HIGHLIGHT 1/10/2022\r\nexport function getListAllProjectMostTransactionLanding() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingListAllProjectMostTransactionLanding());\r\n    try {\r\n      const response = await ProjectAPI.getAllProjectMostTransaction();\r\n      dispatch(slice.actions.getListAllProjectLandingMostTransactionSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasGetListAllProjectLandingMostTransactionError(error));\r\n    }\r\n  };\r\n}\r\n// GET PROJECT BY ID\r\nexport function getProjectListById(projectId: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.starDetailOfProjectIDtLoading());\r\n    try {\r\n      const response = await ProjectAPI.get({ id: projectId });\r\n      dispatch(slice.actions.getProjectListIDSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasDetailOfProjectIDError(error));\r\n    }\r\n  };\r\n}\r\n//------- GET ALL PROJECT WITH PARAMS\r\nexport function getProjectList() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingProjectList());\r\n    try {\r\n      const response = await ProjectAPI.gets();\r\n      dispatch(slice.actions.getProjectListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\nexport function getProjectListWithFilter(\r\n  fieldIds: string[],\r\n  businessId: string,\r\n  investmentTargetCapital: string,\r\n  status: string\r\n) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingProjectListLanding());\r\n    try {\r\n      const response = await ProjectAPI.getProjectByFilter({\r\n        fieldIds: fieldIds,\r\n        businessId: businessId,\r\n        investmentTargetCapital: investmentTargetCapital,\r\n        status: status\r\n      });\r\n      dispatch(slice.actions.getProjectListLandingSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n//------- GET ALL PROJECT INVESTED WITH PARAMS\r\nexport function getProjectListInvested(pageIndex: number, pageSize: number) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingProjectInvestedList());\r\n    try {\r\n      const response = await ProjectAPI.getProjectInvested({\r\n        pageIndex: pageIndex,\r\n        pageSize: pageSize\r\n      });\r\n      dispatch(slice.actions.getProjectListInvestedSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n//------- GET PROJECT INVESTED WITH ID\r\nexport function getProjectListInvestedById(Id: string) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoadingProjectInvestedById());\r\n    try {\r\n      const response = await ProjectAPI.getProjectInvestedByID(Id);\r\n      dispatch(slice.actions.getProjectListInvestedByIdSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasGetProjectInvestedByIdError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\business.ts",["2596","2597","2598","2599","2600","2601"],"import { map, filter } from 'lodash';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch } from '../../store';\r\n// utils\r\nimport axios from 'axios';\r\nimport { useSnackbar } from 'notistack';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { Business } from '../../../@types/krowd/bussiness';\r\nimport { BusinessAPI } from '_apis_/krowd_apis/business';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype BusinessState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  businessLists: {\r\n    isLoadingBusinessLists: boolean;\r\n\r\n    numOfBusiness: number;\r\n    listOfBusiness: Business[];\r\n  };\r\n\r\n  activeBussinessId: Business | null;\r\n  status: string[];\r\n};\r\n\r\nconst initialState: BusinessState = {\r\n  isLoading: false,\r\n  error: false,\r\n  activeBussinessId: null,\r\n  businessLists: { isLoadingBusinessLists: false, numOfBusiness: 0, listOfBusiness: [] },\r\n\r\n  status: ['Đang hoạt động', 'Ngừng hoạt động', 'Bị khóa']\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'business',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET MANAGE USERS\r\n    getBusinessListSuccess(state, action) {\r\n      state.businessLists.isLoadingBusinessLists = false;\r\n      state.businessLists = action.payload;\r\n    },\r\n\r\n    getBusinessListIDSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.activeBussinessId = action.payload;\r\n    },\r\n    delBusinessListIDSuccess(state, action) {\r\n      state.businessLists = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\n\r\nexport function getBusinessList() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await BusinessAPI.gets();\r\n      dispatch(slice.actions.getBusinessListSuccess(response.data));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\redux\\slices\\krowd_slices\\area.ts",["2602","2603"],"import { map, filter } from 'lodash';\r\nimport { createSlice } from '@reduxjs/toolkit';\r\nimport { dispatch } from '../../store';\r\n// utils\r\nimport { Areas } from '../../../@types/krowd/areaKrowd';\r\nimport axios from 'axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype AreasState = {\r\n  isLoading: boolean;\r\n  error: boolean;\r\n  areaList: Areas[];\r\n};\r\n\r\nconst initialState: AreasState = {\r\n  isLoading: false,\r\n  error: false,\r\n  areaList: []\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'area',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET MANAGE USERS\r\n    getAreaListSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.areaList = action.payload;\r\n    }\r\n  }\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getAreasList() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get(\r\n        'https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/areas'\r\n      );\r\n      dispatch(slice.actions.getAreaListSuccess(response.data));\r\n      console.log('Areas data:', response.data);\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\account.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\products.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\blog.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\user.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\mail.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\chat.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\axios.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\config.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useLocales.ts",["2604"],"import { useTranslation } from 'react-i18next';\r\n// material\r\nimport { enUS, deDE, frFR } from '@mui/material/locale';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LANGS = [\r\n  {\r\n    label: 'English',\r\n    value: 'en',\r\n    systemValue: enUS,\r\n    icon: '/static/icons/ic_flag_en.svg'\r\n  },\r\n  {\r\n    label: 'Vietnamese',\r\n    value: 'de',\r\n    systemValue: deDE,\r\n\r\n    icon: '/static/icons/ic_flag_de.svg'\r\n  }\r\n];\r\n\r\nexport default function useLocales() {\r\n  const { i18n, t: translate } = useTranslation();\r\n  const langStorage = localStorage.getItem('i18nextLng');\r\n  const currentLang = LANGS.find((_lang) => _lang.value === langStorage) || LANGS[1];\r\n\r\n  const handleChangeLanguage = (newlang: string) => {\r\n    i18n.changeLanguage(newlang);\r\n  };\r\n\r\n  return {\r\n    onChangeLang: handleChangeLanguage,\r\n    translate,\r\n    currentLang,\r\n    allLang: LANGS\r\n  };\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useSettings.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\routes\\index.tsx",["2605","2606","2607","2608"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\api\\firebase.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ScrollButton.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\template_apis\\mock.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\shadows.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\contexts\\SettingsContext.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Page404.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\ComponentsOverview.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\PageTopUp.tsx",["2609","2610","2611","2612","2613","2614","2615","2616","2617","2618","2619","2620","2621"],"import { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { styled } from '@mui/material/styles';\r\n// material\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Container,\r\n  Grid,\r\n  Card,\r\n  TextField,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Modal,\r\n  Dialog,\r\n  FormHelperText,\r\n  Divider\r\n} from '@mui/material';\r\n// components\r\nimport Page from '../components/Page';\r\nimport { SeverErrorIllustration } from '../assets';\r\nimport MainNavbarTopUp from '../layouts/main/MainNavbarTopUp';\r\nimport { Icon } from '@iconify/react';\r\nimport backspace from '@iconify/icons-eva/backspace-fill';\r\nimport Logo from 'components/Logo';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport shieldCheck from '@iconify/icons-bi/shield-check';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { fCurrency } from 'utils/formatNumber';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { useSnackbar } from 'notistack';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport axios from 'axios';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport MainFooter from 'layouts/main/MainFooter';\r\nimport * as Yup from 'yup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  minHeight: '100%'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PageTopUp() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    dispatch(getWalletList());\r\n  }, [dispatch]);\r\n\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}` };\r\n  }\r\n  const TransferSchema = Yup.object().shape({\r\n    amount: Yup.number()\r\n      .required('Vui lòng nhập số tiền')\r\n      .min(100000, 'Yêu cầu tối thiểu mỗi lần nạp là 100,000đ')\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      amount: 0\r\n    },\r\n    validationSchema: TransferSchema,\r\n\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const formData = new FormData();\r\n        const header = getHeaderFormData();\r\n        formData.append('amount', `${values.amount}`);\r\n        await axios({\r\n          method: 'post',\r\n          url: REACT_APP_API_URL + '/momo/request',\r\n          data: formData,\r\n          headers: header\r\n        })\r\n          .then((res) => {\r\n            // window.open(res.data.result.payUrl);\r\n            // enqueueSnackbar('Cập nhật số dư thành công', {\r\n            //   variant: 'success'\r\n            // });\r\n            window.location.replace(res.data.result.payUrl);\r\n\r\n            // navigate(res.data.result.payUrl);\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Cập nhật số dư thất bại', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {});\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, isSubmitting, handleSubmit, getFieldProps, setFieldValue } =\r\n    formik;\r\n\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n  return (\r\n    <RootStyle title=\"Krowd - Trung tâm nạp tiền\">\r\n      <MainNavbarTopUp></MainNavbarTopUp>\r\n      <Grid container>\r\n        <Grid lg={3}></Grid>\r\n        <Grid>\r\n          <Container sx={{ marginTop: '120px' }}>\r\n            <Button href=\"/\">\r\n              <Icon width={20} height={20} icon={backspace} />\r\n            </Button>\r\n            Quay lại trang chủ\r\n          </Container>\r\n          <Container>\r\n            <Box sx={{ display: 'flex', my: 3, alignItems: 'center' }}>\r\n              <Button href=\"/\" disabled>\r\n                <Logo sx={{ width: 20, height: 20 }} />\r\n              </Button>\r\n              Krowd - Nạp tiền\r\n            </Box>\r\n          </Container>\r\n        </Grid>\r\n      </Grid>\r\n      <Container>\r\n        <Box sx={{ margin: 'auto', textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" sx={{ mb: 2 }}>\r\n            Thanh toán tiện dụng với Momo\r\n          </Typography>\r\n        </Box>\r\n        <Box sx={{ width: 280, margin: 'auto', textAlign: 'center', mb: 2 }}>\r\n          <img style={{ width: '100%', height: '100%' }} src=\"/static/icons/navbar/momo.jpg\" />\r\n        </Box>\r\n        {/* <Button sx={{ width: '40%', height: '50%' }}>\r\n                    <img\r\n                      style={{ width: '140px', height: '87px' }}\r\n                      src=\"/static/icons/navbar/VNPay.svg\"\r\n                    />\r\n                  </Button> */}\r\n        {/* <Button sx={{ width: '40%', height: '50%' }}>\r\n                    <img\r\n                      style={{ width: '140px', height: '87px' }}\r\n                      src=\"/static/icons/navbar/momo.jpg\"\r\n                    />\r\n                  </Button> */}\r\n        {/* <Button sx={{ width: '40%', height: '50%' }}>\r\n                    <img\r\n                      style={{ width: '140px', height: '87px' }}\r\n                      src=\"/static/icons/navbar/VNPay.svg\"\r\n                    />\r\n                  </Button> */}\r\n        {/* <Button sx={{ width: '40%', height: '50%' }}>\r\n                    <img\r\n                      style={{ width: '140px', height: '87px' }}\r\n                      src=\"/static/icons/navbar/momo.jpg\"\r\n                    />\r\n                  </Button> */}\r\n      </Container>\r\n      <Container>\r\n        <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }} pb={7}>\r\n          <Card>\r\n            <Box sx={{ p: 2 }}>\r\n              <Box\r\n                sx={{\r\n                  p: 3,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  gap: 2,\r\n                  backgroundColor: '#80808021',\r\n                  borderRadius: '5px'\r\n                }}\r\n              >\r\n                <img\r\n                  style={{ width: '40px', height: '40px' }}\r\n                  src=\"/static/icons/navbar/momo.jpg\"\r\n                />{' '}\r\n                <Typography>\r\n                  Số dư ví: {listOfInvestorWallet.slice(1, 2).map((e) => fCurrency(e.balance))}\r\n                </Typography>\r\n              </Box>\r\n              <FormikProvider value={formik}>\r\n                <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    type={'number'}\r\n                    label=\"Số tiền cần nạp\"\r\n                    {...getFieldProps('amount')}\r\n                    sx={{ mt: 5 }}\r\n                  />\r\n                  {touched.amount && errors.amount && (\r\n                    <FormHelperText error sx={{ px: 2 }}>\r\n                      {touched.amount && errors.amount}\r\n                    </FormHelperText>\r\n                  )}\r\n                  <RadioGroup row sx={{ my: 2 }} {...getFieldProps('amount')}>\r\n                    <FormControlLabel\r\n                      value=\"500000\"\r\n                      control={<Radio />}\r\n                      label=\"500,000đ\"\r\n                      sx={{ px: 2 }}\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"1000000\"\r\n                      control={<Radio />}\r\n                      label=\"1,000,000đ\"\r\n                      sx={{ px: 2 }}\r\n                    />\r\n                    <FormControlLabel\r\n                      value=\"5000000\"\r\n                      control={<Radio />}\r\n                      label=\"5,000,000đ\"\r\n                      sx={{ px: 2 }}\r\n                    />\r\n                  </RadioGroup>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n                    <Icon color=\"green\" width={30} height={30} icon={shieldCheck} />\r\n                    <Typography sx={{ mt: 3, textAlign: 'left', ml: 1 }}>\r\n                      Mọi thông tin khách hàng đều được mã hóa để bảo mật thông tin khách hàng.\r\n                    </Typography>\r\n                  </Box>\r\n                  <LoadingButton\r\n                    fullWidth\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    loading={isSubmitting}\r\n                  >\r\n                    Nạp tiền\r\n                  </LoadingButton>\r\n                </Form>\r\n              </FormikProvider>\r\n            </Box>\r\n          </Card>\r\n        </Box>\r\n      </Container>\r\n      <Divider />\r\n      <MainFooter />\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\PageSuccess.tsx",["2622","2623","2624","2625"],"//-----------------\r\nimport { motion } from 'framer-motion';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, Typography, Container } from '@mui/material';\r\n// components\r\nimport { MotionContainer, varBounceIn } from '../components/animate';\r\nimport Page from '../components/Page';\r\nimport { OrderCompleteIllustration, PageNotFoundIllustration, SuccessIlustation } from '../assets';\r\nimport { useEffect, useState } from 'react';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  display: 'flex',\r\n  minHeight: '100%',\r\n  alignItems: 'center',\r\n  paddingTop: theme.spacing(15),\r\n  paddingBottom: theme.spacing(10)\r\n}));\r\nconst SuccessIlustation2 = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(15, 0, 4, 0),\r\n  backgroundImage: `url(${SuccessIlustation})`,\r\n  backgroundSize: 'cover'\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function PageSuccess() {\r\n  const [count, setCount] = useState(5);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCount(count - 1);\r\n    }, 1000);\r\n    if (count === 0) {\r\n      navigate('/dashboard/banking');\r\n    }\r\n    console.log('1 second', count);\r\n  }, [count]);\r\n\r\n  return (\r\n    <RootStyle title=\"Success | Krowd\">\r\n      <Container>\r\n        <MotionContainer initial=\"initial\" open>\r\n          <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n            <motion.div variants={varBounceIn}>\r\n              <Typography variant=\"h3\" paragraph>\r\n                Giao dịch hoàn thành\r\n              </Typography>\r\n            </motion.div>\r\n            <Typography sx={{ color: 'text.secondary' }}>\r\n              Chúng tôi sẽ quay lại ví của bạn trong vòng {count} giây. <br />\r\n              Nếu bạn có bất kỳ câu hỏi hoặc thắc mắc nào thì vui lòng liên hệ với chúng tôi. <br />{' '}\r\n              <br /> Chúc bạn một ngày vui vẻ,\r\n            </Typography>\r\n\r\n            <motion.div variants={varBounceIn}>\r\n              <SuccessIlustation2 sx={{ height: 460 }}></SuccessIlustation2>\r\n            </motion.div>\r\n\r\n            <Button to=\"/dashboard/banking\" size=\"large\" variant=\"contained\" component={RouterLink}>\r\n              Trở về ví của bạn\r\n            </Button>\r\n          </Box>\r\n        </MotionContainer>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Page500.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Payment.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Maintenance.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\KrowdPackage.tsx",["2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639","2640","2641","2642","2643","2644","2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656"],"// material\r\nimport {\r\n  Divider,\r\n  Container,\r\n  Grid,\r\n  Box,\r\n  Typography,\r\n  styled,\r\n  CircularProgress,\r\n  TextField,\r\n  Stack,\r\n  FormControl,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  DialogContentText,\r\n  Input\r\n} from '@mui/material';\r\n\r\n// redux\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\n// icons\r\nimport { Link as RouterLink, useNavigate, useParams } from 'react-router-dom';\r\n// material\r\nimport { Button, Toolbar } from '@mui/material';\r\n// components\r\nimport Page from 'components/Page';\r\nimport {\r\n  ProjectDetailDocument,\r\n  ProjectDetailHowItWorks\r\n} from 'components/_external-pages/project-detail/index';\r\n\r\nimport { useEffect, useState } from 'react';\r\n//Language\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport {\r\n  getPackageBYID,\r\n  getProjectListById,\r\n  getProjectPackage\r\n} from 'redux/slices/krowd_slices/project';\r\nimport { getAllProjectStage, getProjectStageList } from 'redux/slices/krowd_slices/stage';\r\nimport { Icon } from '@iconify/react';\r\nimport lockFill from '@iconify/icons-ant-design/lock-outline';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { getUserKrowdDetail } from 'redux/slices/krowd_slices/investor';\r\nimport UserAccountForm from './dashboard/AccountManager/UserAccountForm';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { useSnackbar } from 'notistack';\r\nimport * as Yup from 'yup';\r\nimport { fCurrency, fCurrencyPackage } from 'utils/formatNumber';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport sield from '@iconify/icons-eva/shield-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// import eyeOffFill from '@iconify/icons-eva/eye-off-2-fill';\r\nimport checkFill from '@iconify/icons-eva/checkmark-fill';\r\nimport check2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\r\nimport redFill from '@iconify/icons-eva/alert-triangle-fill';\r\nimport alertFill from '@iconify/icons-eva/alert-triangle-outline';\r\nimport { MIconButton } from 'components/@material-extend';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport { PATH_PAGE } from 'routes/paths';\r\nimport { Package } from '../@types/krowd/project';\r\nimport LoadingScreen from 'components/LoadingScreen';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LIST_TERM = styled('div')(({}) => ({\r\n  borderTop: '1px solid #e0e0e0',\r\n  border: '1px solid #e0e0e0',\r\n  color: '#000',\r\n  fontSize: '12px',\r\n  fontWeight: 400,\r\n  lineHeight: '1.2rem',\r\n  padding: '10px 14px 12px'\r\n}));\r\n\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n\r\nexport default function KrowdPackage() {\r\n  const { user } = useAuth();\r\n  const [open, setOpen] = useState(false);\r\n  const [showCurrency, setShowCurrency] = useState(true);\r\n  const [showIDPayment, setShowIDPayment] = useState(true);\r\n  const [openModalInvestSuccess, setOpenModalInvestSuccess] = useState(false);\r\n  const [openModalInvestError, setOpenModalInvestError] = useState(false);\r\n  const [openInvestedConfirm, setOpenInvestedConfirm] = useState(false);\r\n  const { id = '' } = useParams();\r\n  const [valueMin, setValueMin] = useState<Date | null>(new Date(Date.now()));\r\n\r\n  //DATA RESPONSE SUCCESS\r\n  const [resPaymentID, setDataInvestedIDPAY] = useState('');\r\n  const [resQuality, setDataInvestedQuality] = useState('');\r\n  const [resWalletName, setDataInvestedfromWalletName] = useState('');\r\n  const [resFee, setDataInvestedfee] = useState('');\r\n  const [resDate, setDataInvestedDate] = useState('');\r\n  const [PackageName, setPackageName] = useState('');\r\n  const [PackagePrice, setPackagePrice] = useState(0);\r\n  const [PackageQuan, setPackageQuan] = useState(1);\r\n  const [PackageRemainQuan, setPackageRemainQuan] = useState(0);\r\n  const [dataInvestedSuccess, setDataInvestedSuccess] = useState();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const onToggleShowCurrency = () => {\r\n    setShowCurrency((prev) => !prev);\r\n  };\r\n  const onToggleShowIDPayment = () => {\r\n    setShowIDPayment((prev) => !prev);\r\n  };\r\n  const handleConfilmInvested = () => {\r\n    setOpenInvestedConfirm(true);\r\n  };\r\n  const handleCloseConfilmInvested = () => {\r\n    setOpenInvestedConfirm(false);\r\n  };\r\n\r\n  //--------------------GET DATA----------------------------\r\n  useEffect(() => {\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n    dispatch(getWalletList());\r\n\r\n    if (id) {\r\n      dispatch(getProjectPackage(id));\r\n      dispatch(getProjectListById(id));\r\n      // setPackageName('');\r\n      // setPackagePrice(0);\r\n      // setPackageQuan(1);\r\n      // setPackageRemainQuan(0);\r\n    } else {\r\n      dispatch(getProjectPackage(`${localStorage.getItem('projectId')}`));\r\n      dispatch(getProjectListById(`${localStorage.getItem('projectId')}`));\r\n      // setPackageName('');\r\n      // setPackagePrice(0);\r\n      // setPackageQuan(1);\r\n      // setPackageRemainQuan(0);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  //--------------------ROOT STATE-------------------------\r\n  //--------------------GET MAIN USER (INVESTOR)------------\r\n  const { investorKrowdDetail: mainInvestor, isLoading } = useSelector(\r\n    (state: RootState) => state.user_InvestorStateKrowd\r\n  );\r\n  //--------------------PROJECT-----------------------------\r\n  const { detailOfProject, packageLists, projectPackageDetails } = useSelector(\r\n    (state: RootState) => state.project\r\n  );\r\n  const { detailOfProjectID: projectID, isLoadingDetailOfProjectID } = detailOfProject;\r\n  //-------------------WALLET BALANCE------------------------\r\n  const { walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n  //-------------------PACKAGE-------------------------------\r\n  const { PackageDetails } = projectPackageDetails;\r\n  const { isPackageLoading } = packageLists;\r\n  //-------------------LANGUAGE------------------------------\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n\r\n  const handleClickOpenPackage2 = async (v: Package) => {\r\n    // setPackageName(PackageDetails?.name ?? '');\r\n    // setPackagePrice(PackageDetails?.price ?? 0);\r\n    // setPackageQuan(PackageDetails?.quantity ?? 0);\r\n    // setPackageRemainQuan(PackageDetails?.remainingQuantity ?? 0);\r\n    await dispatch(getPackageBYID(v.id));\r\n  };\r\n  // const handleClickRefeshBalance = async (v: Package) => {\r\n  //   dispatch(getWalletTypeByID(v.id));\r\n  // };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const getEntityList = (type: 'DOCUMENT' | 'HOW_IT_WORKS') => {\r\n    return projectID?.projectEntity.find((pe) => pe.type === type)?.typeItemList;\r\n  };\r\n\r\n  const { documents, hows } = {\r\n    documents: getEntityList('DOCUMENT'),\r\n    hows: getEntityList('HOW_IT_WORKS')\r\n  };\r\n\r\n  const NewProjectSchema = Yup.object().shape({\r\n    projectId: Yup.string().required('Yêu cầu nhập dự án')\r\n  });\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      projectId: id,\r\n      checkBox: false,\r\n      packageId: PackageDetails?.id,\r\n      quantity: 1\r\n    },\r\n    validationSchema: NewProjectSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const headers = getHeaderFormData();\r\n        await axios\r\n          .post(\r\n            `${REACT_APP_API_URL}/investments`,\r\n            {\r\n              projectId: id,\r\n              packageId: PackageDetails?.id,\r\n              quantity: `${values.quantity}`\r\n            },\r\n            { headers: headers }\r\n          )\r\n          .then((res) => {\r\n            setDataInvestedSuccess(res.data.amount);\r\n            setDataInvestedIDPAY(res.data.id);\r\n            setDataInvestedQuality(res.data.investedQuantity);\r\n            setDataInvestedfromWalletName(res.data.fromWalletName);\r\n            setDataInvestedfee(res.data.fee);\r\n            setDataInvestedDate(res.data.createDate);\r\n            if (res.data.status === 'SUCCESS') {\r\n              setOpenModalInvestSuccess(true);\r\n              enqueueSnackbar('Đầu tư thành công', {\r\n                variant: 'success'\r\n              });\r\n            } else {\r\n              setOpenModalInvestError(true);\r\n              enqueueSnackbar('Cập nhật thất bại', {\r\n                variant: 'error'\r\n              });\r\n            }\r\n          })\r\n          .catch(() => {\r\n            setOpenModalInvestError(true);\r\n            enqueueSnackbar('Cập nhật thất bại', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {\r\n            resetForm();\r\n            setSubmitting(true);\r\n          });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n  const inputProps = {\r\n    step: 1\r\n  };\r\n  const { errors, values, touched, isSubmitting, handleSubmit, getFieldProps, setFieldValue } =\r\n    formik;\r\n  return (\r\n    <Page title=\"Chi tiết dự án | Krowd\">\r\n      {isLoadingDetailOfProjectID && (\r\n        <Box sx={{ height: 1000, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n          <Box>\r\n            <LoadingScreen />\r\n            <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem', pt: 7 }}>\r\n              KROWD Đang tải dữ liệu, vui lòng đợi giây lát...\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n      {!isLoadingDetailOfProjectID && projectID && (\r\n        <>\r\n          <Container maxWidth={'lg'}>\r\n            <Box my={2} pt={'7rem'} sx={{ display: 'flex', gap: '12px', alignItems: 'center' }}>\r\n              <Typography>\r\n                <img style={{ width: '80px' }} src={projectID.business.image} />\r\n              </Typography>\r\n              <Typography variant=\"h2\">{projectID.name}</Typography>\r\n            </Box>\r\n          </Container>\r\n          <Box sx={{ mb: 5 }}>\r\n            <Divider variant=\"fullWidth\" sx={{ opacity: 0.1 }} />\r\n          </Box>\r\n          <Container maxWidth={'lg'}>\r\n            <Box>\r\n              <Grid container justifyContent=\"space-between\">\r\n                <Grid xs={12} sm={7} md={6} lg={8}>\r\n                  <Container sx={{ maxWidth: 600 }}>\r\n                    <Box>\r\n                      <Grid container justifyContent=\"space-between\" alignItems={'baseline'}>\r\n                        <Grid lg={6}>\r\n                          <Typography variant=\"h3\">\r\n                            {t(`Project_package_invest.InvestmentAmount`)}\r\n                          </Typography>\r\n                        </Grid>\r\n                        {listOfInvestorWallet && (\r\n                          <Grid>\r\n                            <Typography variant=\"h5\"> Số tiền trong ví của bạn</Typography>\r\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n                              <Typography sx={{ typography: 'h5' }}>\r\n                                {showCurrency\r\n                                  ? '********'\r\n                                  : listOfInvestorWallet.at(1)?.balance &&\r\n                                    fCurrency(`${listOfInvestorWallet.at(1)?.balance}`)}\r\n                              </Typography>\r\n                              <MIconButton\r\n                                color=\"inherit\"\r\n                                onClick={onToggleShowCurrency}\r\n                                sx={{ opacity: 0.48 }}\r\n                                // onClickCapture={() => setBalance(e.balance)}\r\n                              >\r\n                                <Icon icon={showCurrency ? eyeFill : eyeOffFill} />\r\n                              </MIconButton>\r\n                            </Stack>\r\n                          </Grid>\r\n                        )}\r\n                      </Grid>\r\n                    </Box>\r\n                    <Box sx={{ pt: 1.5, maxWidth: 600 }}>\r\n                      {t(`Project_package_invest.InvestPaymentsHead`)}\r\n                    </Box>\r\n                    <Box sx={{ pt: 1.5 }}>\r\n                      <Stack\r\n                        direction={{ xs: 'column', sm: 'row' }}\r\n                        spacing={{ xs: 3, sm: 2 }}\r\n                        sx={{ pb: 3 }}\r\n                      >\r\n                        <TextField\r\n                          sx={{ width: 300 }}\r\n                          disabled\r\n                          label=\"Chọn gói của bạn muốn đầu tư\"\r\n                          value={PackageDetails?.name ?? 'Lựa chọn gói bạn muốn'}\r\n                        />\r\n\r\n                        <TextField\r\n                          sx={{ width: 300 }}\r\n                          disabled\r\n                          label=\"Giá gói\"\r\n                          value={(PackageDetails?.price && fCurrency(PackageDetails!.price)) ?? 0}\r\n                        />\r\n\r\n                        <TextField\r\n                          sx={{ width: 300 }}\r\n                          disabled\r\n                          label=\"Số gói còn lại\"\r\n                          value={\r\n                            (PackageDetails?.remainingQuantity &&\r\n                              PackageDetails?.remainingQuantity) ??\r\n                            ''\r\n                          }\r\n                        />\r\n                      </Stack>\r\n                      {PackageDetails?.price && PackageDetails?.price >= 2000000 ? (\r\n                        <Input\r\n                          type={'number'}\r\n                          sx={{\r\n                            border: '2px solid #ff8500ad',\r\n                            borderRadius: 1,\r\n                            width: 300,\r\n                            height: 60,\r\n                            p: 2\r\n                          }}\r\n                          endAdornment={'Gói'}\r\n                          disableUnderline\r\n                          id=\"basic-input\"\r\n                          {...getFieldProps('quantity')}\r\n                          value={values.quantity}\r\n                        />\r\n                      ) : (\r\n                        <Input\r\n                          sx={{\r\n                            border: '2px solid #0af50a85',\r\n                            borderRadius: 1,\r\n                            width: 300,\r\n                            height: 60,\r\n                            p: 2\r\n                          }}\r\n                          endAdornment={'Gói'}\r\n                          disableUnderline\r\n                          id=\"basic-input\"\r\n                          {...getFieldProps('quantity')}\r\n                          value={values.quantity}\r\n                        />\r\n                      )}\r\n                      {PackageDetails?.price && PackageDetails?.price < 2000000 ? (\r\n                        <Box sx={{ display: 'flex', mt: 2 }}>\r\n                          <Box>\r\n                            <Icon height={20} width={20} icon={checkFill} color={'#00cc17'} />\r\n                          </Box>\r\n                          <Box>\r\n                            <Typography>\r\n                              Hiện tại bạn đang chọn gói {fCurrency(PackageDetails?.price)}.\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                      ) : (\r\n                        <Box sx={{ display: 'flex', mt: 2 }}>\r\n                          <Box>\r\n                            <Icon height={20} width={20} icon={alertFill} color={'#ff8500ad'} />\r\n                          </Box>\r\n                          <Box>\r\n                            <Typography>\r\n                              Đây là gói \"{PackageDetails?.name}\". Tùy thuộc vào thu nhập và giá trị\r\n                              ròng của bạn, bạn có thể đủ điều kiện cho giới hạn đầu tư cao hơn. Hãy\r\n                              cân nhắc về tài chính trước khi đầu tư.\r\n                            </Typography>\r\n                          </Box>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                    <Box sx={{ pt: 1.5, pb: 3, maxWidth: 600 }}>\r\n                      {t(`Project_package_invest.InvestMyself`)}\r\n                    </Box>\r\n                    <Divider sx={{ mt: 7, maxWidth: 600 }} />\r\n                  </Container>\r\n                  <Container sx={{ p: 5 }}>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                      <Typography variant=\"h3\">\r\n                        {t(`Project_package_invest.PersonalInformation`)}\r\n                        <Icon\r\n                          style={{ marginLeft: '7px' }}\r\n                          icon={lockFill}\r\n                          height={20}\r\n                          width={20}\r\n                        />\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ pt: 1.5, maxWidth: 600 }}>\r\n                      {t(`Project_package_invest.PrivatePersonalInfomation`)}\r\n                    </Box>\r\n\r\n                    {/* <Box sx={{ pt: 3, pb: 7 }}>\r\n                      <Button variant=\"contained\" onClick={handleClickOpen}>\r\n                        {t(`Project_package_invest.ConfirmInformation`)}\r\n                        {mainInvestor && (\r\n                          <UserAccountForm user={mainInvestor} open={open} onClose={handleClose} />\r\n                        )}\r\n                      </Button>\r\n                    </Box> */}\r\n                    <Divider sx={{ mt: 7, maxWidth: 600 }} />\r\n                  </Container>\r\n\r\n                  <Container sx={{ p: 5 }}>\r\n                    <Box>\r\n                      <Typography variant=\"h3\"> {t(`Project_package_invest.Terms`)}</Typography>\r\n                    </Box>\r\n                    <Box sx={{ pt: 1.5, pb: 1.5, maxWidth: 600 }}>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư có thể hủy bỏ số tiền Nhà đầu tư khi đầu tư vào dự án (trong vòng\r\n                        24 giờ) và hệ thống sẽ hoàn tiền cho Nhà đầu tư và chuyển vào ví có trong hệ\r\n                        thống\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư sẽ nhận được số tiền (chuyển vào ví Krowd) và hoa hồng dựa trên\r\n                        các tỷ lệ doanh thu chia sẻ của {projectID.name} là{' '}\r\n                        {projectID.sharedRevenue} %.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư sẽ không có quyền biểu quyết và sẽ cấp cho một ứng cử viên bên\r\n                        thứ ba quyền hạn rộng rãi để hành động thay mặt Nhà đầu tư.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư có thể không trở thành chủ sở hữu vốn chủ sở hữu, nhà đầu tư có\r\n                        lợi và các lợi ích từ vốn chủ sở hữu trong dự án.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư khi đầu tư số tiền vào một số gói đầu tư của dự án sẽ đa dạng hóa\r\n                        rủi ro của bạn sẽ tốt hơn.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư hiểu không có gì đảm bảo về mối quan hệ giữa KROWD và{' '}\r\n                        {projectID.name} sau khi cung cấp đã đầu tư dự án\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư đồng ý thực hiện các phương tiện thanh toán tất cả các tài liệu,\r\n                        thông báo và thỏa thuận liên quan đến khoản đầu tư của nhà đầu tư.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Khoản đầu tư của nhà đầu tư sẽ không thể chuyển nhượng trong khi dự án vẫn\r\n                        còn đang vận hành.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư chắc rằng đã đọc các tài liệu liên quan và đồng ý với Điều khoản\r\n                        dịch vụ, bao gồm các điều khoản của {projectID.name}{' '}\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư hiểu các khoản đầu tư này rất rủi ro và nhà đầu tư không nên đầu\r\n                        tư trừ khi có thể đủ khả năng để mất tất cả các khoản tiền đầu tư\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư nên hiểu rằng sẽ chịu trách nhiệm về tất cả các khoản phí và lệ\r\n                        phí liên quan đến sử dụng phương thức thanh toán.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        Nhà đầu tư xác nhận rằng khoản đầu tư này, cùng với tất cả các Quy định khác\r\n                        của {projectID.name} Các khoản đầu tư huy động vốn từ cộng đồng trong suốt\r\n                        quá trình vận hành vào bất kỳ hoạt động huy động vốn từ cộng đồng nào cổng\r\n                        thông tin, không vượt quá giới hạn đầu tư.\r\n                      </LIST_TERM>\r\n                      <LIST_TERM>\r\n                        <Box sx={{ display: 'flex' }}>\r\n                          <TextField\r\n                            type={'checkbox'}\r\n                            sx={{ width: '1.5rem' }}\r\n                            {...getFieldProps('checkBox')}\r\n                          />\r\n                          <Typography sx={{ pl: 3 }}>\r\n                            Tôi đã đọc và chấp nhận các điều khoản đầu tư{' '}\r\n                          </Typography>\r\n                        </Box>\r\n                      </LIST_TERM>\r\n                    </Box>\r\n                  </Container>\r\n                  <Container sx={{ p: 5 }}>\r\n                    {/* <Box>\r\n                      <Typography variant=\"h3\">\r\n                        {t(`Project_package_invest.AdditionalInformation`)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ pt: 1.5, pb: 1.5 }}>\r\n                      {t(`Project_package_invest.DesOfAdditionalInformation`)}\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        pt: 1.5,\r\n                        pb: 1.5,\r\n                        backgroundColor: '#8080801c',\r\n                        borderRadius: '5px',\r\n                        maxWidth: 600\r\n                      }}\r\n                    >\r\n                      <Box sx={{ p: 2 }}>\r\n                        Vui lòng hoàn thành các câu hỏi sau để đảm bảo bạn có thể tham gia vào chiến\r\n                        dịch này và với mục đích hoàn thành Biểu mẫu W-9 hoặc Mẫu W-8BEN để tuân thủ\r\n                        các yêu cầu báo cáo thuế. Những tuyên bố này được thực hiện theo hình phạt\r\n                        khai man và sẽ được sử dụng để điền vào thỏa thuận đăng ký của bạn.\r\n                      </Box>\r\n                      <Box sx={{ px: 2, pt: 1, pb: 2 }}>\r\n                        Những câu hỏi này là tóm tắt các câu hỏi trên Mẫu Đơn W-9 hoặc Mẫu Đơn\r\n                        W-8BEN, nếu có. Nếu nghi ngờ, vui lòng tham khảo Biểu mẫu W-9 hoặc Mẫu đơn\r\n                        thay thế W-8BEN được bao gồm trong Thỏa thuận đăng ký trong Mẫu C.\r\n                      </Box>\r\n                    </Box>\r\n                    <Divider sx={{ mt: 7, maxWidth: 600 }} /> */}\r\n\r\n                    {PackageDetails?.price &&\r\n                    values.checkBox &&\r\n                    values.quantity > 0 &&\r\n                    listOfInvestorWallet.at(1)!.balance >=\r\n                      PackageDetails!.price * values.quantity ? (\r\n                      // {values.checkBox ? (\r\n                      <Box sx={{ mt: 3, display: 'flex' }}>\r\n                        {/* <FormikProvider value={formik}> */}\r\n                        {/* <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}> */}\r\n                        <Button\r\n                          sx={{ width: 300 }}\r\n                          type=\"submit\"\r\n                          variant=\"contained\"\r\n                          // loading={isSubmitting}\r\n                          onClick={handleConfilmInvested}\r\n                        >\r\n                          Xác nhận đầu tư {''} vào {projectID.name} với số tiền{' '}\r\n                          {PackageDetails?.price &&\r\n                            fCurrency(PackageDetails?.price * values.quantity)}{' '}\r\n                        </Button>\r\n                        <Dialog fullWidth maxWidth=\"sm\" open={openInvestedConfirm}>\r\n                          <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                            <Icon color=\"#14b7cc\" height={60} width={60} icon={sield} />\r\n                          </DialogTitle>\r\n                          <DialogContent>\r\n                            <Box mt={1}>\r\n                              <DialogContentText\r\n                                sx={{\r\n                                  textAlign: 'center',\r\n                                  fontWeight: 900,\r\n                                  fontSize: 20,\r\n                                  color: 'black'\r\n                                }}\r\n                              >\r\n                                Xác nhận đầu tư {''} vào {projectID.name}\r\n                              </DialogContentText>\r\n                            </Box>\r\n                            <Stack spacing={{ xs: 2, md: 1 }}>\r\n                              <Container sx={{ p: 2 }}>\r\n                                <Box>\r\n                                  <Typography\r\n                                    sx={{ textAlign: 'center', color: '#14b7cc', fontSize: 35 }}\r\n                                  >\r\n                                    Số tiền{' '}\r\n                                    {PackageDetails?.price &&\r\n                                      fCurrency(PackageDetails?.price * values.quantity)}{' '}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Divider sx={{ my: 2 }} />\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'space-between',\r\n                                    mb: '0.5rem',\r\n                                    p: 1\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Dự án</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>{projectID?.name}</strong>\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    p: 1,\r\n                                    justifyContent: 'space-between'\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Thời gian đầu tư</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18'\r\n                                    }}\r\n                                  >\r\n                                    {`${valueMin}`.toString().substring(8, 25)}\r\n                                  </Typography>\r\n                                </Box>\r\n\r\n                                <Box>\r\n                                  <Typography\r\n                                    sx={{ paddingLeft: 2, pt: 2, color: '#e65500' }}\r\n                                    variant=\"h6\"\r\n                                  >\r\n                                    Lưu ý:\r\n                                  </Typography>\r\n\r\n                                  <Typography\r\n                                    sx={{ paddingLeft: 0.4, pt: 2, color: '#e65500' }}\r\n                                    variant=\"body2\"\r\n                                  >\r\n                                    (*) Nhà đầu tư vui lòng kiểm tra những thông tin của mình trước\r\n                                    khi đầu tư (Họ và tên, SĐT, địa chỉ gmail).\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    sx={{ paddingLeft: 0.4, pt: 2, color: '#e65500' }}\r\n                                    variant=\"body2\"\r\n                                  >\r\n                                    (*) Nhà đầu tư vui lòng kiểm tra gói đầu tư bao gồm (tên gói, số\r\n                                    gói đã mua, số tiền đầu tư) để tránh nhầm lẫn khi thanh toán.\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    sx={{ paddingLeft: 0.4, pt: 2, color: '#e65500' }}\r\n                                    variant=\"body2\"\r\n                                  >\r\n                                    (*) Khi nhà đầu tư bấm xác nhận KROWD sẽ gửi tới hòm thư điện tử\r\n                                    thông qua địa chỉ gmail của nhà đầu tư (Bản hợp đồng, xác nhận\r\n                                    bạn đã đầu tư vào dự án, những thông tin liên quan tới dự án)\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Container>\r\n                            </Stack>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }} gap={1}>\r\n                              <Box>\r\n                                <Button\r\n                                  color=\"error\"\r\n                                  onClick={() => setOpenInvestedConfirm(false)}\r\n                                  variant=\"contained\"\r\n                                >\r\n                                  Đóng\r\n                                </Button>\r\n                              </Box>\r\n                              <FormikProvider value={formik}>\r\n                                <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                                  <LoadingButton\r\n                                    sx={{ width: 300 }}\r\n                                    type=\"submit\"\r\n                                    variant=\"contained\"\r\n                                    loading={isSubmitting}\r\n                                  >\r\n                                    Xác nhận đầu tư {''}{' '}\r\n                                    {PackageDetails?.price &&\r\n                                      fCurrency(PackageDetails?.price * values.quantity)}{' '}\r\n                                  </LoadingButton>\r\n                                </Form>\r\n                              </FormikProvider>\r\n                            </Box>\r\n                          </DialogContent>\r\n                        </Dialog>\r\n                        <Dialog fullWidth maxWidth=\"sm\" open={openModalInvestError}>\r\n                          <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                            <Icon color=\"red\" height={60} width={60} icon={redFill} />\r\n                          </DialogTitle>\r\n                          <DialogContent>\r\n                            <Box mt={1}>\r\n                              <DialogContentText\r\n                                sx={{\r\n                                  textAlign: 'center',\r\n                                  fontWeight: 900,\r\n                                  fontSize: 20,\r\n                                  color: 'black'\r\n                                }}\r\n                              >\r\n                                Giao dịch không thành công\r\n                              </DialogContentText>\r\n                            </Box>\r\n                            <Stack spacing={{ xs: 2, md: 1 }}>\r\n                              <Container sx={{ p: 2 }}>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'center' }}>\r\n                                    Mua thất bại {resQuality} {PackageDetails?.name}{' '}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography\r\n                                    sx={{ textAlign: 'center', color: 'red', fontSize: 35 }}\r\n                                  >\r\n                                    {fCurrency(`${dataInvestedSuccess}`)}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Divider sx={{ my: 2 }} />\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'space-between',\r\n                                    mb: '0.5rem',\r\n                                    p: 1\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Dự án</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>{projectID?.name}</strong>\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    p: 1,\r\n\r\n                                    justifyContent: 'space-between'\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Thời gian</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18'\r\n                                    }}\r\n                                  >\r\n                                    {resDate}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    p: 1,\r\n                                    justifyContent: 'space-between'\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Nguồn tiền</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18'\r\n                                    }}\r\n                                  >\r\n                                    {resWalletName}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    p: 1,\r\n\r\n                                    justifyContent: 'space-between'\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Phí giao dịch</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18'\r\n                                    }}\r\n                                  >\r\n                                    {resFee}\r\n                                  </Typography>\r\n                                </Box>\r\n                                <Box\r\n                                  sx={{\r\n                                    display: 'flex',\r\n                                    p: 1,\r\n\r\n                                    justifyContent: 'space-between'\r\n                                  }}\r\n                                >\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18',\r\n\r\n                                      marginBottom: '0.2rem'\r\n                                    }}\r\n                                  >\r\n                                    <strong>Mã giao dịch</strong>\r\n                                  </Typography>\r\n                                  <Typography\r\n                                    paragraph\r\n                                    sx={{\r\n                                      color: '#251E18'\r\n                                    }}\r\n                                  >\r\n                                    {resPaymentID}\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Container>\r\n                            </Stack>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }}>\r\n                              <Box>\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  href={`${PATH_PAGE.details}/${projectID?.id}`}\r\n                                >\r\n                                  Trở về dự án\r\n                                </Button>\r\n                              </Box>\r\n                            </Box>\r\n                          </DialogContent>\r\n                        </Dialog>\r\n                        {/* </Form> */}\r\n                        {/* </FormikProvider> */}\r\n                      </Box>\r\n                    ) : (\r\n                      <>\r\n                        <Box sx={{ mt: 3, display: 'flex' }}>\r\n                          {/* <FormikProvider value={formik}> */}\r\n                          {/* <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}> */}\r\n                          <LoadingButton\r\n                            sx={{ width: 300 }}\r\n                            type=\"submit\"\r\n                            disabled\r\n                            variant=\"contained\"\r\n                            loading={isSubmitting}\r\n                          >\r\n                            Xác nhận đầu tư {''}{' '}\r\n                            {PackageDetails?.price &&\r\n                              fCurrency(PackageDetails?.price * values.quantity)}{' '}\r\n                          </LoadingButton>\r\n                          {/* </Form> */}\r\n                          {/* </FormikProvider> */}\r\n                        </Box>\r\n\r\n                        <Box>\r\n                          {PackageDetails?.price &&\r\n                            listOfInvestorWallet.at(1)?.balance &&\r\n                            listOfInvestorWallet.at(1)!.balance <\r\n                              PackageDetails!.price * values.quantity && (\r\n                              <Box sx={{ my: 3, mx: 3, width: 570 }}>\r\n                                <Box sx={{ display: 'flex', mt: 2 }}>\r\n                                  <Box>\r\n                                    <Icon height={20} width={20} icon={alertFill} color={'red'} />\r\n                                  </Box>\r\n                                  <Box>\r\n                                    <Typography color={'red'} sx={{ ml: 1.4, mb: 1 }}>\r\n                                      Bạn không đủ tiền đê đàu tư vui lòng nạp vào ví Krowd bên dưới\r\n                                    </Typography>\r\n                                  </Box>\r\n                                </Box>\r\n                                <Typography sx={{ textAlign: 'end' }}>\r\n                                  <Button\r\n                                    variant=\"contained\"\r\n                                    target=\"_blank\"\r\n                                    href={PATH_PAGE.pageTopUp}\r\n                                  >\r\n                                    Nạp tiền\r\n                                  </Button>\r\n                                </Typography>\r\n                              </Box>\r\n                            )}\r\n                        </Box>\r\n                      </>\r\n                    )}\r\n                  </Container>\r\n                </Grid>\r\n                <Grid xs={12} sm={4} md={5} lg={3}>\r\n                  {(isPackageLoading && (\r\n                    <Box>\r\n                      <CircularProgress\r\n                        size={100}\r\n                        sx={{ margin: '0px auto', padding: '1rem', display: 'flex' }}\r\n                      />\r\n                      <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem' }}>\r\n                        Đang tải dữ liệu, vui lòng đợi giây lát...\r\n                      </Typography>\r\n                    </Box>\r\n                  )) || (\r\n                    <Grid sx={{ mt: 1, my: 1 }}>\r\n                      <Typography variant=\"h3\">Gói đầu tư</Typography>\r\n                      {packageLists.listOfPackage &&\r\n                        packageLists.listOfPackage.length > 0 &&\r\n                        packageLists.listOfPackage.map((e, index) => (\r\n                          <Grid sx={{ p: 2 }} item key={index} xs={12} sm={12} md={12} lg={12}>\r\n                            <Grid\r\n                              container\r\n                              sx={{\r\n                                color: 'primary.main',\r\n                                display: 'flex'\r\n                              }}\r\n                            >\r\n                              <Grid xs={8} sm={8} md={8} lg={8}>\r\n                                <Typography\r\n                                  variant=\"overline\"\r\n                                  sx={{ color: 'text.secondary', justifyContent: 'left' }}\r\n                                >\r\n                                  {e.name}\r\n                                </Typography>\r\n                              </Grid>\r\n                              {/* <Grid>\r\n                                <Typography\r\n                                  variant=\"body1\"\r\n                                  sx={{\r\n                                    color: 'primary.main',\r\n                                    justifyContent: 'right'\r\n                                  }}\r\n                                >\r\n                                  {e.remainingQuantity} / {e.quantity}\r\n                                </Typography>\r\n                              </Grid> */}\r\n                              <Grid>\r\n                                {e.remainingQuantity > 0 && e.status === 'IN_STOCK' ? (\r\n                                  <Typography\r\n                                    variant=\"body1\"\r\n                                    sx={{\r\n                                      color: 'primary.main',\r\n                                      justifyContent: 'right'\r\n                                    }}\r\n                                  >\r\n                                    {e.remainingQuantity} / {e.quantity}\r\n                                  </Typography>\r\n                                ) : (\r\n                                  <Typography\r\n                                    variant=\"body1\"\r\n                                    sx={{\r\n                                      color: 'red',\r\n                                      justifyContent: 'center',\r\n                                      display: 'flex'\r\n                                    }}\r\n                                  >\r\n                                    Gói đã được đầu tư hết\r\n                                  </Typography>\r\n                                )}\r\n                              </Grid>\r\n                            </Grid>\r\n                            <Box sx={{ display: 'flex', justifyContent: 'left' }}>\r\n                              {index === 1 || index === 2 ? (\r\n                                <Typography\r\n                                  variant=\"subtitle1\"\r\n                                  sx={{ color: 'text.secondary' }}\r\n                                ></Typography>\r\n                              ) : (\r\n                                ''\r\n                              )}\r\n                              <Typography variant=\"h5\">\r\n                                {e.price === 0 ? 'Free' : fCurrencyPackage(e.price)} VND\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Stack\r\n                              paddingLeft={0}\r\n                              textAlign={'left'}\r\n                              component=\"ul\"\r\n                              spacing={2}\r\n                              sx={{ my: 1, width: 1 }}\r\n                            >\r\n                              {e.descriptionList.map((item, i) => (\r\n                                <Stack\r\n                                  key={i}\r\n                                  component=\"li\"\r\n                                  direction=\"row\"\r\n                                  alignItems=\"center\"\r\n                                  spacing={1}\r\n                                  sx={{\r\n                                    typography: 'body2'\r\n                                  }}\r\n                                >\r\n                                  <Typography variant=\"body2\">{item}</Typography>\r\n                                </Stack>\r\n                              ))}\r\n                            </Stack>\r\n                            <Typography sx={{ textAlign: 'end' }}>\r\n                              {e.status === 'IN_STOCK' && e.remainingQuantity > 0 && (\r\n                                <Button\r\n                                  variant=\"contained\"\r\n                                  fullWidth\r\n                                  onClick={() => handleClickOpenPackage2(e)}\r\n                                  sx={{\r\n                                    backgroundColor: '#FF7F50',\r\n                                    textDecoration: 'none',\r\n                                    mb: 2,\r\n                                    '&:hover': { backgroundColor: '#FF7F50' }\r\n                                  }}\r\n                                >\r\n                                  Chọn gói\r\n                                </Button>\r\n                              )}\r\n                            </Typography>\r\n\r\n                            <Divider variant=\"fullWidth\" />\r\n                          </Grid>\r\n                        ))}\r\n                      {documents && documents.length > 0 && (\r\n                        <ProjectDetailDocument documents={documents} />\r\n                      )}\r\n                      {/*HOW IT WORK */}\r\n                      {hows && hows.length > 0 && <ProjectDetailHowItWorks hows={hows} />}\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Container>\r\n        </>\r\n      )}\r\n      <Dialog fullWidth maxWidth=\"sm\" open={openModalInvestSuccess}>\r\n        <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n          <Icon color=\"#14b7cc\" height={60} width={60} icon={check2Fill} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box mt={1}>\r\n            <DialogContentText\r\n              sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n            >\r\n              Giao dịch thành công\r\n            </DialogContentText>\r\n          </Box>\r\n          <Stack spacing={{ xs: 2, md: 1 }}>\r\n            <Container sx={{ p: 2 }}>\r\n              <Box>\r\n                <Typography sx={{ textAlign: 'center' }}>\r\n                  Mua thành công {resQuality} {PackageDetails?.name}{' '}\r\n                </Typography>\r\n              </Box>\r\n              <Box>\r\n                <Typography sx={{ textAlign: 'center', color: '#14b7cc', fontSize: 35 }}>\r\n                  {fCurrency(`${dataInvestedSuccess}`)}\r\n                </Typography>\r\n              </Box>\r\n              <Divider sx={{ my: 2 }} />\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: '0.5rem',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Dự án</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>{projectID?.name}</strong>\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Thời gian</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resDate}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Nguồn tiền</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resWalletName}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Phí giao dịch</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resFee}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Mã giao dịch</strong>\r\n                </Typography>\r\n\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <MIconButton\r\n                      color=\"inherit\"\r\n                      onClick={onToggleShowIDPayment}\r\n                      sx={{ opacity: 0.48 }}\r\n                    >\r\n                      <Icon icon={showIDPayment ? eyeFill : eyeOffFill} />\r\n                    </MIconButton>\r\n                    <Typography sx={{ typography: 'body2' }}>\r\n                      {showIDPayment ? '********' : resPaymentID}\r\n                    </Typography>\r\n                  </Stack>\r\n                </Typography>\r\n              </Box>\r\n            </Container>\r\n          </Stack>\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }}>\r\n            <Box>\r\n              <Button variant=\"contained\" href={`${PATH_PAGE.details}/${projectID?.id}`}>\r\n                Trở về dự án\r\n              </Button>\r\n            </Box>\r\n            {/* <Box>\r\n              <Button\r\n                color=\"success\"\r\n                variant=\"contained\"\r\n                onClick={() => setOpenModalInvestSuccess(false)}\r\n              >\r\n                Xong\r\n              </Button>\r\n            </Box> */}\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n      <Dialog fullWidth maxWidth=\"sm\" open={openModalInvestError}>\r\n        <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n          <Icon color=\"red\" height={60} width={60} icon={redFill} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box mt={1}>\r\n            <DialogContentText\r\n              sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n            >\r\n              Giao dịch không thành công\r\n            </DialogContentText>\r\n          </Box>\r\n          <Stack spacing={{ xs: 2, md: 1 }}>\r\n            <Container sx={{ p: 2 }}>\r\n              <Box>\r\n                <Typography sx={{ textAlign: 'center' }}>\r\n                  Mua thất bại {resQuality} {PackageDetails?.name}{' '}\r\n                </Typography>\r\n              </Box>\r\n              <Box>\r\n                <Typography sx={{ textAlign: 'center', color: 'red', fontSize: 35 }}>\r\n                  {fCurrency(`${dataInvestedSuccess}`)}\r\n                </Typography>\r\n              </Box>\r\n              <Divider sx={{ my: 2 }} />\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: '0.5rem',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Dự án</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>{projectID?.name}</strong>\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Thời gian</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resDate}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Nguồn tiền</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resWalletName}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Phí giao dịch</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resFee}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Mã giao dịch</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {resPaymentID}\r\n                </Typography>\r\n              </Box>\r\n            </Container>\r\n          </Stack>\r\n          <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }}>\r\n            <Box>\r\n              <Button variant=\"contained\" href={`${PATH_PAGE.details}/${projectID?.id}`}>\r\n                Trở về dự án\r\n              </Button>\r\n            </Box>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Details.tsx",["2657"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\project\\Project.tsx",["2658"],"// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Container, Typography, Box, Link } from '@mui/material';\r\n\r\n// components\r\nimport Page from '../../components/Page';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// redux\r\nimport { RootState, useSelector } from 'redux/store';\r\n// routes\r\n// utils\r\n\r\nimport { LandingInvest } from 'components/_external-pages/landing';\r\nimport { PATH_DASHBOARD_LEARN } from 'routes/paths';\r\n// import ProjectCard from '../../../components/ProjectCard';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  marginBottom: '3rem',\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingBottom: theme.spacing(10)\r\n  }\r\n}));\r\n\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n\r\nexport default function Projects() {\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  // Redux\r\n  const { projectListLanding } = useSelector((state: RootState) => state.project);\r\n\r\n  return (\r\n    <RootStyle title=\"Danh sách | Krowd\">\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mb: { xs: 5, md: 5, paddingTop: '7rem' } }}>\r\n          <Typography variant=\"h2\" sx={{ mb: 1 }}>\r\n            {t(`landing_project_invest.landing_project_invest_now`)}\r\n          </Typography>\r\n\r\n          <Typography color={'text.disabled'} fontWeight={400} variant=\"subtitle2\">\r\n            {t(`landing_project_invest.landing_project_invest_approeve`)}\r\n          </Typography>\r\n          <Typography color={'text.disabled'} fontWeight={400} variant=\"subtitle2\" sx={{ mb: 3 }}>\r\n            {t(`landing_project_invest.landing_project_invest_business`)}{' '}\r\n            <Link href={PATH_DASHBOARD_LEARN.learn.how_to_invest}>\r\n              {t(`landing_project_invest.landing_project_invest_appraisal`)}\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box sx={{ display: 'flex', alignItems: 'end', my: 1 }}>\r\n          <Typography variant=\"h3\">\r\n            {t(`landing_project_invest.landing_project_invest_chance`)}\r\n          </Typography>\r\n          <Typography color={'text.disabled'} fontWeight={1000} variant=\"h3\" sx={{ ml: 1 }}>\r\n            {projectListLanding && projectListLanding.numOfProject}\r\n          </Typography>\r\n        </Box>\r\n      </Container>\r\n      <LandingInvest />\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\index.ts",["2659"],"import { sub } from 'date-fns';\r\n//\r\nimport { role } from './role';\r\nimport { email } from './email';\r\nimport { boolean } from './boolean';\r\nimport { company } from './company';\r\nimport { phoneNumber } from './phoneNumber';\r\nimport { fullAddress, country } from './address';\r\nimport { firstName, lastName, fullName } from './name';\r\nimport { title, sentence, description, header2 } from './text';\r\nimport { hook, sentence1, sentence2 } from './content';\r\nimport { hook1, data0, data1, data2 } from './contentDB';\r\nimport { price, rating, age, percent } from './number';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst mockData = {\r\n  id: (index: number) => `e99f09a7-dd88-49d5-b1c8-1daf80c2d7b${index + 1}`,\r\n  email: (index: number) => email[index],\r\n  phoneNumber: (index: number) => phoneNumber[index],\r\n  time: (index: number) => sub(new Date(), { days: index, hours: index }),\r\n  boolean: (index: number) => boolean[index],\r\n  role: (index: number) => role[index],\r\n  company: (index: number) => company[index],\r\n  address: {\r\n    fullAddress: (index: number) => fullAddress[index],\r\n    country: (index: number) => country[index]\r\n  },\r\n  name: {\r\n    firstName: (index: number) => firstName[index],\r\n    lastName: (index: number) => lastName[index],\r\n    fullName: (index: number) => fullName[index]\r\n  },\r\n  text: {\r\n    title: (index: number) => title[index],\r\n    sentence: (index: number) => sentence[index],\r\n    description: (index: number) => description[index],\r\n    header2: (index: number) => header2[index]\r\n  },\r\n  content: {\r\n    hook: (index: number) => hook[index],\r\n    sentence1: (index: number) => sentence1[index],\r\n    sentence2: (index: number) => sentence2[index]\r\n  },\r\n  contentDB: {\r\n    hook1: (index: number) => hook[index],\r\n    data0: (index: number) => data0[index],\r\n    data1: (index: number) => data1[index],\r\n    data2: (index: number) => data2[index]\r\n  },\r\n  number: {\r\n    percent: (index: number) => percent[index],\r\n    rating: (index: number) => rating[index],\r\n    age: (index: number) => age[index],\r\n    price: (index: number) => price[index]\r\n  },\r\n  image: {\r\n    cover: (index: number) => `/static/mock-images/covers/cover_${index + 1}.jpg`,\r\n    feed: (index: number) => `/static/mock-images/feeds/feed_${index + 1}.jpg`,\r\n    product: (index: number) => `/static/mock-images/covers/cover_${index + 1}.jpg`,\r\n    avatar: (index: number) => `/static/mock-images/avatars/krowd_${index + 1}.jpg`\r\n  }\r\n};\r\n\r\nexport default mockData;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\palette.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useLocalStorage.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Page.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\contentDB.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\number.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\content.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\text.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\LoadingButton.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\ControlLabel.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\ToggleButton.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Autocomplete.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\ButtonGroup.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Breadcrumbs.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Pagination.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\IconButton.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Accordion.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Typography.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Container.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Timeline.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Progress.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Snackbar.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Backdrop.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Skeleton.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Pickers.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Stepper.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Popover.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Tooltip.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Select.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\SvgIcon.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Switch.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Button.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Slider.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Checkbox.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\TreeView.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Drawer.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Avatar.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Radio.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Dialog.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\routes\\paths.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Input.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Paper.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Badge.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Table.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Lists.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Link.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\DataGrid.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Grid.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\formatNumber.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Rating.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Menu.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Tabs.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Alert.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MHidden.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\analytics.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Card.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Fab.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\name.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\address.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\phoneNumber.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\company.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\boolean.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\email.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\mock-data\\role.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\overrides\\Chip.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailFAQsBusiness.tsx",["2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670"],"import {\r\n  Accordion,\r\n  Typography,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Divider,\r\n  Container,\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Dialog\r\n} from '@mui/material';\r\nimport { height } from '@mui/system';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { useState } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport editTwotone from '@iconify/icons-ant-design/edit-twotone';\r\nimport { ProjectAPI } from '_apis_/krowd_apis/project';\r\nimport { useSnackbar } from 'notistack';\r\nimport { MotionInView, varFadeIn } from 'components/animate';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\nimport styled from '@emotion/styled';\r\nconst NavbarTopAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-100px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarBottomAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '10px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarTopClickAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-140px',\r\n  visibility: 'hidden'\r\n}));\r\ntype FAQSProps = {\r\n  id: string;\r\n  title: string;\r\n  content: string | null;\r\n  link: string | null;\r\n  description: string | null;\r\n};\r\ntype FAQSListProps = {\r\n  faqs: FAQSProps[] | undefined;\r\n  nav: string;\r\n};\r\nfunction ProjectDetailFAQsBusiness({ faqs, nav }: FAQSListProps) {\r\n  return (\r\n    <>\r\n      {/* Press */}\r\n      <Container maxWidth={false} sx={{ paddingBottom: '5rem' }}>\r\n        {faqs && faqs?.length > 0 && (\r\n          <>\r\n            <Box sx={{ mb: 7 }}>\r\n              <Divider variant=\"fullWidth\" />\r\n            </Box>\r\n            <Box mb={7}>\r\n              <NavbarTopAnchor id={`__navbarTop_${nav}`}></NavbarTopAnchor>\r\n\r\n              <Typography textAlign=\"center\" py={1} color={'#666'} variant=\"h4\">\r\n                Câu hỏi thắc mắc\r\n              </Typography>\r\n              <Box mx=\"auto\" width={'10%'}>\r\n                <NavbarTopClickAnchor id={`__navbarTopClick_${nav}`}></NavbarTopClickAnchor>\r\n\r\n                <Divider sx={{ my: 1, borderBottomWidth: 'thick', color: 'primary.main' }} />\r\n              </Box>\r\n            </Box>\r\n          </>\r\n        )}\r\n        {faqs &&\r\n          faqs.map((fqs, i) => (\r\n            <Grid key={i} container>\r\n              <Grid lg={3}></Grid>\r\n              <Grid lg={6}>\r\n                <MotionInView variants={varFadeIn}>\r\n                  <Accordion>\r\n                    <AccordionSummary\r\n                      style={{ paddingTop: '1rem', marginTop: 5, color: '#251E18' }}\r\n                      expandIcon={<Icon icon={arrowIosDownwardFill} width={20} height={20} />}\r\n                    >\r\n                      <Typography variant=\"subtitle1\">+ {fqs.title}</Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Typography>{fqs.content}</Typography>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </MotionInView>\r\n              </Grid>\r\n            </Grid>\r\n          ))}\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailFAQsBusiness;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\StageListKrowdTable.tsx",["2671","2672","2673","2674","2675","2676","2677"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailHowItWorks.tsx",["2678","2679","2680"],"import {\r\n  Accordion,\r\n  Typography,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Divider,\r\n  Container,\r\n  Box,\r\n  Grid,\r\n  Button,\r\n  Dialog\r\n} from '@mui/material';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\nimport { MotionInView, varFadeIn } from 'components/animate';\r\ntype HOWSPROPS = {\r\n  id: string;\r\n  title: string;\r\n  content: string | null;\r\n  link: string | null;\r\n  description: string | null;\r\n};\r\ntype HOWSListProps = {\r\n  hows: HOWSPROPS[] | undefined;\r\n};\r\nfunction ProjectDetailHowItWorks({ hows }: HOWSListProps) {\r\n  return (\r\n    <>\r\n      {/* Press */}\r\n\r\n      <Box>\r\n        <Typography sx={{ mt: 8 }} variant=\"h4\" color={'#666'}>\r\n          Cách thức hoạt động\r\n        </Typography>\r\n        <Box width={'18%'}>\r\n          <Divider variant=\"fullWidth\" sx={{ my: 1, mb: 3 }} />\r\n        </Box>\r\n      </Box>\r\n      {hows &&\r\n        hows.map((hiw, i) => (\r\n          <>\r\n            <Grid key={i} container>\r\n              <Grid xs={11} sm={11} md={11} lg={11}>\r\n                <MotionInView variants={varFadeIn}>\r\n                  <Accordion>\r\n                    <AccordionSummary\r\n                      style={{\r\n                        color: '#251E18',\r\n                        display: 'inline-flex',\r\n                        flexDirection: 'row-reverse'\r\n                      }}\r\n                      expandIcon={<Icon icon={arrowIosDownwardFill} width={20} height={20} />}\r\n                    >\r\n                      <Typography sx={{ fontSize: '14px', fontWeight: 400 }}>\r\n                        {hiw.title}\r\n                      </Typography>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Typography sx={{ fontSize: '13px', pl: 1 }}>{hiw.content}</Typography>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </MotionInView>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        ))}\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailHowItWorks;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\KrowdProjectStage.tsx",["2681","2682"],"import { merge } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, TextField, Typography, Divider, Grid } from '@mui/material';\r\n//\r\nimport { BaseOptionChart } from '../../charts';\r\nimport { RootState } from 'redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { Project1 } from '../../../@types/krowd/project';\r\n\r\nimport { styled } from '@mui/system';\r\nimport { fCurrencyChart } from 'utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\nconst NavbarTopAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-100px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarBottomAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '10px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarTopClickAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-140px',\r\n  visibility: 'hidden'\r\n}));\r\ntype AboutListProps = {\r\n  project: Project1;\r\n  nav: string;\r\n};\r\nexport default function KrowdProjectStage({ project, nav }: AboutListProps) {\r\n  const [seriesData, setSeriesData] = useState('Biểu đồ số tiền doanh thu từng kỳ');\r\n\r\n  const handleChangeSeriesData = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSeriesData(String(event.target.value));\r\n  };\r\n  const { listOfChartStage } = useSelector((state: RootState) => state.stage);\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories: []\r\n    },\r\n    tooltip: {\r\n      shared: true,\r\n      intersect: false,\r\n      y: {\r\n        formatter: (y: number) => {\r\n          if (typeof y !== 'undefined') {\r\n            return `${fCurrencyChart(y.toFixed(0))}`;\r\n          }\r\n          return y;\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <NavbarTopAnchor id={`__navbarTop_${nav}`}></NavbarTopAnchor>\r\n\r\n      <Typography textAlign=\"center\" py={1} color={'#666'} variant=\"h4\">\r\n        Biểu đồ của dự án\r\n      </Typography>\r\n      <Box mx=\"auto\" width={'10%'}>\r\n        <NavbarTopClickAnchor id={`__navbarTopClick_${nav}`}></NavbarTopClickAnchor>\r\n        <Divider sx={{ my: 1, borderBottomWidth: 'thick', color: 'primary.main' }} />\r\n      </Box>\r\n      <Grid container>\r\n        <Grid lg={2}></Grid>\r\n        <Grid lg={8}>\r\n          <Card style={{ marginTop: 20, marginBottom: 40, maxWidth: 'md' }}>\r\n            <CardHeader\r\n              title=\"Thống kê tăng trưởng\"\r\n              action={\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  value={seriesData}\r\n                  SelectProps={{ native: true }}\r\n                  onChange={handleChangeSeriesData}\r\n                  sx={{\r\n                    '& fieldset': { border: '0 !important' },\r\n                    '& select': {\r\n                      pl: 1,\r\n                      py: 0.5,\r\n                      pr: '24px !important',\r\n                      typography: 'subtitle2'\r\n                    },\r\n                    '& .MuiOutlinedInput-root': {\r\n                      borderRadius: 0.75,\r\n                      bgcolor: 'background.neutral'\r\n                    },\r\n                    '& .MuiNativeSelect-icon': {\r\n                      top: 4,\r\n                      right: 0,\r\n                      width: 20,\r\n                      height: 20\r\n                    }\r\n                  }}\r\n                >\r\n                  {listOfChartStage &&\r\n                    listOfChartStage.length > 0 &&\r\n                    listOfChartStage.map((option) => (\r\n                      <option key={option.chartName} value={option.chartName}>\r\n                        {option.chartName}\r\n                      </option>\r\n                    ))}\r\n                </TextField>\r\n              }\r\n            />\r\n            {listOfChartStage &&\r\n              listOfChartStage.length > 0 &&\r\n              listOfChartStage.map((item) => (\r\n                <Box key={item.chartName} sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n                  {item.chartName === seriesData && (\r\n                    <ReactApexChart\r\n                      type=\"bar\"\r\n                      series={item.lineList}\r\n                      options={chartOptions}\r\n                      height={364}\r\n                    />\r\n                  )}\r\n                </Box>\r\n              ))}\r\n          </Card>\r\n          <Typography variant=\"body2\">\r\n            * Số hiển thị ngang tương ứng với các kỳ của dụ án\r\n          </Typography>\r\n          <Typography sx={{ my: 2 }} variant=\"body2\">\r\n            * Đơn vị doanh thu VND và tỉ lệ sẽ là phần trăm (%)\r\n          </Typography>\r\n          <Typography sx={{ my: 2 }} variant=\"body2\">\r\n            * Số liệu chỉ mang tính chất tham khảo\r\n          </Typography>\r\n        </Grid>\r\n        <Grid lg={2}></Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailsPress.tsx",["2683","2684","2685","2686","2687"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  styled,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport { height } from '@mui/system';\r\nimport { RootState, useSelector } from 'redux/store';\r\n\r\nconst NavbarTopAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-100px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarBottomAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '10px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarTopClickAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-140px',\r\n  visibility: 'hidden'\r\n}));\r\ntype PressProps = {\r\n  id: string;\r\n  title: string;\r\n  content: string | null;\r\n  link: string | null;\r\n  description: string | null;\r\n};\r\ntype PressListProps = {\r\n  press: PressProps[] | undefined;\r\n  nav: string;\r\n};\r\nfunction ProjectDetailAfterPitch({ press, nav }: PressListProps) {\r\n  const { detailOfProject } = useSelector((state: RootState) => state.project);\r\n  const { detailOfProjectID: projectID } = detailOfProject;\r\n  return (\r\n    <>\r\n      {/* Press */}\r\n      {press && press.length > 0 ? (\r\n        <>\r\n          <Box sx={{ mb: 7 }}>\r\n            <Divider variant=\"fullWidth\" />\r\n          </Box>\r\n          <Container maxWidth={'lg'} sx={{ paddingBottom: '5rem' }}>\r\n            <Box mb={7}>\r\n              <NavbarTopAnchor id={`__navbarTop_${nav}`}></NavbarTopAnchor>\r\n              <Typography textAlign=\"center\" py={1} color={'#666'} variant=\"h4\">\r\n                Bài viết liên quan\r\n              </Typography>\r\n              <Box mx=\"auto\" width={'10%'}>\r\n                <NavbarTopClickAnchor id={`__navbarTopClick_${nav}`}></NavbarTopClickAnchor>\r\n                <Divider sx={{ my: 1, borderBottomWidth: 'thick', color: 'primary.main' }} />\r\n              </Box>\r\n            </Box>\r\n            <Grid container justifyContent={'space-evenly'}>\r\n              {press &&\r\n                press.map((f, i) => {\r\n                  const part = f.description?.split('\\\\gg20p');\r\n                  if (!part) return;\r\n                  const newspaperName = part[0];\r\n                  const publicDate = part[1].substring(0, 10).trim();\r\n                  const newLink = part[2];\r\n                  return (\r\n                    <>\r\n                      <Grid xs={12} sm={5} md={4} lg={3}>\r\n                        <Link key={i} href={`${newLink}`} target=\"_blank\" underline=\"none\">\r\n                          <Card\r\n                            sx={{\r\n                              width: '100%',\r\n                              minHeight: 420,\r\n                              boxShadow: '40px 40px 80px 0 20%',\r\n                              alignItems: 'center'\r\n                            }}\r\n                          >\r\n                            <CardMedia\r\n                              style={{\r\n                                display: 'center'\r\n                              }}\r\n                              component=\"img\"\r\n                              height={200}\r\n                              src={`${f.link}`}\r\n                            />\r\n                            <Box>\r\n                              <Typography\r\n                                sx={{\r\n                                  textOverflow: 'ellipsis',\r\n                                  overflow: 'hidden',\r\n                                  display: '-webkit-box',\r\n                                  WebkitBoxOrient: 'vertical',\r\n                                  fontWeight: '700',\r\n                                  WebkitLineClamp: 2\r\n                                }}\r\n                                pb={0.5}\r\n                                px={2}\r\n                                mt={2}\r\n                                variant=\"body1\"\r\n                                color={'text.primary'}\r\n                              >\r\n                                {f.title}\r\n                              </Typography>\r\n                            </Box>\r\n\r\n                            <Box>\r\n                              <Typography px={2} mb={1} variant=\"body1\" color={'text.disabled'}>\r\n                                {newspaperName} · {publicDate}\r\n                              </Typography>\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography\r\n                                sx={{\r\n                                  textOverflow: 'ellipsis',\r\n                                  overflow: 'hidden',\r\n                                  display: '-webkit-box',\r\n                                  WebkitBoxOrient: 'vertical',\r\n                                  WebkitLineClamp: 5\r\n                                }}\r\n                                px={2}\r\n                                variant=\"body2\"\r\n                                color={'text.primary'}\r\n                              >\r\n                                {f.content}\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n                        </Link>\r\n                      </Grid>\r\n                    </>\r\n                  );\r\n                })}\r\n            </Grid>\r\n            <NavbarBottomAnchor id={`__navbarBottom_${nav}`}></NavbarBottomAnchor>\r\n          </Container>\r\n        </>\r\n      ) : (\r\n        ''\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailAfterPitch;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectPackage.tsx",["2688","2689","2690","2691","2692","2693","2694","2695","2696"],"// material\r\n\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  CircularProgress,\r\n  Box,\r\n  Button,\r\n  Stack,\r\n  Card,\r\n  Divider,\r\n  Dialog,\r\n  Link\r\n} from '@mui/material';\r\n// components\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { styled } from '@mui/system';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\nimport { Icon } from '@iconify/react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Package, Project1 } from '../../../@types/krowd/project';\r\nimport { dispatch, RootState } from 'redux/store';\r\nimport Label from 'components/Label';\r\nimport { getPackageBYID, getProjectPackage } from 'redux/slices/krowd_slices/project';\r\nimport { PATH_DASHBOARD, PATH_PAGE } from 'routes/paths';\r\nimport { fCurrencyPackage } from 'utils/formatNumber';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  width: 300,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  marginTop: theme.spacing(3),\r\n  [theme.breakpoints.up(414)]: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nexport default function ProjectPackage({ project }: { project: Project1 }) {\r\n  const { packageLists } = useSelector((state: RootState) => state.project);\r\n  const { isPackageLoading } = packageLists;\r\n  const { user } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleGetPackageInvestByID = async (v: Package) => {\r\n    await dispatch(getPackageBYID(v.id));\r\n    navigate(`${PATH_PAGE.checkout}/${project.id}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box>\r\n        <Typography variant=\"h4\" color={'#666'}>\r\n          Gói đầu tư\r\n        </Typography>\r\n        <Box width={'45%'}>\r\n          <Divider variant=\"fullWidth\" sx={{ my: 1 }} />\r\n        </Box>\r\n      </Box>\r\n      <RootStyle>\r\n        {(isPackageLoading && (\r\n          <Box>\r\n            <CircularProgress\r\n              size={100}\r\n              sx={{ margin: '0px auto', padding: '1rem', display: 'flex' }}\r\n            />\r\n            <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem' }}>\r\n              Đang tải dữ liệu, vui lòng đợi giây lát...\r\n            </Typography>\r\n          </Box>\r\n        )) || (\r\n          <Grid sx={{ mt: 1, my: 1 }}>\r\n            {packageLists.listOfPackage &&\r\n              packageLists.listOfPackage.length > 0 &&\r\n              packageLists.listOfPackage.map((e, index) => (\r\n                <Grid item key={index} xs={12} sm={12} md={12} lg={12}>\r\n                  <Typography\r\n                    variant=\"overline\"\r\n                    sx={{ display: 'flex', color: 'text.secondary', justifyContent: 'center' }}\r\n                  >\r\n                    {e.name}\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\r\n                    {index === 1 || index === 2 ? (\r\n                      <Typography variant=\"subtitle1\" sx={{ color: 'text.secondary' }}></Typography>\r\n                    ) : (\r\n                      ''\r\n                    )}\r\n                    <Typography variant=\"h3\" sx={{ mx: 1 }}>\r\n                      {e.price === 0 ? 'Free' : fCurrencyPackage(e.price)}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  {e.remainingQuantity > 0 && e.status === 'IN_STOCK' ? (\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: 'primary.main',\r\n                        justifyContent: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      Số lượng giới hạn {e.remainingQuantity} / {e.quantity}\r\n                    </Typography>\r\n                  ) : (\r\n                    <Typography\r\n                      variant=\"body1\"\r\n                      sx={{\r\n                        color: 'red',\r\n                        justifyContent: 'center',\r\n                        display: 'flex'\r\n                      }}\r\n                    >\r\n                      Gói đã được đầu tư hết\r\n                    </Typography>\r\n                  )}\r\n                  <Typography sx={{ my: 2, fontWeight: 600 }}>Bạn sẽ nhận được:</Typography>\r\n                  <Stack\r\n                    paddingLeft={0}\r\n                    textAlign={'left'}\r\n                    component=\"ul\"\r\n                    spacing={2}\r\n                    sx={{ my: 2, width: 1 }}\r\n                  >\r\n                    {e.descriptionList.map((item, i) => (\r\n                      <Stack\r\n                        key={i}\r\n                        component=\"li\"\r\n                        direction=\"row\"\r\n                        alignItems=\"center\"\r\n                        spacing={1.5}\r\n                        sx={{\r\n                          typography: 'body2'\r\n                        }}\r\n                      >\r\n                        <Box component={Icon} icon={checkmarkFill} sx={{ width: 20, height: 20 }} />\r\n                        <Typography variant=\"body2\">{item}</Typography>\r\n                      </Stack>\r\n                    ))}\r\n                  </Stack>\r\n\r\n                  <Link\r\n                    style={{ textDecoration: 'none' }}\r\n                    onClick={() => handleGetPackageInvestByID(e)}\r\n                  >\r\n                    <Typography sx={{ textAlign: 'end' }}>\r\n                      {e.remainingQuantity > 0 && e?.status === 'IN_STOCK' && (\r\n                        <Button\r\n                          sx={{\r\n                            backgroundColor: '#FF7F50',\r\n                            textDecoration: 'none',\r\n                            '&:hover': { backgroundColor: '#FF7F50' }\r\n                          }}\r\n                          fullWidth\r\n                          disableElevation\r\n                          disableRipple\r\n                          variant=\"contained\"\r\n                          size=\"large\"\r\n                        >\r\n                          Chọn gói\r\n                        </Button>\r\n                      )}\r\n                    </Typography>\r\n                  </Link>\r\n                  <Divider sx={{ my: 3 }} variant=\"fullWidth\" />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        )}\r\n      </RootStyle>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailHighLight.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailAfterPitch.tsx",["2697","2698","2699","2700","2701"],"import {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Link,\r\n  styled,\r\n  Typography\r\n} from '@mui/material';\r\nimport { height } from '@mui/system';\r\nimport { RootState, useSelector } from 'redux/store';\r\n\r\nconst NavbarTopAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-100px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarBottomAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '10px',\r\n  visibility: 'hidden'\r\n}));\r\nconst NavbarTopClickAnchor = styled('div')(() => ({\r\n  display: 'block',\r\n  position: 'relative',\r\n  top: '-140px',\r\n  visibility: 'hidden'\r\n}));\r\ntype AboutProps = {\r\n  title: string;\r\n  content: string | null;\r\n  link: string | null;\r\n  description: string | null;\r\n};\r\ntype AboutListProps = {\r\n  abouts: AboutProps[] | undefined;\r\n  nav: string;\r\n};\r\nfunction ProjectDetailAfterPitch({ abouts, nav }: AboutListProps) {\r\n  const { detailOfProject } = useSelector((state: RootState) => state.project);\r\n  const { detailOfProjectID: projectID } = detailOfProject;\r\n  const { manager, name } = projectID!;\r\n  return (\r\n    <>\r\n      {/* About */}\r\n      <Container maxWidth={'lg'} sx={{ paddingBottom: '3rem' }}>\r\n        <Box mb={7}>\r\n          <NavbarTopAnchor id={`__navbarTop_${nav}`}></NavbarTopAnchor>\r\n          <Typography textAlign=\"center\" py={1} color={'#666'} variant=\"h4\">\r\n            Về chúng tôi\r\n          </Typography>\r\n          <Box mx=\"auto\" width={'10%'}>\r\n            <NavbarTopClickAnchor id={`__navbarTopClick_${nav}`}></NavbarTopClickAnchor>\r\n            <Divider sx={{ my: 1, borderBottomWidth: 'thick', color: 'primary.main' }} />\r\n          </Box>\r\n        </Box>\r\n        <Grid container display={'flex'} justifyContent={'space-evenly'}>\r\n          <Grid>\r\n            <Box\r\n              mx={'auto'}\r\n              mb={2}\r\n              sx={{\r\n                position: 'relative',\r\n                width: '200px',\r\n                height: '200px',\r\n                overflow: 'hidden',\r\n                borderRadius: '50%'\r\n              }}\r\n            >\r\n              <img src={manager.image} style={{ width: '100%', height: 'auto' }} />\r\n            </Box>\r\n\r\n            <Typography\r\n              variant=\"h3\"\r\n              textAlign={'center'}\r\n            >{`${manager.firstName} ${manager.lastName}`}</Typography>\r\n            <Typography textAlign={'center'} py={1} color={'text.disabled'} variant=\"body1\">\r\n              Quản lý dự án\r\n            </Typography>\r\n          </Grid>\r\n          <Grid>\r\n            {abouts &&\r\n              abouts\r\n                .filter((ab) => ab.title !== 'Truyền thông')\r\n                .slice(0, 3)\r\n                .map((ab, i) => (\r\n                  <Box key={i}>\r\n                    <Button\r\n                      href={`${ab.link}`}\r\n                      target=\"_blank\"\r\n                      disabled={ab.link === null}\r\n                      sx={{ opacity: ab.link ? 1 : 0.4 }}\r\n                    >\r\n                      <Card sx={{ borderRadius: '45% 0% 0% 45%', height: 100 }}>\r\n                        <Grid\r\n                          container\r\n                          display={'flex'}\r\n                          alignItems=\"center\"\r\n                          justifyContent={'center'}\r\n                          textAlign={'center'}\r\n                        >\r\n                          <Grid sx={{ mt: 2.6 }}>\r\n                            <img\r\n                              style={{ borderRadius: '50%', width: 60 }}\r\n                              src={`/static/icons/navbar/${ab.title}.png`}\r\n                            />\r\n                          </Grid>\r\n                          <Grid>\r\n                            <Typography variant=\"subtitle2\" sx={{ mt: 4, width: 200 }}>\r\n                              Theo dõi chúng tôi qua{' '}\r\n                              <Typography sx={{ fontWeight: '700' }}>{ab.title}</Typography>\r\n                            </Typography>\r\n                          </Grid>\r\n                        </Grid>\r\n                      </Card>\r\n                    </Button>\r\n                  </Box>\r\n                ))}\r\n          </Grid>\r\n\r\n          {/* <Grid xs={12} sm={4} md={5} lg={4}>\r\n            {abouts &&\r\n              abouts\r\n                .filter((ab) => ab.title !== 'Truyền thông')\r\n                .slice(3, 5)\r\n                .map((ab, i) => (\r\n                  <Box key={i}>\r\n                    <Typography py={1} color={'text.disabled'} variant=\"body1\">\r\n                      {ab.title}\r\n                    </Typography>\r\n                    <Typography fontWeight={700} variant=\"body1\">\r\n                      {ab.content}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n            <Typography py={1} color={'text.disabled'} variant=\"body1\">\r\n              Truyền thông\r\n            </Typography>\r\n            <Box display={'flex'} gap={4}>\r\n              {abouts &&\r\n                abouts\r\n                  .filter((ab) => ab.title === 'Truyền thông')\r\n                  .map((ab, i) => (\r\n                    <Box key={i} display={'flex-inline'}>\r\n                      <Link href=\"ab.link\" target=\"_blank\">\r\n                        <img src={`static/icons/social/${ab.content}.png`} style={{ width: 20 }} />\r\n                      </Link>\r\n                    </Box>\r\n                  ))}\r\n            </Box>\r\n          </Grid> */}\r\n        </Grid>\r\n        <NavbarBottomAnchor id={`__navbarBottom_${nav}`}></NavbarBottomAnchor>\r\n      </Container>\r\n\r\n      {/* Press */}\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailAfterPitch;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailAlbumCarousel.tsx",["2702","2703","2704"],"import Slider from 'react-slick';\r\nimport { findIndex } from 'lodash';\r\nimport { useState, useRef, useEffect } from 'react';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n// @types\r\n//\r\nimport LightboxModal from '../../LightboxModal';\r\nimport { CarouselControlsArrowsIndex } from '../../carousel';\r\nimport MainNavbar from 'layouts/main/MainNavbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst THUMB_SIZE = 100;\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  '& .slick-slide': {\r\n    float: theme.direction === 'rtl' ? 'right' : 'left',\r\n    '&:focus': { outline: 'none' }\r\n  }\r\n}));\r\nconst ThumbWrapperStyle = styled('div')(({ theme }) => ({\r\n  cursor: 'pointer',\r\n  width: THUMB_SIZE,\r\n  overflow: 'hidden',\r\n  height: THUMB_SIZE,\r\n  position: 'relative',\r\n  margin: theme.spacing(0, 1),\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  '&:hover': {\r\n    opacity: 0.72,\r\n    transition: theme.transitions.create('opacity')\r\n  },\r\n  '& .isActive': {\r\n    top: 0,\r\n    zIndex: 9,\r\n    opacity: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'absolute',\r\n    borderRadius: theme.shape.borderRadiusSm,\r\n    border: `solid 3px ${theme.palette.primary.main}`,\r\n    backgroundColor: alpha(theme.palette.grey[900], 0.48)\r\n  }\r\n}));\r\n\r\nconst LargeImgStyle = styled('img')(({}) => ({\r\n  width: '100%'\r\n}));\r\n\r\nconst ThumbImgStyle = styled('img')(({}) => ({\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype LargeItemProps = {\r\n  item: string;\r\n  onOpenLightbox: (value: string) => void;\r\n};\r\n\r\nfunction LargeItem({ item, onOpenLightbox }: LargeItemProps) {\r\n  return <LargeImgStyle src={item} onClick={() => onOpenLightbox(item)} />;\r\n}\r\n\r\nfunction ThumbnailItem({ item }: { item: string }) {\r\n  return (\r\n    <ThumbWrapperStyle>\r\n      <Box className=\"isActive\" />\r\n      <ThumbImgStyle alt=\"thumb image\" src={item} />\r\n    </ThumbWrapperStyle>\r\n  );\r\n}\r\n\r\ntype AlbumProps = {\r\n  album: string[];\r\n};\r\n\r\nfunction ProjectDetailAlbumCarousel({ album }: AlbumProps) {\r\n  const [openLightbox, setOpenLightbox] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState<number>(0);\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [nav1, setNav1] = useState<Slider>();\r\n  const [nav2, setNav2] = useState<Slider>();\r\n  const slider1 = useRef<Slider | null>(null);\r\n  const slider2 = useRef<Slider | null>(null);\r\n  const imagesLightbox = album;\r\n\r\n  const handleOpenLightbox = (url: string) => {\r\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\r\n    setOpenLightbox(true);\r\n    setSelectedImage(selectedImage);\r\n  };\r\n\r\n  const settings1 = {\r\n    dots: false,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    draggable: false,\r\n    slidesToScroll: 1,\r\n    adaptiveHeight: true,\r\n    beforeChange: (current: number, next: number) => setCurrentIndex(next)\r\n  };\r\n\r\n  const settings2 = {\r\n    dots: false,\r\n    arrows: false,\r\n    centerMode: true,\r\n    swipeToSlide: true,\r\n    focusOnSelect: true,\r\n    variableWidth: true,\r\n    centerPadding: '0px',\r\n    slidesToShow: album.length > 3 ? 3 : album.length\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNav1(slider1.current || undefined);\r\n    setNav2(slider2.current || undefined);\r\n  }, [currentIndex]);\r\n\r\n  const handlePrevious = () => {\r\n    slider2.current?.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    slider2?.current?.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box sx={{ p: 1 }}>\r\n        <Box\r\n          sx={{\r\n            zIndex: 0,\r\n            borderRadius: 2,\r\n            overflow: 'hidden',\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Slider {...settings1} asNavFor={nav2} ref={slider1}>\r\n            {album.map(\r\n              (item) =>\r\n                item && <LargeItem key={item} item={item} onOpenLightbox={handleOpenLightbox} />\r\n            )}\r\n          </Slider>\r\n          <CarouselControlsArrowsIndex\r\n            index={currentIndex}\r\n            total={album.length}\r\n            onNext={handleNext}\r\n            onPrevious={handlePrevious}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          my: 3,\r\n          mx: 'auto',\r\n          '& .slick-current .isActive': { opacity: 1 },\r\n          ...(album.length === 1 && { maxWidth: THUMB_SIZE * 1 + 16 }),\r\n          ...(album.length === 2 && { maxWidth: THUMB_SIZE * 2 + 32 }),\r\n          ...(album.length === 3 && { maxWidth: THUMB_SIZE * 3 + 48 }),\r\n          ...(album.length === 4 && { maxWidth: THUMB_SIZE * 3 + 48 }),\r\n          ...(album.length >= 5 && { maxWidth: THUMB_SIZE * 6 }),\r\n          ...(album.length > 2 && {\r\n            position: 'relative',\r\n            '&:before, &:after': {\r\n              top: 0,\r\n              zIndex: 9,\r\n              content: \"''\",\r\n              height: '100%',\r\n              position: 'absolute',\r\n              width: (THUMB_SIZE * 2) / 3,\r\n              backgroundImage: (theme) =>\r\n                `linear-gradient(to left, ${alpha(theme.palette.background.paper, 0)} 0%, ${\r\n                  theme.palette.background.paper\r\n                } 100%)`\r\n            },\r\n            '&:after': { right: 0, transform: 'scaleX(-1)' }\r\n          })\r\n        }}\r\n      >\r\n        <Slider {...settings2} asNavFor={nav1} ref={slider2}>\r\n          {album.map((item) => item && <ThumbnailItem key={item} item={item} />)}\r\n        </Slider>\r\n      </Box>\r\n      <LightboxModal\r\n        images={imagesLightbox}\r\n        photoIndex={selectedImage}\r\n        setPhotoIndex={setSelectedImage}\r\n        isOpen={openLightbox}\r\n        onClose={() => setOpenLightbox(false)}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\nexport default ProjectDetailAlbumCarousel;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailDocument.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailNavbar.tsx",["2705"],"import { Box, Divider, Typography } from '@mui/material';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Link as ScrollLink } from 'react-scroll';\r\nimport { RootState, useSelector } from 'redux/store';\r\ntype PitchProps = {\r\n  id: string;\r\n  title: string;\r\n  link: string;\r\n  content: string;\r\n  description: string;\r\n  priority: number;\r\n  updateDate: string;\r\n};\r\n\r\ntype NavbarProps = {\r\n  pitchs: PitchProps[] | undefined;\r\n};\r\n\r\nfunction ProjectDetailNavbar({ pitchs }: NavbarProps) {\r\n  const [isShow, setIsShow] = useState(false);\r\n  const [selectedNavbar, setSelectedNavbar] = useState(pitchs?.at(0)?.id);\r\n  var lastScrollTop = 0;\r\n  const { detailOfProject } = useSelector((state: RootState) => state.project);\r\n  const { detailOfProjectID: projectID } = detailOfProject;\r\n  const { listOfChartStage } = useSelector((state: RootState) => state.stage);\r\n  const getEntityList = (\r\n    type: 'PITCH' | 'EXTENSION' | 'DOCUMENT' | 'ALBUM' | 'ABOUT' | 'HIGHLIGHT' | 'PRESS' | 'FAQ'\r\n  ) => {\r\n    return projectID?.projectEntity.find((pe) => pe.type === type)?.typeItemList;\r\n  };\r\n  const bottomNav = [\r\n    listOfChartStage.length > 0 ? 'Biểu đồ của dự án' : null,\r\n    getEntityList('ABOUT')!.length > 0 ? 'Về chúng tôi' : null,\r\n    getEntityList('PRESS')!.length > 0 ? 'Bài viết liên quan' : null,\r\n    getEntityList('FAQ')!.length > 0 ? 'Câu hỏi thắc mắc' : null\r\n  ];\r\n  const trackScrolling = useCallback(() => {\r\n    const currentIndex = pitchs!.findIndex((p) => p.id === selectedNavbar);\r\n    const firstElement = document.getElementById(`__navbarTop_${pitchs?.at(0)?.id}`);\r\n    var st = window.pageYOffset || document.documentElement.scrollTop;\r\n    if (isTopFirstElement(firstElement)) {\r\n      setSelectedNavbar('');\r\n      setIsShow(false);\r\n    } else {\r\n      setIsShow(true);\r\n      if (st > lastScrollTop) {\r\n        if (currentIndex < pitchs!.length - 1) {\r\n          const nextPitch = pitchs?.at(currentIndex + 1)?.id;\r\n          const wrappedElementId = `__navbarTop_${nextPitch}`;\r\n          const wrappedElement = document.getElementById(wrappedElementId);\r\n          if (isTop(wrappedElement)) {\r\n            setSelectedNavbar(nextPitch!);\r\n            setIsShow(true);\r\n          }\r\n        }\r\n      } else {\r\n        if (currentIndex > 0) {\r\n          const prevPitch = pitchs?.at(currentIndex - 1)?.id;\r\n          const wrappedElementId = `__navbarBottom_${prevPitch}`;\r\n          const wrappedElement = document.getElementById(wrappedElementId);\r\n          if (isBottom(wrappedElement)) {\r\n            setSelectedNavbar(prevPitch!);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    lastScrollTop = st <= 0 ? 0 : st;\r\n  }, [selectedNavbar]);\r\n  useEffect(() => {\r\n    document.addEventListener('scroll', trackScrolling);\r\n    return () => {\r\n      document.removeEventListener('scroll', trackScrolling);\r\n    };\r\n  }, [trackScrolling]);\r\n  const handleClickPitch = (newValue: string) => setSelectedNavbar(newValue);\r\n\r\n  const isTop = (el: HTMLElement | null) => el && el.getBoundingClientRect().top <= 15;\r\n\r\n  const isBottom = (el: HTMLElement | null) => el && el.getBoundingClientRect().bottom >= 80;\r\n\r\n  const isTopFirstElement = (el: HTMLElement | null) => el && el.getBoundingClientRect().top >= 60;\r\n\r\n  return (\r\n    <>\r\n      {isShow && (\r\n        <Box position={'fixed'} top={'10%'} left={'2%'} width={'fit-content'}>\r\n          <Box>\r\n            {pitchs &&\r\n              pitchs.map((v, i) => {\r\n                const isSelected = selectedNavbar === v.id;\r\n                return (\r\n                  <Box key={i} py={1}>\r\n                    <ScrollLink\r\n                      spy={true}\r\n                      onClick={() => handleClickPitch(v.id)}\r\n                      to={`__navbarTopClick_${v.id}`}\r\n                      style={{ cursor: 'pointer' }}\r\n                    >\r\n                      <Typography\r\n                        color={isSelected ? 'text.primary' : 'text.disabled'}\r\n                        variant=\"overline\"\r\n                        fontSize={10}\r\n                      >\r\n                        {v.title}\r\n                      </Typography>\r\n                    </ScrollLink>\r\n                  </Box>\r\n                );\r\n              })}\r\n          </Box>\r\n          <Divider variant=\"fullWidth\" sx={{ my: 1 }} />\r\n          <Box>\r\n            {bottomNav &&\r\n              bottomNav.length > 0 &&\r\n              bottomNav.map((nav, i) => (\r\n                <Box py={1} key={i}>\r\n                  <ScrollLink\r\n                    spy={true}\r\n                    onClick={() => (nav ? handleClickPitch(nav) : {})}\r\n                    to={`__navbarTopClick_${nav}`}\r\n                    style={{ cursor: 'pointer' }}\r\n                  >\r\n                    <Typography\r\n                      color={selectedNavbar === nav ? 'text.primary' : 'text.disabled'}\r\n                      variant=\"overline\"\r\n                      fontSize={10}\r\n                    >\r\n                      {nav}\r\n                    </Typography>\r\n                  </ScrollLink>\r\n                </Box>\r\n              ))}\r\n          </Box>\r\n        </Box>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailNavbar;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailExtension.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailPitch.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailHeading.tsx",["2706"],"import { Box, Chip, Typography } from '@mui/material';\r\nimport { MHidden } from 'components/@material-extend';\r\nimport { Project1, PROJECT_STATUS } from '../../../@types/krowd/project';\r\nconst StyleStatus = [\r\n  {\r\n    name: PROJECT_STATUS.CALLING_FOR_INVESTMENT,\r\n    bgcolor: 'primary.main',\r\n    vn: 'ĐANG KÊU GỌI ĐẦU TƯ'\r\n  },\r\n\r\n  { name: PROJECT_STATUS.ACTIVE, bgcolor: 'green', vn: 'KÊU GỌI THÀNH CÔNG' }\r\n];\r\nfunction ProjectDetailHeading({ p }: { p: Project1 }) {\r\n  return (\r\n    <>\r\n      <Box my={2} pt={'9rem'} sx={{ display: 'flex', gap: '12px', alignItems: 'center' }}>\r\n        <Typography>\r\n          <img style={{ width: '80px' }} src={p.business.image} />\r\n        </Typography>\r\n        <Typography variant=\"h2\">{p.name}</Typography>\r\n      </Box>\r\n      <Box my={2}>\r\n        <Typography variant=\"body2\" color={'#9E9E9E'}>\r\n          {p.description}\r\n        </Typography>\r\n      </Box>\r\n      <Box my={2} sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <Box sx={{ display: 'flex', gap: '12px' }}>\r\n          <Chip\r\n            label={<Typography variant=\"overline\">{p.field.name}</Typography>}\r\n            variant=\"filled\"\r\n            sx={{ borderRadius: '3px', color: 'rgba(0,0,0,0.6)' }}\r\n          />\r\n          <MHidden width=\"smDown\">\r\n            <Chip\r\n              label={<Typography variant=\"overline\">{p.field.description}</Typography>}\r\n              variant=\"filled\"\r\n              sx={{ borderRadius: '3px', color: 'rgba(0,0,0,0.6)' }}\r\n            />\r\n          </MHidden>\r\n        </Box>\r\n        <Box sx={{ display: 'flex' }}>\r\n          <Chip\r\n            label={\r\n              <Typography variant=\"overline\">\r\n                {StyleStatus.find((e) => e.name === p.status)?.vn}\r\n              </Typography>\r\n            }\r\n            variant=\"filled\"\r\n            sx={{\r\n              bgcolor: StyleStatus.find((e) => e.name === p.status)?.bgcolor,\r\n              borderRadius: '3px',\r\n              color: '#ffffff'\r\n            }}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailHeading;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailCard.tsx",["2707"],"import {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  LinearProgress,\r\n  linearProgressClasses,\r\n  Link,\r\n  styled,\r\n  Typography\r\n} from '@mui/material';\r\nimport { Package, Project1 } from '../../../@types/krowd/project';\r\nimport { fCurrency } from 'utils/formatNumber';\r\nimport { ProjectDetailAlbumCarousel } from 'components/_external-pages/project-detail/index';\r\nimport { PATH_PAGE } from 'routes/paths';\r\n\r\nimport { getProjectPackage } from 'redux/slices/krowd_slices/project';\r\nimport { dispatch } from 'redux/store';\r\nimport useLocales from 'hooks/useLocales';\r\nimport { useNavigate } from 'react-router';\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 300 : 700]\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#14B7CC'\r\n  }\r\n}));\r\n\r\ntype ProjectDetailCardProps = {\r\n  project: Project1;\r\n};\r\n\r\nfunction ProjectDetailCard({ project: p }: ProjectDetailCardProps) {\r\n  const getEntityList = (\r\n    type: 'PITCH' | 'EXTENSION' | 'DOCUMENT' | 'ALBUM' | 'ABOUT' | 'HIGHLIGHT' | 'PRESS' | 'FAQ'\r\n  ) => {\r\n    return p.projectEntity.find((pe) => pe.type === type)?.typeItemList;\r\n  };\r\n  //Language\r\n  const navigate = useNavigate();\r\n\r\n  const { translate: t } = useLocales();\r\n  const album = [\r\n    p.image,\r\n    ...getEntityList('ALBUM')!\r\n      .map((_image) => _image.link)\r\n      .filter(notEmpty)\r\n  ];\r\n  const handleGetPackageInvest = async () => {\r\n    dispatch(getProjectPackage(p.id));\r\n    navigate(`${PATH_PAGE.checkout}/${p.id}`);\r\n  };\r\n  function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\r\n    return value !== null && value !== undefined;\r\n  }\r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        px={{ lg: 0, md: 0, sm: 5, xs: 2 }}\r\n        sx={{ pr: 5 }}\r\n        py={{ lg: 0, md: 3, sm: 3 }}\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        md={7}\r\n        lg={8}\r\n      >\r\n        {album && <ProjectDetailAlbumCarousel album={album} />}\r\n      </Grid>\r\n      <Grid\r\n        px={{ lg: 5, md: 5, sm: 5, xs: 2 }}\r\n        py={{ lg: 5, md: 3, sm: 3, xs: 3 }}\r\n        item\r\n        xs={12}\r\n        sm={12}\r\n        md={5}\r\n        lg={4}\r\n      >\r\n        <Box>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              mb: '0.5rem'\r\n            }}\r\n          >\r\n            <Typography\r\n              paragraph\r\n              sx={{\r\n                color: '#251E18',\r\n                marginBottom: '0.2rem'\r\n              }}\r\n            >\r\n              <strong>{t(`Invested`)}</strong>\r\n            </Typography>\r\n            <Typography\r\n              paragraph\r\n              sx={{\r\n                color: '#251E18',\r\n                marginBottom: '0.2rem'\r\n              }}\r\n            >\r\n              <strong>{t(`InvestCapital`)}</strong>\r\n            </Typography>\r\n          </Box>\r\n          <BorderLinearProgress\r\n            variant=\"determinate\"\r\n            value={(p && (p.investedCapital / p.investmentTargetCapital) * 100) ?? 0}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n              my: '0.5rem'\r\n            }}\r\n          >\r\n            <Typography\r\n              paragraph\r\n              sx={{\r\n                color: '#14B7CC'\r\n              }}\r\n            >\r\n              <strong>{fCurrency(p.investedCapital)}</strong>\r\n            </Typography>\r\n            <Typography\r\n              paragraph\r\n              sx={{\r\n                color: '#FF7F56'\r\n              }}\r\n            >\r\n              <strong>{fCurrency(p.investmentTargetCapital)}</strong>\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Divider sx={{ color: 'text.disabled' }} />\r\n\r\n        <Box\r\n          sx={{\r\n            my: 1.5,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography sx={{ mt: 0.2, fontSize: '25px', fontWeight: '900' }}>\r\n            {p.sharedRevenue}\r\n            <span>%</span>\r\n            <Typography color=\"text.disabled\" variant=\"subtitle2\">\r\n              {t(`Project_detail_card.ShareRevenue`)}\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n        <Divider sx={{ color: 'text.disabled' }} />\r\n\r\n        <Box\r\n          sx={{\r\n            my: 1.5,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography sx={{ mt: 0.2, fontSize: '25px', fontWeight: '900' }}>\r\n            <span>x</span>\r\n            {p.multiplier}\r\n            <Typography color=\"text.disabled\" variant=\"subtitle2\">\r\n              {t(`Project_detail_card.Multiplier`)}\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n        <Divider sx={{ color: 'text.disabled' }} />\r\n\r\n        <Box\r\n          sx={{\r\n            my: 1.5,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography sx={{ mt: 0.2, fontSize: '25px', fontWeight: '900' }}>\r\n            {p.duration} <span> {t(`Project_detail_card.month`)} </span>\r\n            <Typography color=\"text.disabled\" variant=\"subtitle2\">\r\n              {t(`Project_detail_card.duration`)}\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n        <Divider sx={{ color: 'text.disabled' }} />\r\n\r\n        <Box\r\n          sx={{\r\n            my: 1.5,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Typography sx={{ mt: 0.2, fontSize: '25px', fontWeight: '900' }}>\r\n            {p.numOfStage} <span> {t(`Project_detail_card.Term`)}</span>\r\n            <Typography color=\"text.disabled\" variant=\"subtitle2\">\r\n              {t(`Project_detail_card.numOfStage`)}\r\n            </Typography>\r\n          </Typography>\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            my: 1.5,\r\n            display: 'flex',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <Link style={{ textDecoration: 'none' }} onClick={handleGetPackageInvest}>\r\n            {p.status === 'CALLING_FOR_INVESTMENT' && (\r\n              <Button\r\n                sx={{\r\n                  backgroundColor: '#FF7F50',\r\n                  textDecoration: 'none',\r\n                  '&:hover': { backgroundColor: '#FF7F50' }\r\n                }}\r\n                disableElevation\r\n                disableRipple\r\n                variant=\"contained\"\r\n                size=\"large\"\r\n              >\r\n                {t(`Project_detail_card.investNow`)}\r\n              </Button>\r\n            )}\r\n          </Link>\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default ProjectDetailCard;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MIconButton.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MFab.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MBreadcrumbs.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingKrowdFranchising.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingStepsInvestment.tsx",["2708"],"// material\r\nimport { alpha, useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Grid, Card, Container, Typography, useMediaQuery } from '@mui/material';\r\n//\r\nimport { varFadeInUp, MotionInView } from '../../animate';\r\n\r\nimport { OverlayBackground } from 'assets';\r\nimport useLocales from 'hooks/useLocales';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(9),\r\n  backgroundImage: `url(${OverlayBackground})`,\r\n  backgroundSize: 'cover',\r\n  backgroundColor: '#14B7CC',\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingBottom: theme.spacing(12)\r\n    // backgroundColor: '#212b35'\r\n  }\r\n}));\r\n\r\nconst CardStyle = styled(Card)(({ theme }) => {\r\n  const shadowCard = (opacity: number) =>\r\n    theme.palette.mode === 'light'\r\n      ? alpha(theme.palette.grey[500], opacity)\r\n      : alpha(theme.palette.common.black, opacity);\r\n  return {\r\n    maxWidth: 350,\r\n    minHeight: 300,\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    padding: theme.spacing(5, 2, 0),\r\n    // boxShadow: `-40px 40px 80px 0 ${shadowCard(0.48)}`,\r\n    [theme.breakpoints.up('md')]: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: theme.shape.borderRadiusMd\r\n    },\r\n    '&.cardCenter': {\r\n      [theme.breakpoints.up('md')]: {\r\n        marginTop: -80,\r\n        backgroundColor: '#FFFFFF',\r\n        boxShadow: `-40px 40px 80px 0 ${shadowCard(0.4)}`,\r\n        '&:before': {\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          zIndex: -1,\r\n          content: \"''\",\r\n          margin: 'auto',\r\n          position: 'absolute',\r\n          width: 'calc(100% - 40px)',\r\n          height: 'calc(100% - 40px)',\r\n          borderRadius: theme.shape.borderRadiusMd,\r\n          backgroundColor: '#FFFFFF'\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\nconst ThreeSteps = [\r\n  {\r\n    icon: '/static/faqs/register.png',\r\n    step_title: 'invest_step_title_1',\r\n    step_content: 'invest_step_1'\r\n  },\r\n  {\r\n    icon: '/static/faqs/topup1.png',\r\n    step_title: 'invest_step_title_2',\r\n    step_content: 'invest_step_2'\r\n  },\r\n  {\r\n    icon: '/static/faqs/invest.png',\r\n    step_title: 'invest_step_title_3',\r\n    step_content: 'invest_step_3'\r\n  }\r\n];\r\nexport default function LandingStepsInvestment() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const bgLight = theme.palette.mode === 'light';\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        paddingBottom: '4rem',\r\n        color: isLight ? '#FAF4EF' : '#FAF4EF'\r\n      }}\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mb: { xs: 10, md: 10, textAlign: 'center' } }}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            sx={{ color: isLight ? '#FAF4EF' : '#FAF4EF', marginTop: '29px' }}\r\n          >\r\n            {t('invest_step')}\r\n          </Typography>\r\n          <Typography sx={{ color: isLight ? '#FAF4EF' : '#FAF4EF' }}>\r\n            {t('invest_step_cover')}\r\n          </Typography>\r\n        </Box>\r\n        <Grid container spacing={isDesktop ? 15 : 5}>\r\n          {ThreeSteps.map((value, index) => (\r\n            <Grid key={index} item xs={12} md={4}>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <CardStyle\r\n                  sx={{\r\n                    mb: 3,\r\n                    color: isLight ? '#251E18' : '#251E18',\r\n                    backgroundColor: bgLight ? '#FFFFFF' : '#FFFFFF'\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    <img\r\n                      style={{\r\n                        width: '50px',\r\n                        display: 'inline',\r\n                        paddingBottom: '10px'\r\n                      }}\r\n                      src={value.icon}\r\n                    />\r\n                  </Typography>\r\n                  {/* <Typography variant=\"h3\" paragraph style={{ color: '#14B7CC' }}>\r\n                  1\r\n                </Typography> */}\r\n                  <Typography variant=\"h5\" paragraph style={{ color: '#14B7CC' }}>\r\n                    {t(value.step_title)}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{\r\n                      color: isLight ? 'rgb(99, 115, 129)' : 'common.white',\r\n                      textAlign: 'center',\r\n                      fontWeight: '400'\r\n                    }}\r\n                  >\r\n                    {t(value.step_content)}\r\n                  </Typography>\r\n                </CardStyle>\r\n              </MotionInView>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingAdvertisement.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingKrowdFaqs.tsx",["2709"],"// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Grid, Container, Typography } from '@mui/material';\r\n// components\r\nimport { FaqsList } from '../faqs';\r\nimport Page from 'components/Page';\r\nimport useLocales from 'hooks/useLocales';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  // paddingTop: theme.spacing(5),\r\n  paddingBottom: theme.spacing(5),\r\n  backgroundColor: '#FFFFFF',\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingTop: theme.spacing(9)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingKrowdFaqs() {\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container sx={{ mt: 3, mb: 10 }}>\r\n        <Typography variant=\"h3\" sx={{ mb: 5 }}>\r\n          {t('question_appear')}\r\n        </Typography>\r\n\r\n        <Grid container spacing={10}>\r\n          <Grid item xs={12} md={6}>\r\n            <img src=\"/static/home/hero.svg\" />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <FaqsList />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingInvest.tsx",["2710","2711","2712","2713"],"// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\n//React\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\n\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Collapse,\r\n  List,\r\n  Button,\r\n  Divider,\r\n  Stack,\r\n  Chip,\r\n  ListItemIcon\r\n} from '@mui/material';\r\n//Languages\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\n//Project\r\nimport { ProjectCard } from '../project';\r\n\r\nimport { getProjectListWithFilter } from 'redux/slices/krowd_slices/project';\r\nimport { getFieldList } from 'redux/slices/krowd_slices/field';\r\n//Icon\r\nimport { Icon } from '@iconify/react';\r\nimport caretDownFilled from '@iconify/icons-ant-design/caret-down-filled';\r\nimport caretUpFilled from '@iconify/icons-ant-design/caret-up-filled';\r\n//Temp\r\nimport { BlogPostsSearch, BlogPostsSort } from 'components/_dashboard/project';\r\nimport { getBusinessList } from 'redux/slices/krowd_slices/business';\r\nimport LoadingScreen from 'components/LoadingScreen';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(2.5),\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingBottom: theme.spacing(4),\r\n    backgroundColor:\r\n      theme.palette.mode === 'light'\r\n        ? `linear-gradient(180deg, ${alpha(theme.palette.grey[300], 0)} 0%, ${\r\n            theme.palette.grey[300]\r\n          } 100%)`\r\n        : 'none'\r\n  },\r\n\r\n  [theme.breakpoints.up('xs')]: {\r\n    paddingBottom: theme.spacing(4),\r\n    backgroundColor:\r\n      theme.palette.mode === 'light'\r\n        ? `linear-gradient(180deg, ${alpha(theme.palette.grey[300], 0)} 0%, ${\r\n            theme.palette.grey[300]\r\n          } 100%)`\r\n        : 'none'\r\n  }\r\n}));\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nconst SORT_OPTIONS_CONFIG = {\r\n  vi: [\r\n    {\r\n      value: 'CALLING_FOR_INVESTMENT',\r\n      label: 'Đang kêu gọi đầu tư'\r\n    }\r\n  ],\r\n\r\n  en: [\r\n    {\r\n      value: 'CALLING_FOR_INVESTMENT',\r\n      label: 'Calling for investment'\r\n    }\r\n  ]\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingInvest() {\r\n  const [filters, setFilters] = useState('CALLING_FOR_INVESTMENT');\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  const { projectListLanding, listAllProjectLanding } = useSelector(\r\n    (state: RootState) => state.project\r\n  );\r\n  const { isLoadingProjectListLanding } = projectListLanding;\r\n  const { fieldList } = useSelector((state: RootState) => state.fieldKrowd);\r\n  const { businessLists } = useSelector((state: RootState) => state.business);\r\n\r\n  const [openHighLight, setOpenHighLight] = useState(false);\r\n  const [openRevenue, setOpenRevenue] = useState(false);\r\n  const [openCategory, setOpenCategory] = useState(false);\r\n  const [openMore, setOpenMore] = useState(false);\r\n  const [selectedFilter, setSelectFilter] = useState<\r\n    {\r\n      filterId: string | null;\r\n      filterName: string | null;\r\n      filterType: string;\r\n    }[]\r\n  >([]);\r\n  const [selectedInvestmentTargetCapital, setSelectInvestmentTargetCapital] = useState('0');\r\n\r\n  const handleClearAll = () => {\r\n    setSelectFilter([]);\r\n    dispatch(getProjectListWithFilter([], '', '0', ''));\r\n  };\r\n  const [FieldID, setFieldId] = useState<string[]>([]);\r\n  const [BusinessID, setBusinessID] = useState('');\r\n\r\n  const handleChangeSort = (value?: string) => {\r\n    if (value) {\r\n      setFilters(value);\r\n      dispatch(\r\n        getProjectListWithFilter(FieldID, BusinessID, selectedInvestmentTargetCapital, value)\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getProjectListWithFilter([], '', '0', ''));\r\n  }, [dispatch]);\r\n  const getHighLight = () => {\r\n    dispatch(getBusinessList());\r\n    setOpenHighLight(!openHighLight);\r\n    setOpenCategory(false);\r\n    setOpenRevenue(false);\r\n    setOpenMore(false);\r\n  };\r\n\r\n  const getRevenue = () => {\r\n    setOpenRevenue(!openRevenue);\r\n    setOpenHighLight(false);\r\n    setOpenCategory(false);\r\n    setOpenMore(false);\r\n  };\r\n\r\n  const getCategory = () => {\r\n    dispatch(getFieldList());\r\n    setOpenCategory(!openCategory);\r\n    setOpenHighLight(false);\r\n    setOpenRevenue(false);\r\n    setOpenMore(false);\r\n  };\r\n  const handleClick = (func: VoidFunction) => {\r\n    func();\r\n  };\r\n  const handleInputChange = (newValue: {\r\n    filterId: string | null;\r\n    filterName: string | null;\r\n    filterType: string;\r\n  }) => {\r\n    const index = selectedFilter.findIndex((value) => value.filterId === newValue.filterId);\r\n    let newFilter = [];\r\n    if (index === -1) {\r\n      if (newValue.filterType === 'BUSINESS') {\r\n        const removeIndex = selectedFilter.findIndex((value) => value.filterType === 'BUSINESS');\r\n        if (removeIndex !== -1) selectedFilter.splice(removeIndex, 1, newValue);\r\n        else selectedFilter.push(newValue);\r\n      } else if (newValue.filterType === 'TARGET') {\r\n        const removeIndex = selectedFilter.findIndex((value) => value.filterType === 'TARGET');\r\n        if (removeIndex !== -1) selectedFilter.splice(removeIndex, 1, newValue);\r\n        else selectedFilter.push(newValue);\r\n      } else if (newValue.filterType === 'FIELD') {\r\n        selectedFilter.push(newValue);\r\n      }\r\n    } else {\r\n      selectedFilter.splice(index, 1);\r\n    }\r\n\r\n    newFilter = [...selectedFilter];\r\n    setSelectFilter(newFilter);\r\n\r\n    const fieldIds = selectedFilter\r\n      .filter((_value) => _value.filterType === 'FIELD')\r\n      .map((_value) => _value.filterId) as Array<string>;\r\n\r\n    const businessId =\r\n      selectedFilter.find((_value) => _value.filterType === 'BUSINESS')?.filterId ?? '';\r\n\r\n    const targetNumber =\r\n      selectedFilter.find((_value) => _value.filterType === 'TARGET')?.filterId ?? '0';\r\n    setFieldId(fieldIds);\r\n    setBusinessID(businessId);\r\n    setSelectInvestmentTargetCapital(targetNumber);\r\n    dispatch(getProjectListWithFilter(fieldIds, businessId, targetNumber, ''));\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\">\r\n        <Box>\r\n          <Grid container>\r\n            <Grid xs={12} md={2} lg={4}>\r\n              <BlogPostsSearch sx={{ display: 'flex' }} border=\"none\" />\r\n            </Grid>\r\n            <Grid xs={12} md={10} lg={8} p={0.1} textAlign={'center'}>\r\n              <Grid container sx={{ mb: 3 }}>\r\n                <Grid item xs={12} md={2}>\r\n                  <Button\r\n                    sx={{ color: openCategory ? 'primary.main' : 'text.secondary' }}\r\n                    onClick={() => handleClick(getCategory)}\r\n                  >\r\n                    <Typography\r\n                      sx={{\r\n                        color: openCategory ? 'primary.main' : 'text.secondary'\r\n                      }}\r\n                      mr={0.5}\r\n                    >\r\n                      {t(`landing_project_highlight.landing_highligh_by_category`)}\r\n                    </Typography>\r\n                    {openCategory ? (\r\n                      <Icon icon={caretUpFilled} width={15} height={15} />\r\n                    ) : (\r\n                      <Icon icon={caretDownFilled} width={15} height={15} />\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <Button\r\n                    sx={{ color: openHighLight ? 'primary.main' : 'text.secondary' }}\r\n                    onClick={() => handleClick(getHighLight)}\r\n                  >\r\n                    <Typography\r\n                      sx={{ color: openHighLight ? 'primary.main' : 'text.secondary' }}\r\n                      mr={0.5}\r\n                    >\r\n                      {t(`landing_project_highlight.landing_highligh_by_highligh`)}\r\n                    </Typography>\r\n                    {openHighLight ? (\r\n                      <Icon icon={caretUpFilled} width={15} height={15} />\r\n                    ) : (\r\n                      <Icon icon={caretDownFilled} width={15} height={15} />\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <Button\r\n                    sx={{ color: openRevenue ? 'primary.main' : 'text.secondary' }}\r\n                    onClick={() => handleClick(getRevenue)}\r\n                  >\r\n                    <Typography\r\n                      sx={{\r\n                        color: openRevenue ? 'primary.main' : 'text.secondary'\r\n                      }}\r\n                      mr={0.5}\r\n                    >\r\n                      {t(`landing_project_highlight.landing_highligh_by_revenue`)}\r\n                    </Typography>\r\n                    {openRevenue ? (\r\n                      <Icon icon={caretUpFilled} width={15} height={15} />\r\n                    ) : (\r\n                      <Icon icon={caretDownFilled} width={15} height={15} />\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <BlogPostsSort\r\n                    query={filters}\r\n                    options={\r\n                      currentLanguageCode === 'vi' ? SORT_OPTIONS_CONFIG.vi : SORT_OPTIONS_CONFIG.en\r\n                    }\r\n                    onSort={handleChangeSort}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box>\r\n          <Collapse in={openCategory} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ backgroundColor: '#eaeaeacf' }} mb={3}>\r\n              <Grid container sx={{ py: 3, ml: 3 }}>\r\n                {fieldList &&\r\n                  fieldList.listOfField.map((f) => {\r\n                    const isSelected = selectedFilter.findIndex((value) => value.filterId === f.id);\r\n                    return (\r\n                      <List key={f.id} component=\"div\" disablePadding>\r\n                        <ListItemButton\r\n                          onClick={() =>\r\n                            handleInputChange({\r\n                              filterId: f.id,\r\n                              filterName: f.name,\r\n                              filterType: 'FIELD'\r\n                            })\r\n                          }\r\n                        >\r\n                          <ListItemText\r\n                            primary={f.name}\r\n                            sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                          />\r\n                        </ListItemButton>\r\n                      </List>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box>\r\n        {/* Business */}\r\n        {/* <Box sx={{ backgroundColor: '#eaeaeacf' }} mb={5}>\r\n          <Collapse in={openHighLight} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ backgroundColor: '#eaeaeacf' }}>\r\n              <Grid container sx={{ py: 3, ml: 3 }}>\r\n                {businessLists &&\r\n                  businessLists.listOfBusiness.map((b) => {\r\n                    const isSelected = selectedFilter.findIndex((value) => value.filterId === b.id);\r\n                    return (\r\n                      <List key={b.id} component=\"div\" disablePadding>\r\n                        <ListItemButton\r\n                          onClick={() =>\r\n                            handleInputChange({\r\n                              filterId: b.id,\r\n                              filterName: b.name,\r\n                              filterType: 'BUSINESS'\r\n                            })\r\n                          }\r\n                        >\r\n                          <ListItemIcon>\r\n                            <img style={{ width: 50, height: 50 }} src={b.image} />\r\n                          </ListItemIcon>{' '}\r\n                          <ListItemText\r\n                            primary={b.name}\r\n                            sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                          />\r\n                        </ListItemButton>\r\n                      </List>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box> */}\r\n        <Box sx={{ backgroundColor: '#eaeaeacf' }} width={1200}>\r\n          <Collapse in={openHighLight} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ backgroundColor: '#eaeaeacf' }}>\r\n              <Grid container sx={{ py: 3, ml: 3 }}>\r\n                {businessLists &&\r\n                  businessLists.listOfBusiness.map((b) => {\r\n                    const isSelected = selectedFilter.findIndex((value) => value.filterId === b.id);\r\n                    return (\r\n                      <List key={b.id} component=\"div\" disablePadding>\r\n                        <ListItemButton\r\n                          onClick={() =>\r\n                            handleInputChange({\r\n                              filterId: b.id,\r\n                              filterName: b.name,\r\n                              filterType: 'BUSINESS'\r\n                            })\r\n                          }\r\n                        >\r\n                          <Box width={200} display={'flex'} alignItems={'center'}>\r\n                            <ListItemIcon>\r\n                              <img style={{ width: 50, height: 50 }} src={b.image} />\r\n                            </ListItemIcon>{' '}\r\n                            <ListItemText\r\n                              primary={b.name}\r\n                              sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                            />\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      </List>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box>\r\n        <Box sx={{ backgroundColor: '#eaeaeacf' }} mb={5}>\r\n          <Grid container>\r\n            <Collapse in={openRevenue} timeout=\"auto\" unmountOnExit>\r\n              <Grid container sx={{ backgroundColor: '#eaeaeacf' }}>\r\n                <Grid container sx={{ py: 3, ml: 3 }} md={4} lg={4}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '500000000',\r\n                          filterName: '500,000,000đ',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'500,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '750000000',\r\n                          filterName: '750,000,000đ',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'750,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '1000000000',\r\n                          filterName: '1,000,000,000đ',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'1,000,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n\r\n                <Grid sx={{ py: 3, ml: 3 }} md={2} lg={2}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '2000000000',\r\n                          filterName: '2,000,000,000đ',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'2,000,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '2500000000',\r\n                          filterName: '2,500,000,000đ',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'2,500,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </Collapse>\r\n          </Grid>\r\n        </Box>\r\n        <Box mb={5}>\r\n          <Collapse in={openMore} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ pb: 3 }}>\r\n              <Grid container sx={{ py: 3, backgroundColor: '#eaeaeacf' }} md={6} lg={6}>\r\n                <Grid container sx={{ py: 3 }} xs={5} sm={5} md={5} lg={5}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700', textAlign: 'center' }}>Impact</Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Diverse Founders\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Social Impact\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Sustainability\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n                <Divider orientation=\"vertical\">|</Divider>\r\n                <Grid container sx={{ py: 3 }} xs={6} sm={6} md={6} lg={6}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700' }}>\r\n                      {t(`landing_project_highlight.landing_highligh_business_model`)}\r\n                    </Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"B2B\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"B2C\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Creator Economy\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"D2C\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Marketplace\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"SaaS\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Subscription\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container sx={{ py: 3, backgroundColor: '#eaeaeacf' }} md={6} lg={6}>\r\n                <Grid container sx={{ py: 3 }} xs={5} sm={5} md={5} lg={5}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700', textAlign: 'center' }}>\r\n                      {t(`landing_project_highlight.landing_highligh_valucation_cap`)}\r\n                    </Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$5M and under\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$5–10M\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$10–20M\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$20M+\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n                <Divider orientation=\"vertical\" flexItem>\r\n                  |\r\n                </Divider>\r\n                <Grid container sx={{ py: 3 }} xs={6} sm={6} md={6} lg={6}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700' }}>\r\n                      {t(`landing_project_highlight.landing_highligh_min_investment`)}\r\n                    </Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$100 and under\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$101–$250\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$250+\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box>\r\n\r\n        {selectedFilter.length > 0 && (\r\n          <Box mt={1} mb={3} display=\"flex\" sx={{ alignItems: 'center' }}>\r\n            <Stack direction=\"row\" spacing={1}>\r\n              {selectedFilter.map((v, i) => (\r\n                <Chip key={`${v.filterId}`} label={v.filterName} />\r\n              ))}\r\n            </Stack>\r\n            <Button onClick={handleClearAll}>\r\n              <Chip label={'Xóa bộ lọc'} />\r\n            </Button>\r\n          </Box>\r\n        )}\r\n\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={5}>\r\n          {isLoadingProjectListLanding && (\r\n            <Box sx={{ pt: 7 }}>\r\n              <LoadingScreen />\r\n              <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem', pt: 7 }}>\r\n                KROWD đang tải dữ liệu, vui lòng đợi giây lát...\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          {!isLoadingProjectListLanding && projectListLanding.listOfProject.length > 0 ? (\r\n            projectListLanding.listOfProject\r\n              .slice(0, 9)\r\n              .map((p) => <ProjectCard key={p.id} row={p} />)\r\n          ) : (\r\n            <>\r\n              {!isLoadingProjectListLanding &&\r\n                projectListLanding.listOfProject &&\r\n                projectListLanding.listOfProject.length === 0 && (\r\n                  <Box sx={{ padding: '60px' }} display=\"flex\">\r\n                    <Box sx={{ p: 1 }}>\r\n                      <Icon width={40} height={40} icon={searchFill} />\r\n                    </Box>\r\n                    <Box sx={{ p: 1 }}>\r\n                      <Typography variant=\"h5\" sx={{ textAlign: 'center' }}>\r\n                        Không tìm thấy giao dịch <br />\r\n                        <Typography>Hãy thử sử dụng các bộ lọc ít hơn</Typography>\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingStartup.tsx",["2714","2715","2716","2717","2718"],"// material\r\nimport { alpha, useTheme, styled } from '@mui/material/styles';\r\n//React\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Collapse,\r\n  List,\r\n  Button,\r\n  Divider,\r\n  Stack,\r\n  Chip,\r\n  OutlinedInput,\r\n  ListItemIcon\r\n} from '@mui/material';\r\n//Languages\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\n//Project\r\nimport { ProjectCard } from '../project';\r\nimport {\r\n  getProjectListWithFilter,\r\n  getListAllProjectLanding,\r\n  getListAllProjectMostTransactionLanding\r\n} from 'redux/slices/krowd_slices/project';\r\nimport { getFieldList } from 'redux/slices/krowd_slices/field';\r\n//Icon\r\nimport { Icon } from '@iconify/react';\r\nimport barChartOutlined from '@iconify/icons-ant-design/bar-chart-outlined';\r\nimport caretDownFilled from '@iconify/icons-ant-design/caret-down-filled';\r\nimport caretUpFilled from '@iconify/icons-ant-design/caret-up-filled';\r\nimport fileProtectOutlined from '@iconify/icons-ant-design/file-protect-outlined';\r\n//Temp\r\nimport { BlogPostsSearch, BlogPostsSort } from 'components/_dashboard/project';\r\nimport { getBusinessList } from 'redux/slices/krowd_slices/business';\r\nimport LoadingScreen from 'components/LoadingScreen';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(5),\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingBottom: theme.spacing(4),\r\n    backgroundColor:\r\n      theme.palette.mode === 'light'\r\n        ? `linear-gradient(180deg, ${alpha(theme.palette.grey[300], 0)} 0%, ${\r\n            theme.palette.grey[300]\r\n          } 100%)`\r\n        : 'none'\r\n  },\r\n\r\n  [theme.breakpoints.up('xs')]: {\r\n    paddingTop: theme.spacing(9),\r\n    paddingBottom: theme.spacing(4),\r\n    backgroundColor:\r\n      theme.palette.mode === 'light'\r\n        ? `linear-gradient(180deg, ${alpha(theme.palette.grey[300], 0)} 0%, ${\r\n            theme.palette.grey[300]\r\n          } 100%)`\r\n        : 'none'\r\n  }\r\n}));\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nconst SORT_OPTIONS_CONFIG = {\r\n  vi: [\r\n    {\r\n      value: 'CALLING_FOR_INVESTMENT',\r\n      label: 'Đang kêu gọi đầu tư'\r\n    }\r\n  ],\r\n\r\n  en: [\r\n    {\r\n      value: 'CALLING_FOR_INVESTMENT',\r\n      label: 'Calling for investment'\r\n    }\r\n  ]\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingStartUp() {\r\n  const [filters, setFilters] = useState('CALLING_FOR_INVESTMENT');\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n\r\n  const { projectListLanding, listAllProjectLandingMostTransaction } = useSelector(\r\n    (state: RootState) => state.project\r\n  );\r\n\r\n  const { isLoadingProjectListLanding } = projectListLanding;\r\n  const { fieldList } = useSelector((state: RootState) => state.fieldKrowd);\r\n  const { businessLists } = useSelector((state: RootState) => state.business);\r\n\r\n  const [openHighLight, setOpenHighLight] = useState(false);\r\n  const [openRevenue, setOpenRevenue] = useState(false);\r\n  const [openCategory, setOpenCategory] = useState(false);\r\n  const [openMore, setOpenMore] = useState(false);\r\n  const [selectedFilter, setSelectFilter] = useState<\r\n    {\r\n      filterId: string | null;\r\n      filterName: string | null;\r\n      filterType: string;\r\n    }[]\r\n  >([]);\r\n  const [selectedInvestmentTargetCapital, setSelectInvestmentTargetCapital] = useState('0');\r\n  const [FieldID, setFieldId] = useState<string[]>([]);\r\n  const [BusinessID, setBusinessID] = useState('');\r\n\r\n  const handleClearAll = () => {\r\n    setSelectFilter([]);\r\n    dispatch(getProjectListWithFilter([], '', '0', ''));\r\n  };\r\n  const handleChangeSort = (value?: string) => {\r\n    if (value) {\r\n      setFilters(value);\r\n      dispatch(\r\n        getProjectListWithFilter(FieldID, BusinessID, selectedInvestmentTargetCapital, value)\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getProjectListWithFilter([], '', '0', ''));\r\n    dispatch(getListAllProjectLanding());\r\n    dispatch(getListAllProjectMostTransactionLanding());\r\n  }, [dispatch]);\r\n  const getHighLight = () => {\r\n    dispatch(getBusinessList());\r\n    setOpenHighLight(!openHighLight);\r\n    setOpenCategory(false);\r\n    setOpenRevenue(false);\r\n    setOpenMore(false);\r\n  };\r\n\r\n  const getRevenue = () => {\r\n    setOpenRevenue(!openRevenue);\r\n    setOpenHighLight(false);\r\n    setOpenCategory(false);\r\n    setOpenMore(false);\r\n  };\r\n\r\n  const getCategory = () => {\r\n    dispatch(getFieldList());\r\n    setOpenCategory(!openCategory);\r\n    setOpenHighLight(false);\r\n    setOpenRevenue(false);\r\n    setOpenMore(false);\r\n  };\r\n  const handleClick = (func: VoidFunction) => {\r\n    func();\r\n  };\r\n  const handleInputChange = (newValue: {\r\n    filterId: string | null;\r\n    filterName: string | null;\r\n    filterType: string;\r\n  }) => {\r\n    const index = selectedFilter.findIndex((value) => value.filterId === newValue.filterId);\r\n    let newFilter = [];\r\n    if (index === -1) {\r\n      if (newValue.filterType === 'BUSINESS') {\r\n        const removeIndex = selectedFilter.findIndex((value) => value.filterType === 'BUSINESS');\r\n        if (removeIndex !== -1) selectedFilter.splice(removeIndex, 1, newValue);\r\n        else selectedFilter.push(newValue);\r\n      } else if (newValue.filterType === 'TARGET') {\r\n        const removeIndex = selectedFilter.findIndex((value) => value.filterType === 'TARGET');\r\n        if (removeIndex !== -1) selectedFilter.splice(removeIndex, 1, newValue);\r\n        else selectedFilter.push(newValue);\r\n      } else if (newValue.filterType === 'FIELD') {\r\n        selectedFilter.push(newValue);\r\n      }\r\n    } else {\r\n      selectedFilter.splice(index, 1);\r\n    }\r\n\r\n    newFilter = [...selectedFilter];\r\n    setSelectFilter(newFilter);\r\n\r\n    const fieldIds = selectedFilter\r\n      .filter((_value) => _value.filterType === 'FIELD')\r\n      .map((_value) => _value.filterId) as Array<string>;\r\n\r\n    const businessId =\r\n      selectedFilter.find((_value) => _value.filterType === 'BUSINESS')?.filterId ?? '';\r\n\r\n    const targetNumber =\r\n      selectedFilter.find((_value) => _value.filterType === 'TARGET')?.filterId ?? '0';\r\n    setFieldId(fieldIds);\r\n    setBusinessID(businessId);\r\n    setSelectInvestmentTargetCapital(targetNumber);\r\n    dispatch(getProjectListWithFilter(fieldIds, businessId, targetNumber, ''));\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\">\r\n        <Box sx={{ mb: { xs: 10, md: 2, textAlign: 'left' } }}>\r\n          <Typography variant=\"h2\" sx={{ mb: 3, color: 'text.primary' }}>\r\n            {t('highlight_project')}\r\n          </Typography>\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              justifyContent: { sm: 'left', xs: 'center' },\r\n              alignItems: 'middle',\r\n              gap: '10'\r\n            }}\r\n          >\r\n            <Typography color=\"primary.main\">\r\n              <Icon icon={barChartOutlined} width={40} display=\"inline\" />\r\n            </Typography>\r\n            <Typography\r\n              fontWeight={400}\r\n              variant=\"h4\"\r\n              sx={{ mb: 1, color: 'text.disabled', marginLeft: '1rem' }}\r\n            >\r\n              {t('highlight_project_description')}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={5}>\r\n          {listAllProjectLandingMostTransaction.listOfProject.map((p) => (\r\n            <ProjectCard key={p.id} row={p} />\r\n          ))}\r\n        </Grid>\r\n\r\n        <Box sx={{ display: 'flex', alignItems: 'start', my: 3, pt: 2 }}>\r\n          <Typography color=\"primary.main\">\r\n            <Icon icon={fileProtectOutlined} width={40} display=\"inline\" />\r\n          </Typography>\r\n          <Typography\r\n            fontWeight={400}\r\n            variant=\"h4\"\r\n            sx={{ mb: 1, color: 'text.disabled', marginLeft: '1rem' }}\r\n          >\r\n            {t(`landing_project_highlight.landing_highligh_transaction`)}\r\n            <Link to=\"/about-us\" style={{ textDecoration: 'none' }}>\r\n              {' '}\r\n              {t(`landing_project_highlight.landing_highligh_by_about_us`)}\r\n            </Link>\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Box>\r\n          <Grid container>\r\n            <Grid xs={12} md={2} lg={4}>\r\n              <BlogPostsSearch sx={{ display: 'flex' }} border=\"none\" />\r\n            </Grid>\r\n            <Grid xs={12} md={10} lg={8} p={0.1} textAlign={'center'}>\r\n              <Grid container sx={{ mb: 3 }}>\r\n                <Grid item xs={12} md={2}>\r\n                  <Button\r\n                    sx={{ color: openCategory ? 'primary.main' : 'text.secondary' }}\r\n                    onClick={() => handleClick(getCategory)}\r\n                  >\r\n                    <Typography\r\n                      sx={{\r\n                        color: openCategory ? 'primary.main' : 'text.secondary'\r\n                      }}\r\n                      mr={0.5}\r\n                    >\r\n                      {t(`landing_project_highlight.landing_highligh_by_category`)}\r\n                    </Typography>\r\n                    {openCategory ? (\r\n                      <Icon icon={caretUpFilled} width={15} height={15} />\r\n                    ) : (\r\n                      <Icon icon={caretDownFilled} width={15} height={15} />\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <Button\r\n                    sx={{ color: openHighLight ? 'primary.main' : 'text.secondary' }}\r\n                    onClick={() => handleClick(getHighLight)}\r\n                  >\r\n                    <Typography\r\n                      sx={{ color: openHighLight ? 'primary.main' : 'text.secondary' }}\r\n                      mr={0.5}\r\n                    >\r\n                      {t(`landing_project_highlight.landing_highligh_by_highligh`)}\r\n                    </Typography>\r\n                    {openHighLight ? (\r\n                      <Icon icon={caretUpFilled} width={15} height={15} />\r\n                    ) : (\r\n                      <Icon icon={caretDownFilled} width={15} height={15} />\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <Button\r\n                    sx={{ color: openRevenue ? 'primary.main' : 'text.secondary' }}\r\n                    onClick={() => handleClick(getRevenue)}\r\n                  >\r\n                    <Typography\r\n                      sx={{\r\n                        color: openRevenue ? 'primary.main' : 'text.secondary'\r\n                      }}\r\n                      mr={0.5}\r\n                    >\r\n                      {t(`landing_project_highlight.landing_highligh_by_revenue`)}\r\n                    </Typography>\r\n                    {openRevenue ? (\r\n                      <Icon icon={caretUpFilled} width={15} height={15} />\r\n                    ) : (\r\n                      <Icon icon={caretDownFilled} width={15} height={15} />\r\n                    )}\r\n                  </Button>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={4}>\r\n                  <BlogPostsSort\r\n                    query={filters}\r\n                    options={\r\n                      currentLanguageCode === 'vi' ? SORT_OPTIONS_CONFIG.vi : SORT_OPTIONS_CONFIG.en\r\n                    }\r\n                    onSort={handleChangeSort}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box sx={{ backgroundColor: '#f7f7f7' }}>\r\n          <Collapse in={openCategory} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ backgroundColor: '#f7f7f7' }}>\r\n              <Grid container sx={{ py: 3, ml: 3 }}>\r\n                {fieldList &&\r\n                  fieldList.listOfField.map((f) => {\r\n                    const isSelected = selectedFilter.findIndex((value) => value.filterId === f.id);\r\n                    return (\r\n                      <List key={f.id} component=\"div\" disablePadding>\r\n                        <ListItemButton\r\n                          onClick={() =>\r\n                            handleInputChange({\r\n                              filterId: f.id,\r\n                              filterName: f.name,\r\n                              filterType: 'FIELD'\r\n                            })\r\n                          }\r\n                        >\r\n                          <ListItemText\r\n                            primary={f.name}\r\n                            sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                          />\r\n                        </ListItemButton>\r\n                      </List>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box>\r\n        {/* Business */}\r\n        <Box sx={{ backgroundColor: '#f7f7f7' }} width={1200}>\r\n          <Collapse in={openHighLight} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ backgroundColor: '#f7f7f7' }}>\r\n              <Grid container sx={{ py: 3, ml: 3 }}>\r\n                {businessLists &&\r\n                  businessLists.listOfBusiness.map((b) => {\r\n                    const isSelected = selectedFilter.findIndex((value) => value.filterId === b.id);\r\n                    return (\r\n                      <List key={b.id} component=\"div\" disablePadding>\r\n                        <ListItemButton\r\n                          onClick={() =>\r\n                            handleInputChange({\r\n                              filterId: b.id,\r\n                              filterName: b.name,\r\n                              filterType: 'BUSINESS'\r\n                            })\r\n                          }\r\n                        >\r\n                          <Box width={200} display={'flex'} alignItems={'center'}>\r\n                            <ListItemIcon>\r\n                              <img style={{ width: 50, height: 50 }} src={b.image} />\r\n                            </ListItemIcon>{' '}\r\n                            <ListItemText\r\n                              primary={b.name}\r\n                              sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                            />\r\n                          </Box>\r\n                        </ListItemButton>\r\n                      </List>\r\n                    );\r\n                  })}\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box>\r\n\r\n        <Box sx={{ backgroundColor: '#f7f7f7' }} mt={1} mb={3}>\r\n          <Grid container>\r\n            <Collapse in={openRevenue} timeout=\"auto\" unmountOnExit>\r\n              <Grid container sx={{ backgroundColor: '#f7f7f7' }}>\r\n                <Grid container sx={{ py: 3, ml: 3 }} md={4} lg={4}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '500000000',\r\n                          filterName: '500,000,000đ +',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      {' '}\r\n                      <ListItemText\r\n                        primary={'500,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '750000000',\r\n                          filterName: '750,000,000đ +',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'750,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '1000000000',\r\n                          filterName: '1,000,000,000đ +',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText primary={'1,000,000,000đ'} />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n\r\n                <Grid sx={{ py: 3, ml: 3 }} md={2} lg={2}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '2000000000',\r\n                          filterName: '2,000,000,000đ +',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'2,000,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                  <List component=\"div\" disablePadding>\r\n                    <ListItemButton\r\n                      onClick={() =>\r\n                        handleInputChange({\r\n                          filterId: '2500000000',\r\n                          filterName: '2,500,000,000đ +',\r\n                          filterType: 'TARGET'\r\n                        })\r\n                      }\r\n                    >\r\n                      <ListItemText\r\n                        primary={'2,500,000,000đ'}\r\n                        // sx={{ color: isSelected !== -1 ? 'primary.main' : 'text.secondary' }}\r\n                      />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </Collapse>\r\n          </Grid>\r\n        </Box>\r\n        <Box>\r\n          <Collapse in={openMore} timeout=\"auto\" unmountOnExit>\r\n            <Grid container sx={{ pb: 3 }}>\r\n              <Grid container sx={{ py: 3, backgroundColor: '#f7f7f7' }} md={6} lg={6}>\r\n                <Grid container sx={{ py: 3 }} xs={5} sm={5} md={5} lg={5}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700', textAlign: 'center' }}>Impact</Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Diverse Founders\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Social Impact\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Sustainability\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n                <Divider orientation=\"vertical\">|</Divider>\r\n                <Grid container sx={{ py: 3 }} xs={6} sm={6} md={6} lg={6}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700' }}>\r\n                      {t(`landing_project_highlight.landing_highligh_business_model`)}\r\n                    </Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"B2B\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"B2C\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Creator Economy\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"D2C\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Marketplace\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"SaaS\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"Subscription\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container sx={{ py: 3, backgroundColor: '#f7f7f7' }} md={6} lg={6}>\r\n                <Grid container sx={{ py: 3 }} xs={5} sm={5} md={5} lg={5}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700', textAlign: 'center' }}>\r\n                      {t(`landing_project_highlight.landing_highligh_valucation_cap`)}\r\n                    </Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$5M and under\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$5–10M\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$10–20M\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$20M+\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n                <Divider orientation=\"vertical\" flexItem>\r\n                  |\r\n                </Divider>\r\n                <Grid container sx={{ py: 3 }} xs={6} sm={6} md={6} lg={6}>\r\n                  <List component=\"div\" disablePadding>\r\n                    <Typography sx={{ fontWeight: '700' }}>\r\n                      {t(`landing_project_highlight.landing_highligh_min_investment`)}\r\n                    </Typography>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$100 and under\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$101–$250\" />\r\n                    </ListItemButton>\r\n                    <ListItemButton>\r\n                      <ListItemText primary=\"$250+\" />\r\n                    </ListItemButton>\r\n                  </List>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n        </Box>\r\n\r\n        {selectedFilter.length > 0 && (\r\n          <Box mt={1} mb={3} display=\"flex\" sx={{ alignItems: 'center' }}>\r\n            <Stack direction=\"row\" spacing={1}>\r\n              {selectedFilter.map((v, i) => (\r\n                <Chip key={`${v.filterId}`} label={v.filterName} />\r\n              ))}\r\n            </Stack>\r\n            <Button onClick={handleClearAll}>\r\n              <Chip label={'Xóa bộ lọc'} />\r\n            </Button>\r\n          </Box>\r\n        )}\r\n        <Grid container alignItems=\"center\" justifyContent=\"center\" spacing={5}>\r\n          {isLoadingProjectListLanding && (\r\n            <Box sx={{ pt: 7 }}>\r\n              <LoadingScreen />\r\n              <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem', pt: 7 }}>\r\n                KROWD đang tải dữ liệu, vui lòng đợi giây lát...\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n          {!isLoadingProjectListLanding && projectListLanding.listOfProject.length > 0 ? (\r\n            projectListLanding.listOfProject\r\n              .slice(0, 9)\r\n              .map((p) => <ProjectCard key={p.id} row={p} />)\r\n          ) : (\r\n            <>\r\n              {!isLoadingProjectListLanding &&\r\n                projectListLanding.listOfProject &&\r\n                projectListLanding.listOfProject.length === 0 && (\r\n                  <Box sx={{ padding: '60px' }} display=\"flex\">\r\n                    <Box sx={{ p: 1 }}>\r\n                      <Icon width={40} height={40} icon={searchFill} />\r\n                    </Box>\r\n                    <Box sx={{ p: 1 }}>\r\n                      <Typography variant=\"h5\" sx={{ textAlign: 'center' }}>\r\n                        Không tìm thấy giao dịch <br />\r\n                        <Typography>Hãy thử sử dụng các bộ lọc ít điều kiện hơn</Typography>\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n            </>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingSteps.tsx",["2719"],"// material\r\nimport { alpha, useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Grid, Card, Typography, useMediaQuery } from '@mui/material';\r\n//\r\nimport { varFadeInUp, MotionInView } from '../../animate';\r\n//dhwjahkdawjk\r\n// ----------------------------------------------------------------------\r\n\r\nconst CARDS = [\r\n  {\r\n    image: '/static/faqs/Why1.png',\r\n    title: 'Đầu tư với số vốn nhỏ',\r\n    description:\r\n      'Chỉ từ 500 nghìn đồng bạn có thể tham gia đầu tư trên nền tảng Krowd. Cùng đồng hành với doanh nghiệp với nhiều lựa chọn phong phú với các dự án về bán lẻ, thực phẩm, phần mềm.'\r\n  },\r\n  {\r\n    image: '/static/faqs/Why2.png',\r\n    title: 'Mô hình đầu tư chia sẻ doanh thu',\r\n    description:\r\n      'Chia sẻ doanh thu sẽ loại bỏ sự phức tạp của công việc tính toán. Phân chia lợi nhuận theo doanh thu và chi phí. Hàng tháng dựa theo doanh thu của dự án đầu tư, dự án sẽ thanh toán cho nhà tư vấn theo tỉ lệ%.'\r\n  },\r\n  {\r\n    image: '/static/faqs/Why3.png',\r\n    title: 'Lợi nhuận thu về theo tháng',\r\n    description:\r\n      'Sức mạnh của lợi nhuận \"kép\" khi đầu tư tiền sẽ trả theo tháng và bạn có thế thêm nhiều tư vấn khác nhau với số tiền thu được.  Doanh thu càng cao thì nhà dầu tư nhận về càng nhiều.'\r\n  },\r\n  {\r\n    image: '/static/faqs/Why4.png',\r\n    title: 'Minh bạch thông tin dự án',\r\n    description:\r\n      'Qui trình thẩm định dự án, tất cả các thông tin đều được kiếm tra trước khi công bố đến nhà đầu tư. Khi dự án diễn ra, doanh thu phát sinh sẽ được cập nhật cho nhà đầu tư có thể kiểm tra ngẫu nhiên các công việc không gian hoặc sai sót.'\r\n  },\r\n  {\r\n    image: '/static/faqs/Why5.png',\r\n    title: 'Hợp đồng pháp lý rõ ràng',\r\n    description: 'Hợp đồng pháp lý rõ ràng rành mạch giữa các bên'\r\n  },\r\n  {\r\n    image: '/static/faqs/Why6.png',\r\n    title: 'Cùng phát triển cộng đồng',\r\n    description: 'Cùng nhau chung tay phát triển cộng đồng mạnh mẽ.'\r\n  }\r\n];\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('md')]: {\r\n    // paddingBottom: theme.spacing(5),\r\n    backgroundColor: 'white'\r\n  }\r\n}));\r\nconst Container = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(9),\r\n  paddingLeft: theme.spacing(12),\r\n  paddingRight: theme.spacing(12),\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  [theme.breakpoints.up('sm')]: {\r\n    paddingBottom: theme.spacing(7),\r\n    backgroundColor: '#04297a'\r\n  }\r\n}));\r\nconst CardStyle = styled(Card)(({ theme }) => {\r\n  const shadowCard = (opacity: number) =>\r\n    theme.palette.mode === 'light'\r\n      ? alpha(theme.palette.grey[500], opacity)\r\n      : alpha(theme.palette.common.black, opacity);\r\n  return {\r\n    maxWidth: 420,\r\n    minHeight: 400,\r\n    margin: 'auto',\r\n    textAlign: 'left',\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    paddingTop: theme.spacing(5),\r\n    [theme.breakpoints.up('md')]: {\r\n      backgroundColor: '#212b35',\r\n      borderRadius: theme.shape.borderRadiusMd,\r\n      boxShadow: `-40px 40px 80px 0 ${shadowCard(0.48)}`\r\n    },\r\n    '&.cardCenter': {\r\n      [theme.breakpoints.up('md')]: {\r\n        marginTop: -80,\r\n        backgroundColor: '#212b35',\r\n        boxShadow: `-40px 40px 80px 0 ${shadowCard(0.4)}`,\r\n        '&:before': {\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          zIndex: -1,\r\n          content: \"''\",\r\n          margin: 'auto',\r\n          position: 'absolute',\r\n          width: 'calc(100% - 40px)',\r\n          height: 'calc(100% - 40px)',\r\n          borderRadius: theme.shape.borderRadiusMd,\r\n          backgroundColor: '#212b35',\r\n          boxShadow: `-20px 20px 40px 0 ${shadowCard(0.12)}`\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingMinimalHelps() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const bgLight = theme.palette.mode === 'light';\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        mb: { xs: 10, md: 10, textAlign: 'center' },\r\n        color: isLight ? 'white' : 'text.primary',\r\n        backgroundColor: bgLight ? '#212b35' : '#9acdff'\r\n      }}\r\n    >\r\n      <Container>\r\n        <Box sx={{ mb: { xs: 10, md: 10, textAlign: 'center' } }}>\r\n          <Typography variant=\"h2\" sx={{ mb: 3, color: isLight ? 'white' : 'white' }}>\r\n            Tại sao nên đầu tư qua nền tảng Krowd\r\n          </Typography>\r\n        </Box>\r\n        <Grid container spacing={isDesktop ? 10 : 5}>\r\n          {CARDS.map((card, index) => (\r\n            <Grid key={card.image} item xs={12} md={4}>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <CardStyle\r\n                  sx={{\r\n                    mb: { xs: 10, md: 7, textAlign: 'center' },\r\n                    color: isLight ? 'white' : 'text.primary',\r\n                    backgroundColor: bgLight ? '#212b35' : '#9acdff'\r\n                  }}\r\n                >\r\n                  <Typography>\r\n                    <img style={{ width: '80px', display: 'inline' }} src={card.image} />\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{\r\n                      color: isLight ? 'white' : 'white',\r\n                      textOverflow: 'ellipsis',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden'\r\n                    }}\r\n                    variant=\"h5\"\r\n                    paragraph\r\n                  >\r\n                    {card.title}\r\n                  </Typography>\r\n                  <Typography\r\n                    style={{ paddingBottom: '2rem', textAlign: 'left' }}\r\n                    sx={{ color: isLight ? 'white' : 'white' }}\r\n                  >\r\n                    {card.description}\r\n                  </Typography>\r\n                </CardStyle>\r\n              </MotionInView>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingAppDownload.tsx",["2720","2721","2722","2723","2724"],"// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Grid, Container, Typography } from '@mui/material';\r\n//\r\nimport { MotionInView, varFadeInUp } from '../../animate';\r\nimport { OverlayBackground } from 'assets';\r\nimport { motion } from 'framer-motion';\r\nimport useLocales from 'hooks/useLocales';\r\nimport { margin } from '@mui/system';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(15, 0, 4, 0),\r\n  backgroundColor: '#14B7CC',\r\n  backgroundImage: `url(${OverlayBackground})`,\r\n  backgroundSize: 'cover'\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  [theme.breakpoints.up('md')]: {\r\n    height: '100%',\r\n    marginBottom: 0,\r\n    textAlign: 'left',\r\n    display: 'inline-flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingAppDownload() {\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative' }}>\r\n        <Box\r\n          component=\"img\"\r\n          alt=\"image shape\"\r\n          src=\"/static/home/shape.svg\"\r\n          sx={{\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            my: 'auto',\r\n            position: 'absolute',\r\n            filter: 'grayscale(1) opacity(48%)',\r\n            display: { xs: 'none', md: 'block' }\r\n          }}\r\n        />\r\n        <MotionInView variants={varFadeInUp}>\r\n          <Typography\r\n            component=\"p\"\r\n            variant=\"h4\"\r\n            sx={{ color: 'common.white', textAlign: 'center' }}\r\n          >\r\n            {t('app_title_description')}\r\n          </Typography>\r\n        </MotionInView>\r\n\r\n        <MotionInView variants={varFadeInUp}>\r\n          <img style={{ objectFit: 'cover' }} alt=\"dark mode\" src=\"/static/home/KrowdApp.png\" />{' '}\r\n        </MotionInView>\r\n        <MotionInView variants={varFadeInUp}>\r\n          <Typography\r\n            component=\"p\"\r\n            sx={{\r\n              mb: 3,\r\n              color: 'common.white',\r\n              display: 'block',\r\n              fontSize: '18px',\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            {t('app_title_description_2')}\r\n          </Typography>\r\n        </MotionInView>\r\n        <MotionInView variants={varFadeInUp}>\r\n          <Typography\r\n            sx={{\r\n              mb: 3,\r\n              textAlign: 'center'\r\n            }}\r\n          >\r\n            <iframe\r\n              src=\"/static/icons/navbar/QRcode.png\"\r\n              style={{\r\n                width: '200px',\r\n                height: '239px',\r\n                margin: 'auto'\r\n              }}\r\n            />\r\n          </Typography>{' '}\r\n        </MotionInView>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingKrowdSteps.tsx",["2725"],"// material\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Grid, Card, Container, Typography } from '@mui/material';\r\n//\r\nimport { varFadeInUp, MotionInView } from '../../animate';\r\nimport useLocales from 'hooks/useLocales';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(12)\r\n}));\r\n\r\nconst CenterItemContainerMd = styled(Container)(({ theme }) => ({\r\n  [theme.breakpoints.between('sm', 'md')]: {\r\n    paddingLeft: '25%',\r\n    paddingRight: '25%'\r\n  }\r\n}));\r\nconst CardStyle = styled(Card)(({ theme }) => {\r\n  return {\r\n    maxWidth: 420,\r\n    minHeight: 200,\r\n    textAlign: 'center',\r\n    color: '#000000',\r\n    backgroundColor: '#ffffff',\r\n    padding: theme.spacing(3.2, 5, 2, 3),\r\n    [theme.breakpoints.up('md')]: {\r\n      backgroundColor: '#ffffff'\r\n    },\r\n    '&.card_title_2': {\r\n      [theme.breakpoints.up('md')]: {\r\n        backgroundColor: '#ffffff'\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\nconst MinimalContents = [\r\n  {\r\n    icon: '/static/faqs/topup.png',\r\n    card_title: 'card_title_1',\r\n    card_description: 'card_description_1'\r\n  },\r\n  {\r\n    icon: '/static/faqs/clock.png',\r\n    card_title: 'card_title_2',\r\n    card_description: 'card_description_2'\r\n  },\r\n  {\r\n    icon: '/static/faqs/fund.png',\r\n    card_title: 'card_title_3',\r\n    card_description: 'card_description_3'\r\n  }\r\n];\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingKrowdSteps() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <RootStyle>\r\n      <CenterItemContainerMd maxWidth=\"lg\">\r\n        <Grid container spacing={4}>\r\n          {Array.from(MinimalContents).map((value) => (\r\n            <Grid key={value.card_title} item xs={12} md={4}>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <CardStyle className={value.card_title}>\r\n                  <Typography>\r\n                    <img\r\n                      style={{\r\n                        width: '50px',\r\n                        display: 'inline',\r\n                        paddingBottom: '1rem'\r\n                      }}\r\n                      src={value.icon}\r\n                    />\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{ fontSize: '16px', textTransform: 'uppercase' }}\r\n                    variant=\"h6\"\r\n                    paragraph\r\n                  >\r\n                    {t(value.card_title)}\r\n                  </Typography>\r\n                  <Typography\r\n                    sx={{\r\n                      color: isLight ? 'rgb(99, 115, 129)' : 'common.white',\r\n                      fontWeight: '600'\r\n                    }}\r\n                  >\r\n                    {t(value.card_description)}\r\n                  </Typography>\r\n                </CardStyle>\r\n              </MotionInView>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </CenterItemContainerMd>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\landing\\LandingHero.tsx",["2726","2727"],"import { Icon } from '@iconify/react';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport { Container, Typography, Stack, StackProps } from '@mui/material';\r\n// routes\r\nimport { varFadeInUp, MotionInView, varFadeInDown } from '../../animate';\r\nimport { OverlayBackground } from 'assets';\r\nimport { BlogPostsSearch } from 'components/_dashboard/project';\r\nimport useLocales from 'hooks/useLocales';\r\n\r\n// ----------------------------------------------------------------------\r\nconst SearchbarStyle = styled('div')(({ theme }) => ({\r\n  top: 0,\r\n  left: 0,\r\n  zIndex: 99,\r\n  width: '100%',\r\n  display: 'flex',\r\n  // position: 'absolute',\r\n  backgroundColor: 'white',\r\n  alignItems: 'center',\r\n  backdropFilter: 'blur(6px)',\r\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n  borderRadius: '7px'\r\n}));\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(14, 0, 0, 0),\r\n  backgroundImage: `url(${OverlayBackground})`,\r\n  backgroundSize: 'cover',\r\n  backgroundColor: '#14B7CC',\r\n  [theme.breakpoints.up('md')]: {\r\n    paddingBottom: theme.spacing(13),\r\n    top: 0,\r\n    left: 0,\r\n    width: '100%',\r\n    // display: 'flex',\r\n    alignItems: 'center'\r\n  }\r\n}));\r\n\r\nconst ContentStyle = styled((props: StackProps) => <Stack spacing={5} {...props} />)(\r\n  ({ theme }) => ({\r\n    zIndex: 10,\r\n    Width: '100%',\r\n    margin: 'auto',\r\n    textAlign: 'center',\r\n    borderRadius: '2rem',\r\n    paddingLeft: 0,\r\n    paddingRight: 0,\r\n    // position: 'relative',\r\n    backgroundImage: 'none',\r\n    paddingTop: theme.spacing(5),\r\n    [theme.breakpoints.up('md')]: {\r\n      margin: 'unset',\r\n      textAlign: 'left',\r\n      height: '100%',\r\n      marginBottom: 0,\r\n      display: 'inline-flex',\r\n      flexDirection: 'collum',\r\n      justifyContent: 'center',\r\n      alignItems: 'flex-start'\r\n    },\r\n\r\n    [theme.breakpoints.down('md')]: {\r\n      paddingTop: 50,\r\n      paddingBottom: 60\r\n    }\r\n  })\r\n);\r\n\r\nconst HeroImgStyle = styled(motion.iframe)(({ theme }) => ({\r\n  top: 0,\r\n  right: 10,\r\n  bottom: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  height: '100%',\r\n  margin: 'auto',\r\n  position: 'absolute',\r\n  objectFit: 'cover',\r\n  opacity: 0.8,\r\n  [theme.breakpoints.up('md')]: {\r\n    width: 'auto',\r\n    height: '48vh'\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    display: 'none'\r\n  }\r\n}));\r\n\r\n//\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingHero() {\r\n  const { translate } = useLocales();\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative' }}>\r\n        {/* <Container maxWidth={false}> */}\r\n        <HeroImgStyle src=\"https://embed.lottiefiles.com/animation/71841\" />\r\n        <ContentStyle>\r\n          <MotionInView variants={varFadeInUp}>\r\n            <Typography variant=\"h1\" sx={{ color: 'common.white' }}>\r\n              {translate('Thumbnail_landing_hero_title')}{' '}\r\n              {translate('Thumbnail_landing_hero_title_1')}{' '}\r\n              {translate('Thumbnail_landing_hero_title_2')}\r\n              <Typography component=\"span\" variant=\"h1\" sx={{ color: '#14B7CC' }}>\r\n                &nbsp;KROWD\r\n              </Typography>\r\n            </Typography>\r\n          </MotionInView>\r\n          <MotionInView variants={varFadeInUp}>\r\n            <Typography sx={{ color: 'common.white', paddingBottom: '1rem' }}>\r\n              {translate('Thumbnail_landing_hero_description')}{' '}\r\n              {translate('Thumbnail_landing_hero_description_1')}{' '}\r\n            </Typography>\r\n            <Typography sx={{ color: 'common.white', paddingBottom: '1rem' }}>\r\n              {translate('Thumbnail_landing_hero_description2')}\r\n            </Typography>\r\n          </MotionInView>\r\n          <MotionInView variants={varFadeInUp}>\r\n            <Typography>\r\n              <SearchbarStyle></SearchbarStyle>\r\n              <BlogPostsSearch />\r\n            </Typography>\r\n          </MotionInView>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\@material-extend\\MAvatar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\LightboxModal.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\@types\\krowd\\project.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\krowd-table\\KrowdTable.tsx",["2728","2729","2730","2731","2732","2733","2734","2735"],"import React from 'react';\r\nimport {\r\n  Table,\r\n  Stack,\r\n  Avatar,\r\n  Button,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Typography,\r\n  TableContainer,\r\n  Box,\r\n  Chip,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport HeaderBreadcrumbs from 'components/HeaderBreadcrumbs';\r\nimport Scrollbar from 'components/Scrollbar';\r\nimport { PATH_DASHBOARD, PATH_DASHBOARD_PROJECT } from 'routes/paths';\r\nimport { Link, Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport KrowdTableListHead from '../components/KrowdTableListHead';\r\nimport { fCurrency } from 'utils/formatNumber';\r\nimport dollarCircleOutlined from '@iconify/icons-ant-design/dollar-circle-outlined';\r\nimport eyeFill from '@iconify/icons-ant-design/container-fill';\r\n\r\nimport LoadingScreen from 'components/LoadingScreen';\r\nimport Label from 'components/Label';\r\nimport { dispatch } from 'redux/store';\r\nimport {\r\n  getBillDailyReport,\r\n  getInvestmentByID,\r\n  getWithdrawRequestTransactionById\r\n} from 'redux/slices/krowd_slices/transaction';\r\nexport enum DATA_TYPE {\r\n  TEXT = 'text',\r\n  TEXT_FORMAT = 'text_format',\r\n  CHIP_TEXT = 'chip_text',\r\n  IMAGE = 'image',\r\n  ICONS = 'icons',\r\n  LIST_TEXT = 'list_text',\r\n  NUMBER_FORMAT = 'number_format',\r\n  NUMBER = 'number',\r\n  WRAP_TEXT = 'wrap_text',\r\n  DATE = 'date',\r\n  CURRENCY = 'currency',\r\n  ICONSKROWD = 'icons_krowd',\r\n\r\n  LABLE = 'lable'\r\n}\r\nexport enum ACTION_TYPE {\r\n  BUTTON = 'button',\r\n  LINK = 'link'\r\n}\r\nexport type RowData = {\r\n  id: string;\r\n  items: {\r\n    name: string;\r\n    value: any;\r\n    type: DATA_TYPE;\r\n    textColor?: string;\r\n    textColorAny?: any;\r\n    textMapColor?: { status: string; color: string }[];\r\n  }[];\r\n  status?: string;\r\n};\r\nexport type KrowdTableProps = {\r\n  headingTitle: string;\r\n  action?: React.ReactNode;\r\n  viewReportRevenue?: () => void;\r\n  cancelInvest?: (id: string) => void;\r\n\r\n  viewPeriodHistory?: (id: string) => void;\r\n  noteTable?: {\r\n    name: string;\r\n  }[];\r\n  header: { id: string; label: string; align: string }[];\r\n  getData: () => Array<RowData>;\r\n  isLoading: boolean;\r\n  actionsButton?: {\r\n    nameAction: string;\r\n    action: (() => void) | string;\r\n    icon: any;\r\n    color?: string;\r\n    type: ACTION_TYPE;\r\n  }[];\r\n  filterStatus?: {\r\n    action: (() => Promise<void>) | string;\r\n    nameAction: string;\r\n    icon: any;\r\n    color?: string;\r\n  }[];\r\n  paging?: {\r\n    pageSize: number;\r\n    pageIndex: number;\r\n    numberSize: number;\r\n    handlePrevious: () => void;\r\n    handleNext: () => void;\r\n  };\r\n  viewPath?: string;\r\n};\r\n\r\nexport function KrowdTable({\r\n  headingTitle,\r\n  action,\r\n  header,\r\n  getData,\r\n  isLoading,\r\n  actionsButton,\r\n  paging,\r\n  filterStatus,\r\n  cancelInvest,\r\n  noteTable,\r\n  viewPeriodHistory,\r\n  viewReportRevenue,\r\n  viewPath\r\n}: KrowdTableProps) {\r\n  const data = getData();\r\n  const navigate = useNavigate();\r\n\r\n  const openPeriodRevenueHistoryForm = async (id: string) => {\r\n    await dispatch(getWithdrawRequestTransactionById(id));\r\n    if (viewPeriodHistory) viewPeriodHistory(id);\r\n  };\r\n\r\n  const handleView = async (id: string) => {\r\n    localStorage.setItem('DailyId', id);\r\n    window.scrollTo(0, 12500);\r\n    if (viewReportRevenue) {\r\n      viewReportRevenue();\r\n    }\r\n    await dispatch(getBillDailyReport(localStorage?.getItem('DailyId') ?? '', 1));\r\n  };\r\n  const handleViewInvest = async (id: string) => {\r\n    dispatch(getInvestmentByID(id));\r\n    if (cancelInvest) cancelInvest(id);\r\n  };\r\n  return (\r\n    <>\r\n      <HeaderBreadcrumbs\r\n        heading={`${headingTitle.toUpperCase()} `}\r\n        links={[{ name: 'Bảng điều khiển', href: PATH_DASHBOARD.root }]}\r\n        action={action}\r\n      />{' '}\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          width: '100%',\r\n          minWidth: '200px',\r\n          my: 2\r\n        }}\r\n      >\r\n        {filterStatus &&\r\n          filterStatus.map((e) => {\r\n            return (\r\n              <Box\r\n                key={`__$`}\r\n                sx={{\r\n                  display: 'flex',\r\n                  flexDirection: 'row',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  width: '100%',\r\n                  minWidth: '200px',\r\n                  my: 2\r\n                }}\r\n              >\r\n                <Button onClick={e.action as () => Promise<void>}>\r\n                  <Box>\r\n                    <Icon icon={e.icon} width={24} height={24} color={e.color} />\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography color={e.color}>{e.nameAction}</Typography>\r\n                  </Box>\r\n                </Button>\r\n              </Box>\r\n            );\r\n          })}\r\n      </Box>\r\n      {/* <BlogPostsSearch /> */}\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 800 }}>\r\n          <Table>\r\n            <KrowdTableListHead\r\n              headLabel={[\r\n                { id: '__borderHeaderLeft', label: '', align: 'center' },\r\n                ...header,\r\n                { id: '__borderHeaderRight', label: '', align: 'center' }\r\n              ]}\r\n            />\r\n            <TableBody>\r\n              {!isLoading &&\r\n                data.length > 0 &&\r\n                data.map((data, index) => {\r\n                  return (\r\n                    <TableRow hover key={`__${data.id}`} tabIndex={-1} role=\"checkbox\">\r\n                      <TableCell\r\n                        key={'__borderRowLeft'}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        padding=\"normal\"\r\n                        align=\"justify\"\r\n                        sx={{ bgcolor: '#ffffff' }}\r\n                      ></TableCell>\r\n                      {data.items.map((_item) => {\r\n                        switch (_item.type) {\r\n                          case DATA_TYPE.TEXT:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    noWrap\r\n                                    color={_item.textColor ?? 'text.primary'}\r\n                                  >\r\n                                    {_item.value}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.TEXT_FORMAT:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack\r\n                                  display={'flex'}\r\n                                  direction=\"row\"\r\n                                  justifyContent={'center'}\r\n                                  spacing={2}\r\n                                >\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    noWrap\r\n                                    color={_item.textColor ?? 'text.primary'}\r\n                                  >\r\n                                    {_item.value}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.CURRENCY:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    noWrap\r\n                                    sx={{ color: _item.textColor ?? 'text.primary' }}\r\n                                  >\r\n                                    {fCurrency(_item.value)}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.WRAP_TEXT:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography variant=\"subtitle2\">{_item.value}</Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.NUMBER_FORMAT:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack\r\n                                  display={'block'}\r\n                                  direction=\"row\"\r\n                                  alignItems=\"right\"\r\n                                  spacing={2}\r\n                                >\r\n                                  <Typography\r\n                                    sx={{ textAlign: 'right' }}\r\n                                    variant=\"subtitle2\"\r\n                                    noWrap\r\n                                    mx=\"auto\"\r\n                                    color={_item.textColor ?? 'text.primary'}\r\n                                  >\r\n                                    {fCurrency(_item.value)}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.NUMBER:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography\r\n                                    variant=\"subtitle2\"\r\n                                    noWrap\r\n                                    mx=\"auto\"\r\n                                    color={_item.textColor ?? 'text.primary'}\r\n                                  >\r\n                                    {_item.value}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.DATE:\r\n                            const date = String(_item.value);\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack\r\n                                  direction=\"row\"\r\n                                  sx={{ justifyContent: 'center' }}\r\n                                  spacing={2}\r\n                                >\r\n                                  <Typography variant=\"subtitle2\" noWrap>\r\n                                    {date}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.ICONSKROWD:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <img style={{ width: 40 }} src={`/static/home/logo.png`} />\r\n                                  <Typography\r\n                                    sx={{ color: '#14b7cc', fontWeight: 700 }}\r\n                                    variant=\"body1\"\r\n                                  >\r\n                                    Ví Krowd\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.IMAGE:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Avatar alt={`__${_item.name}__${data.id}`} src={_item.value} />\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.ICONS:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <img\r\n                                    style={{ width: 40 }}\r\n                                    src={`/static/icons/navbar/ic_momo.png`}\r\n                                  />\r\n                                  <Typography\r\n                                    sx={{ color: '#c30ac3', fontWeight: 700 }}\r\n                                    variant=\"body1\"\r\n                                  >\r\n                                    Ví Momo\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                          case DATA_TYPE.LIST_TEXT:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography variant=\"subtitle2\" noWrap>\r\n                                    {[..._item.value].map((_o) => _o)}\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n\r\n                          case DATA_TYPE.LABLE:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography variant=\"subtitle2\" noWrap>\r\n                                    <Label\r\n                                      variant={'ghost'}\r\n                                      color={\r\n                                        (_item.value === 'Giao dịch thành công.' && 'success') ||\r\n                                        'error'\r\n                                      }\r\n                                    >\r\n                                      {_item.value}\r\n                                    </Label>\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n\r\n                          case DATA_TYPE.CHIP_TEXT:\r\n                            return (\r\n                              <TableCell\r\n                                key={`__${_item.name}__${data.id}`}\r\n                                component=\"th\"\r\n                                scope=\"row\"\r\n                                padding=\"normal\"\r\n                              >\r\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                                  <Typography variant=\"subtitle2\" noWrap>\r\n                                    <Chip\r\n                                      label={_item.value}\r\n                                      sx={{\r\n                                        bgcolor:\r\n                                          _item.textMapColor?.find((v) => v.status === _item.value)\r\n                                            ?.color || 'text.primary',\r\n                                        color: '#ffffff'\r\n                                      }}\r\n                                    />\r\n                                  </Typography>\r\n                                </Stack>\r\n                              </TableCell>\r\n                            );\r\n                        }\r\n                      })}\r\n                      <TableCell align=\"center\" key={`__${data.id}`}>\r\n                        {actionsButton &&\r\n                          actionsButton.map((e) => {\r\n                            switch (e.type) {\r\n                              case ACTION_TYPE.BUTTON:\r\n                                return (\r\n                                  <Button onClick={e.action as () => void}>\r\n                                    <Icon icon={e.icon} width={24} height={24} color={e.color} />\r\n                                  </Button>\r\n                                );\r\n                              case ACTION_TYPE.LINK:\r\n                                return (\r\n                                  <Link to={(e.action as string) + `/${data.id}`}>\r\n                                    <Icon icon={e.icon} width={24} height={24} color={e.color} />\r\n                                  </Link>\r\n                                );\r\n                            }\r\n                          })}{' '}\r\n                        {viewPeriodHistory && (\r\n                          <Button onClick={() => openPeriodRevenueHistoryForm(data.id)}>\r\n                            <Icon\r\n                              icon={eyeFill}\r\n                              width={24}\r\n                              height={24}\r\n                              style={{ margin: '0px auto' }}\r\n                              color={'rgb(255, 127, 80)'}\r\n                            />\r\n                          </Button>\r\n                        )}{' '}\r\n                        {viewReportRevenue && (\r\n                          <Tooltip title=\"Chi tiết đơn hàng\">\r\n                            <Button onClick={() => handleView(data.id)}>\r\n                              <Icon\r\n                                icon={eyeFill}\r\n                                width={24}\r\n                                height={24}\r\n                                style={{ margin: '0px auto' }}\r\n                                color={'rgb(255, 127, 80)'}\r\n                              />\r\n                            </Button>\r\n                          </Tooltip>\r\n                        )}\r\n                        {cancelInvest && (\r\n                          <Button onClick={() => handleViewInvest(data.id)}>\r\n                            <Icon\r\n                              icon={dollarCircleOutlined}\r\n                              width={24}\r\n                              height={24}\r\n                              style={{ margin: '0px auto' }}\r\n                              color={'red'}\r\n                            />\r\n                          </Button>\r\n                        )}\r\n                      </TableCell>\r\n                      <TableCell\r\n                        key={'__borderRowRight'}\r\n                        component=\"th\"\r\n                        scope=\"row\"\r\n                        padding=\"normal\"\r\n                        align=\"justify\"\r\n                        sx={{ bgcolor: '#ffffff' }}\r\n                      ></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>{' '}\r\n        </TableContainer>{' '}\r\n        {isLoading && (\r\n          <Box>\r\n            <LoadingScreen />\r\n            <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem', pt: 7 }}>\r\n              KROWD đang tải dữ liệu, vui lòng đợi giây lát...\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n        {!isLoading && data.length === 0 && (\r\n          <Box>\r\n            <img\r\n              src=\"https://minimals.cc/assets/illustrations/illustration_empty_content.svg\"\r\n              style={{ margin: '0px auto', padding: '1rem' }}\r\n            />\r\n            <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem' }}>\r\n              Không có bất kỳ tiêu đề nào có sẵn để hiển thị\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </Scrollbar>\r\n      {paging && (\r\n        <Box sx={{ my: 1 }} display={'flex'} justifyContent={'flex-end'} alignItems={'center'}>\r\n          {paging.pageSize * (paging.pageIndex - 1) + paging.pageSize >= paging.numberSize ? (\r\n            <Typography>\r\n              {(paging.pageIndex - 1) * paging.pageSize + 1} - {paging.numberSize} trên{' '}\r\n              {paging.numberSize}\r\n            </Typography>\r\n          ) : (\r\n            <Typography>\r\n              {(paging.pageIndex - 1) * paging.pageSize + 1} -{' '}\r\n              {paging.pageSize * (paging.pageIndex - 1) + paging.pageSize} trên {paging.numberSize}\r\n            </Typography>\r\n          )}\r\n\r\n          {/* {paging.pageIndex} - {paging.pageSize} trên {paging.numberSize} */}\r\n          {paging.pageIndex > 1 ? (\r\n            <Button onClick={paging.handlePrevious}>Trước</Button>\r\n          ) : (\r\n            <Button disabled onClick={paging.handlePrevious}>\r\n              Trước\r\n            </Button>\r\n          )}\r\n          <Typography sx={{ mx: 2, fontSize: '14px', fontWeight: 900 }}>\r\n            Trang {paging.pageIndex}\r\n          </Typography>\r\n\r\n          {paging.pageSize * (paging.pageIndex - 1) + paging.pageSize < paging.numberSize ? (\r\n            <Button onClick={paging.handleNext}>Sau</Button>\r\n          ) : (\r\n            <Button disabled onClick={paging.handleNext}>\r\n              Sau\r\n            </Button>\r\n          )}\r\n        </Box>\r\n      )}\r\n      <Box p={2}>\r\n        {noteTable &&\r\n          noteTable.map((_item) => {\r\n            return (\r\n              <Typography key={'_itme'} color=\"#f06f00\">\r\n                {_item.name}\r\n              </Typography>\r\n            );\r\n          })}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\components\\KrowdTableListHead.tsx",["2736"],"import { TableHead, TableRow, TableCell, TableSortLabel } from '@mui/material';\r\nimport React from 'react';\r\n\r\ntype KrowdTableListHeadProps = {\r\n  headLabel: any[];\r\n};\r\n\r\nexport default function KrowdTableListHead({ headLabel }: KrowdTableListHeadProps) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell key={headCell.id} align={headCell.align}>\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartRadialBar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartRadarBar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartPie.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartLine.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartMixed.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselThumbnail.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselCenterMode.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic3.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic4.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselAnimation.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic2.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\CarouselBasic1.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnSingle.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartDonut.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnStacked.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnNegative.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartColumnMultiple.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Label.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Scrollbar.tsx",["2737","2738"],"import SimpleBar, { Props } from 'simplebar-react';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, BoxProps } from '@mui/material';\r\nimport { createRef, useEffect, useRef } from 'react';\r\nimport * as React from 'react';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  overflow: 'hidden'\r\n}));\r\n\r\nconst SimpleBarStyle = styled(SimpleBar)(({ theme }) => ({\r\n  maxHeight: '100%',\r\n  '& .simplebar-scrollbar': {\r\n    '&:before': {\r\n      backgroundColor: alpha(theme.palette.grey[600], 0.48)\r\n    },\r\n    '&.simplebar-visible:before': {\r\n      opacity: 1\r\n    }\r\n  },\r\n  '& .simplebar-track.simplebar-vertical': {\r\n    width: 10\r\n  },\r\n  '& .simplebar-track.simplebar-horizontal .simplebar-scrollbar': {\r\n    height: 6\r\n  },\r\n  '& .simplebar-mask': {\r\n    zIndex: 'inherit'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Scrollbar({ children, sx, ...other }: BoxProps & Props) {\r\n  const isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\r\n    navigator.userAgent\r\n  );\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <Box sx={{ overflowX: 'auto', ...sx }} {...other}>\r\n        {children}\r\n      </Box>\r\n    );\r\n  }\r\n  const scrollableNodeRef = createRef<SimpleBar>();\r\n\r\n  return (\r\n    <RootStyle>\r\n      <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other} ref={scrollableNodeRef}>\r\n        {/* <SimpleBarStyle timeout={500} clickOnTrack={false} sx={sx} {...other}> */}\r\n        {children}\r\n      </SimpleBarStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\TextAnimate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\ButtonAnimate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsCategory.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsList.tsx",["2739","2740"],"import { Icon } from '@iconify/react';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { Accordion, Typography, AccordionSummary, AccordionDetails } from '@mui/material';\r\n// utils\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport { varFadeIn, MotionInView } from '../../animate';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\n// ----------------------------------------------------------------------\r\n\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function FaqsList() {\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <MotionInView variants={varFadeIn}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          style={{ paddingTop: '1rem', paddingBottom: '1rem', color: '#251E18' }}\r\n          expandIcon={<Icon icon={arrowIosDownwardFill} width={20} height={20} />}\r\n        >\r\n          <Typography variant=\"subtitle1\">+ {t('question_appear_1')}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>{t('question_description_1')}</Typography>\r\n          <Typography style={{ paddingTop: '2rem' }}>{t('question_description_1.1')}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          style={{ paddingTop: '1rem', paddingBottom: '1rem', color: '#251E18' }}\r\n          expandIcon={<Icon icon={arrowIosDownwardFill} width={20} height={20} />}\r\n        >\r\n          <Typography variant=\"subtitle1\">+ {t('question_appear_2')}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>{t('question_description_2')}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          style={{ paddingTop: '1rem', paddingBottom: '1rem', color: '#251E18' }}\r\n          expandIcon={<Icon icon={arrowIosDownwardFill} width={20} height={20} />}\r\n        >\r\n          <Typography variant=\"subtitle1\">+ {t('question_appear_3')}</Typography>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          <Typography>{t('question_description_3')}</Typography>\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </MotionInView>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\faqs\\FaqsHero.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostsSort.tsx",["2741","2742"],"// material\r\nimport { MenuItem, TextField, Typography } from '@mui/material';\r\nimport { RootState, useSelector } from 'redux/store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype BlogPostsSortProps = {\r\n  query: string;\r\n  options: { value: string; label: string }[];\r\n  onSort: (value?: string) => void;\r\n};\r\n\r\nexport default function BlogPostsSort({ query, options, onSort }: BlogPostsSortProps) {\r\n  const { projectListLanding } = useSelector((state: RootState) => state.project);\r\n  const { listOfProject } = projectListLanding;\r\n  // const handleChangeSearch = async (value: string) => {\r\n  //   try {\r\n  //     setSearchQuery(value);\r\n  //     if (value) {\r\n  //       const response = await axios.get(`${REACT_APP_API_URL}/projects?name=${searchQuery}`);\r\n  //       setSearchResults(response.data.results);\r\n  //       console.log(response);\r\n  //     } else {\r\n  //       setSearchResults([]);\r\n  //     }\r\n  //   } catch (error) {\r\n  //     console.error(error);\r\n  //   }\r\n  // };\r\n  return (\r\n    <TextField select size=\"small\" value={query} onChange={(e) => onSort(e.target.value)}>\r\n      {options.map((option) => (\r\n        <MenuItem key={option.value} value={option.value}>\r\n          {option.label}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostTags.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\TransactionsSort.tsx",["2743","2744","2745"],"// material\r\nimport { MenuItem, TextField, Typography } from '@mui/material';\r\nimport { useEffect } from 'react';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype BlogPostsSortProps = {\r\n  query: string;\r\n  onSort: (value?: string) => void;\r\n};\r\n\r\nexport default function TransactionsSort({ query, onSort }: BlogPostsSortProps) {\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n  useEffect(() => {\r\n    dispatch(getWalletList());\r\n  }, [dispatch]);\r\n  return (\r\n    <TextField select size=\"small\" value={query} onChange={(e) => onSort(e.target.value)}>\r\n      {listOfInvestorWallet.map((option) => (\r\n        <MenuItem key={option.id} value={option.id}>\r\n          {option.walletType}\r\n        </MenuItem>\r\n      ))}\r\n    </TextField>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostsSearch.tsx",["2746","2747","2748","2749","2750","2751","2752","2753"],"import { Icon } from '@iconify/react';\r\nimport { useEffect, useState } from 'react';\r\nimport { paramCase } from 'change-case';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  Autocomplete,\r\n  InputAdornment,\r\n  BoxProps\r\n} from '@mui/material';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\n// routes\r\nimport { PATH_DASHBOARD, PATH_PAGE } from '../../../routes/paths';\r\n// @types\r\nimport { Post } from '../../../@types/blog';\r\n//\r\nimport SearchNotFound from '../../SearchNotFound';\r\nimport { useTranslation } from 'react-i18next';\r\nimport Cookies from 'js-cookie';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { ALL_Project, Project1 } from '../../../@types/krowd/project';\r\nimport useLocales from 'hooks/useLocales';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  backgroundColor: 'white',\r\n  height: 50,\r\n  padding: 5,\r\n  borderRadius: 4,\r\n  '& .MuiAutocomplete-root': {\r\n    width: 300,\r\n    // transition: theme.transitions.create('width', {\r\n    //   easing: theme.transitions.easing.easeInOut,\r\n    //   duration: theme.transitions.duration.shorter\r\n    // }),\r\n    '&.Mui-focused': {\r\n      '& .MuiAutocomplete-inputRoot': {\r\n        // boxShadow: theme.customShadows.z12\r\n      }\r\n    }\r\n  },\r\n  '& .MuiAutocomplete-inputRoot': {\r\n    '& fieldset': {\r\n      // borderWidth: `2px !important`,\r\n      border: 'none',\r\n      borderColor: `#314459 !important`\r\n    }\r\n  },\r\n  '& .MuiAutocomplete-option': {\r\n    '&:not(:last-of-type)': {\r\n      borderBottom: `solid 3px ${theme.palette.divider}`\r\n    }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BlogPostsSearch({ sx }: BoxProps) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const linkTo = (title: string) => `${PATH_PAGE.details}/${paramCase(title)}`;\r\n\r\n  const { projectListLanding } = useSelector((state: RootState) => state.project);\r\n  const { listOfProject } = projectListLanding;\r\n  const { translate: t } = useLocales();\r\n  const handleChangeSearch = async (value: string) => {\r\n    try {\r\n      setSearchQuery(value);\r\n      if (value) {\r\n        const response = await axios.get(`${REACT_APP_API_URL}/projects?name=${searchQuery}`);\r\n        setSearchResults(response.data.results);\r\n        console.log(response);\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    handleChangeSearch(searchQuery);\r\n  }, []);\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(!searchQuery && {\r\n          '& .MuiAutocomplete-noOptions': {\r\n            display: 'none'\r\n          }\r\n        }),\r\n        ...sx\r\n      }}\r\n    >\r\n      <Autocomplete\r\n        size=\"small\"\r\n        disablePortal\r\n        popupIcon={null}\r\n        options={listOfProject}\r\n        // options={searchResults}\r\n        onInputChange={(event, value) => handleChangeSearch(value)}\r\n        getOptionLabel={(post: ALL_Project) => post.name}\r\n        noOptionsText={<SearchNotFound searchQuery={searchQuery} />}\r\n        renderInput={(params) => (\r\n          <TextField\r\n            {...params}\r\n            placeholder={t(`landing_project_search.landing_project_search_placeholder`)}\r\n            InputProps={{\r\n              ...params.InputProps,\r\n              startAdornment: (\r\n                <>\r\n                  <InputAdornment position=\"start\">\r\n                    <Box\r\n                      component={Icon}\r\n                      icon={searchFill}\r\n                      sx={{\r\n                        width: 20,\r\n                        height: 20\r\n                      }}\r\n                    />\r\n                  </InputAdornment>\r\n                  {params.InputProps.startAdornment}\r\n                </>\r\n              )\r\n            }}\r\n          />\r\n        )}\r\n        renderOption={(props, post, { inputValue }) => {\r\n          const { name } = post;\r\n          const matches = match(name, inputValue);\r\n          const parts = parse(name, matches);\r\n          return (\r\n            <li {...props}>\r\n              <Link to={linkTo(post.id)} component={RouterLink} underline=\"none\">\r\n                {parts.map((part, index) => (\r\n                  <Typography\r\n                    key={index}\r\n                    component=\"span\"\r\n                    variant=\"subtitle2\"\r\n                    color={part.highlight ? 'primary' : 'textPrimary'}\r\n                  >\r\n                    {part.text}\r\n                  </Typography>\r\n                ))}\r\n              </Link>\r\n            </li>\r\n          );\r\n        }}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostRecent.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostHero.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCommentItem.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCommentList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCommentForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BusinessProjectForm.tsx",["2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774","2775","2776"],"import * as Yup from 'yup';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport { DatePicker, LoadingButton } from '@mui/lab';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Chip,\r\n  Stack,\r\n  Switch,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel,\r\n  Select,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Box\r\n} from '@mui/material';\r\n// utils\r\nimport { useNavigate } from 'react-router-dom';\r\n// @types\r\nimport { NewProjectFormValues } from '../../../@types/krowd/project';\r\n\r\n//\r\nimport { QuillEditor } from '../../editor';\r\nimport { UploadSingleFile } from '../../upload';\r\nimport BlogNewPostPreview from './BlogNewPostPreview';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { getFieldList } from 'redux/slices/krowd_slices/field';\r\nimport { getAreasList } from 'redux/slices/krowd_slices/area';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { PATH_DASHBOARD } from 'routes/paths';\r\nimport axios from 'axios';\r\nimport { fDateTimeSuffix } from 'utils/formatTime';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TAGS_OPTION = [\r\n  'Toy Story 3',\r\n  'Logan',\r\n  'Full Metal Jacket',\r\n  'Dangal',\r\n  'The Sting',\r\n  '2001: A Space Odyssey',\r\n  \"Singin' in the Rain\",\r\n  'Toy Story',\r\n  'Bicycle Thieves',\r\n  'The Kid',\r\n  'Inglourious Basterds',\r\n  'Snatch',\r\n  '3 Idiots'\r\n];\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BusinessProjectForm() {\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { fieldList } = useSelector((state: RootState) => state.fieldKrowd);\r\n  const { areaList } = useSelector((state: RootState) => state.areaKrowd);\r\n  const currentTime = fDateTimeSuffix(new Date(Date.now()));\r\n  const [valueMin, setValueMin] = useState<Date | null>(new Date(Date.now()));\r\n  const [value, setValue] = useState<Date | null>(new Date(Date.now()));\r\n  const [valueEndDate, setValueEndDate] = useState<Date | null>(new Date(''));\r\n  const [valueMaxDate, setMaxDate] = useState<Date | null>(new Date('2030-12-31 12:00:00'));\r\n  const [date, setDateExpress] = useState('');\r\n  const handleChange = (newValue: Date | null) => {\r\n    setValue(newValue);\r\n    setFieldValue('startDate', fDateTimeSuffix(newValue!));\r\n    console.log(formik);\r\n  };\r\n  const handleChangeEndDate = (newValue2: Date | null) => {\r\n    setValueEndDate(newValue2);\r\n    setFieldValue('endDate', fDateTimeSuffix(newValue2!));\r\n    console.log(formik);\r\n  };\r\n  useEffect(() => {\r\n    dispatch(getFieldList());\r\n    dispatch(getAreasList());\r\n  }, [dispatch]);\r\n\r\n  const handleOpenPreview = () => {\r\n    navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessKrowd);\r\n  };\r\n\r\n  const handleClosePreview = () => {\r\n    navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessKrowd);\r\n  };\r\n\r\n  const NewProjectSchema = Yup.object().shape({\r\n    name: Yup.string().required('Yêu cầu nhập tên'),\r\n    businessId: Yup.string().required('Yêu cầu nhập doanh nghiệp'),\r\n    managerId: Yup.string().required('Yêu cầu nhập người quản lý'),\r\n    fieldId: Yup.string().required('Yêu cầu nhập lĩnh vực'),\r\n    areaId: Yup.string().required('Yêu cầu nhập khu vực'),\r\n    address: Yup.string().required('Yêu cầu nhập địa chỉ'),\r\n    description: Yup.string().min(10).required('Yêu cầu nhập mô tả'),\r\n    investmentTargetCapital: Yup.string().required('Yêu cầu nhập vốn mục tiêu đầu tư'),\r\n    investedCapital: Yup.string().required('Yêu cầu nhập vốn đầu tư'),\r\n    sharedRevenue: Yup.string().required('Yêu cầu nhập doanh thu được chia sẻ'),\r\n    multiplier: Yup.string().required('Yêu cầu nhập hệ số nhân'),\r\n    duration: Yup.string().required('Yêu cầu nhập thời hạn'),\r\n    numOfStage: Yup.string().required('Yêu cầu nhập số kỳ'),\r\n    businessLicense: Yup.string().required('Yêu cầu nhập mã doanh nghiệp'),\r\n    startDate: Yup.string().required('Yêu cầu nhập ngày tạo'),\r\n    endDate: Yup.string().required('Yêu cầu nhập ngày kết thúc'),\r\n    image: Yup.mixed().required('Yêu cầu nhập ảnh')\r\n  });\r\n\r\n  const formik = useFormik<NewProjectFormValues>({\r\n    initialValues: {\r\n      name: '',\r\n      businessId: '9E74278A-F610-11EC-B939-0242AC120002',\r\n      managerId: '00A551DC-0781-11ED-B939-0242AC120002',\r\n      fieldId: '',\r\n      areaId: '',\r\n      address: '',\r\n      description: '',\r\n      investmentTargetCapital: '',\r\n      investedCapital: '',\r\n      sharedRevenue: '',\r\n      multiplier: '',\r\n      duration: '',\r\n      numOfStage: '',\r\n      businessLicense: '',\r\n      startDate: currentTime,\r\n      endDate: '',\r\n      image: null\r\n    },\r\n    validationSchema: NewProjectSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('businessId', '9E74278A-F610-11EC-B939-0242AC120002');\r\n        formData.append('managerId', '00A551DC-0781-11ED-B939-0242AC120002');\r\n        formData.append('name', values.name);\r\n        formData.append('fieldId', values.fieldId);\r\n        formData.append('areaId', values.areaId);\r\n        formData.append('address', values.address);\r\n        formData.append('description', values.description);\r\n        formData.append('investmentTargetCapital', values.investmentTargetCapital);\r\n        formData.append('investedCapital', values.investedCapital);\r\n        formData.append('sharedRevenue', values.sharedRevenue);\r\n        formData.append('multiplier', values.multiplier);\r\n        formData.append('duration', values.duration);\r\n        formData.append('startDate', values.startDate);\r\n        formData.append('endDate', values.startDate);\r\n        formData.append('numOfStage', values.numOfStage);\r\n        formData.append('businessLicense', values.businessLicense);\r\n        formData.append('image', values.image);\r\n        await fetch(\r\n          `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/projects`,\r\n          { method: 'POST', mode: 'cors', body: formData }\r\n        );\r\n        console.log('fromdata', values.name);\r\n        resetForm();\r\n        setSubmitting(true);\r\n        enqueueSnackbar('Tạo mới thành công', {\r\n          variant: 'success'\r\n        });\r\n        navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessKrowd);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } =\r\n    formik;\r\n  console.log(formik);\r\n\r\n  // const handleDrop = useCallback(\r\n  //   (acceptedFiles) => {\r\n  //     const file = acceptedFiles[0];\r\n  //     if (file) {\r\n  //       setFieldValue('image', {\r\n  //         ...file,\r\n  //         preview: URL.createObjectURL(file)\r\n  //       });\r\n  //     }\r\n  //   },\r\n  //   [setFieldValue]\r\n  // );\r\n\r\n  return (\r\n    <>\r\n      <FormikProvider value={formik}>\r\n        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} md={8}>\r\n              <Card sx={{ p: 3 }}>\r\n                <Stack spacing={3}>\r\n                  <LabelStyle>Dự án</LabelStyle>\r\n\r\n                  <TextField\r\n                    sx={{ legend: { span: { mt: 1 } } }}\r\n                    label=\"Tên\"\r\n                    {...getFieldProps('name')}\r\n                    error={Boolean(touched.name && errors.name)}\r\n                    helperText={touched.name && errors.name}\r\n                    variant=\"outlined\"\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Mã doanh nghiệp\"\r\n                    {...getFieldProps('businessLicense')}\r\n                    error={Boolean(touched.businessLicense && errors.businessLicense)}\r\n                    helperText={touched.businessLicense && errors.businessLicense}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Địa chỉ\"\r\n                    {...getFieldProps('address')}\r\n                    error={Boolean(touched.address && errors.address)}\r\n                    helperText={touched.address && errors.address}\r\n                  />\r\n                  <Stack spacing={3}>\r\n                    <Autocomplete\r\n                      freeSolo\r\n                      onChange={(event, newValue) => {\r\n                        setFieldValue('areaId', newValue);\r\n                      }}\r\n                      options={areaList.map((option) => option.id)}\r\n                      renderInput={(params) => <TextField {...params} label=\"Khu vực\" />}\r\n                    />\r\n                  </Stack>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Mô tả thông tin\"\r\n                    {...getFieldProps('description')}\r\n                    error={Boolean(touched.description && errors.description)}\r\n                    helperText={touched.description && errors.description}\r\n                  />\r\n                  <div>\r\n                    <LabelStyle sx={{ py: 1 }}>Ảnh</LabelStyle>\r\n                    <TextField fullWidth type={'file'} {...getFieldProps('image')} />\r\n                    {/* <TextField\r\n                      type=\"file\"\r\n                      name=\"images\"\r\n                      id=\"imgid\"\r\n                      className=\"imgcls\"\r\n                    /> */}\r\n                    {/* <UploadSingleFile\r\n                      maxSize={3145728}\r\n                      accept=\"image/*\"\r\n                      file={values.image}\r\n                      onDrop={handleDrop}\r\n                      error={Boolean(touched.image && errors.image)}\r\n                    />\r\n                    {touched.image && errors.image && (\r\n                      <FormHelperText error sx={{ px: 2 }}>\r\n                        {touched.image && errors.image}\r\n                      </FormHelperText>\r\n                    )} */}\r\n                  </div>\r\n                  <LabelStyle sx={{ py: 1 }}>Thời gian kêu gọi</LabelStyle>\r\n                  <Grid container>\r\n                    <Grid xs={12} md={6}>\r\n                      <DatePicker\r\n                        label=\"Ngày bắt đầu\"\r\n                        inputFormat=\"dd/MM/yyyy\"\r\n                        value={value}\r\n                        minDate={valueMin!}\r\n                        onChange={handleChange}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={12} md={6}>\r\n                      <DatePicker\r\n                        label=\"Ngày kết thúc\"\r\n                        inputFormat=\"dd/MM/yyyy\"\r\n                        value={valueEndDate}\r\n                        minDate={value!}\r\n                        maxDate={valueMaxDate!}\r\n                        onChange={handleChangeEndDate}\r\n                        renderInput={(params) => <TextField {...params} />}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Stack>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={4}>\r\n              <Card sx={{ p: 3 }}>\r\n                <LabelStyle sx={{ pb: 1 }}>Doanh thu</LabelStyle>\r\n\r\n                <Stack spacing={3}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Vốn đầu tư\"\r\n                    {...getFieldProps('investedCapital')}\r\n                    error={Boolean(touched.investedCapital && errors.investedCapital)}\r\n                    helperText={touched.investedCapital && errors.investedCapital}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Doanh thu chia sẻ\"\r\n                    {...getFieldProps('sharedRevenue')}\r\n                    error={Boolean(touched.sharedRevenue && errors.sharedRevenue)}\r\n                    helperText={touched.sharedRevenue && errors.sharedRevenue}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Mục tiêu vốn đầu tư\"\r\n                    {...getFieldProps('investmentTargetCapital')}\r\n                    error={Boolean(\r\n                      touched.investmentTargetCapital && errors.investmentTargetCapital\r\n                    )}\r\n                    helperText={touched.investmentTargetCapital && errors.investmentTargetCapital}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Số kỳ\"\r\n                    {...getFieldProps('numOfStage')}\r\n                    error={Boolean(touched.numOfStage && errors.numOfStage)}\r\n                    helperText={touched.numOfStage && errors.numOfStage}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Hệ số nhân\"\r\n                    {...getFieldProps('multiplier')}\r\n                    error={Boolean(touched.multiplier && errors.multiplier)}\r\n                    helperText={touched.multiplier && errors.multiplier}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Thời hạn\"\r\n                    {...getFieldProps('duration')}\r\n                    error={Boolean(touched.duration && errors.duration)}\r\n                    helperText={touched.duration && errors.duration}\r\n                  />\r\n                </Stack>\r\n              </Card>\r\n              {/* <Card sx={{ p: 3 }}>\r\n                <Stack spacing={3}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    freeSolo\r\n                    onChange={(event, newValue) => {\r\n                      setFieldValue('businessId', newValue);\r\n                    }}\r\n                    options={TAGS_OPTION.map((option) => option)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          {...getTagProps({ index })}\r\n                          key={option}\r\n                          size=\"small\"\r\n                          label={option}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => <TextField {...params} label=\"Business\" />}\r\n                  />\r\n                </Stack>\r\n              </Card> */}\r\n              {/* <Card sx={{ p: 3 }}>\r\n                <LabelStyle sx={{ pb: 1 }}>Quản lý</LabelStyle>\r\n                <Stack spacing={3}>\r\n                  <Autocomplete\r\n                    multiple\r\n                    freeSolo\r\n                    onChange={(event, newValue) => {\r\n                      setFieldValue('managerId', newValue);\r\n                    }}\r\n                    options={TAGS_OPTION.map((option) => option)}\r\n                    renderTags={(value, getTagProps) =>\r\n                      value.map((option, index) => (\r\n                        <Chip\r\n                          {...getTagProps({ index })}\r\n                          key={option}\r\n                          size=\"small\"\r\n                          label={option}\r\n                        />\r\n                      ))\r\n                    }\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Người sở hữu dự án\"\r\n                        error={Boolean(touched.managerId && errors.managerId)}\r\n                        helperText={touched.managerId && errors.managerId}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </Card> */}\r\n\r\n              <Card sx={{ p: 3 }}>\r\n                <Stack spacing={3}>\r\n                  <Autocomplete\r\n                    freeSolo\r\n                    onChange={(event, newValue) => {\r\n                      setFieldValue('fieldId', newValue);\r\n                    }}\r\n                    options={fieldList.listOfField.map((option) => option.id)}\r\n                    // options={fieldList}\r\n                    // options={fieldList.map((option) => option.id)}\r\n                    // getOptionLabel={(option) => option.name}\r\n                    // renderOption={(props, option) => (\r\n                    //   <Box component=\"li\" {...props}>\r\n                    //     {option.name}\r\n                    //   </Box>\r\n                    // )}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        label=\"Lĩnh vực\"\r\n                        inputProps={{\r\n                          ...params.inputProps,\r\n                          autoComplete: 'new-password' // disable autocomplete and autofill\r\n                        }}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Stack>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Stack direction=\"row\" justifyContent=\"flex-end\" sx={{ mt: 3 }}>\r\n            <Button\r\n              fullWidth\r\n              type=\"button\"\r\n              color=\"inherit\"\r\n              variant=\"outlined\"\r\n              size=\"large\"\r\n              onClick={handleOpenPreview}\r\n              sx={{ mr: 1.5 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <LoadingButton\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              loading={isSubmitting}\r\n            >\r\n              Tạo mới\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n\r\n      {/* <BlogNewPostPreview\r\n        formik={formik}\r\n        isOpenPreview={open}\r\n        onClosePreview={handleClosePreview}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\BlogPostCard.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsArrowsIndex.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsArrowsBasic2.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsArrowsBasic1.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsPaging2.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\carousel\\controls\\CarouselControlsPaging1.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_plan_premium.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_plan_starter.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_plan_free.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\icon_sent.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_checkout.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_checkin.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_booking.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_order_complete.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_maintenance.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_coming_soon.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_motivation.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\formatTime.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\fakeRequest.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_404.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_500.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_upload.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_seo.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\assets\\illustration_doc.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\SearchNotFound.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\SvgIconStyle.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\Path.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\Wrap.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\Actions.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project\\ProjectCard.tsx",["2777","2778","2779","2780"],"import {\r\n  Grid,\r\n  CardMedia,\r\n  Box,\r\n  Typography,\r\n  CardActionArea,\r\n  Card,\r\n  alpha,\r\n  Chip,\r\n  Link\r\n} from '@mui/material';\r\nimport LinearProgress, { linearProgressClasses } from '@mui/material/LinearProgress';\r\nimport { styled } from '@mui/material/styles';\r\nimport { MotionInView, varFadeInUp } from 'components/animate';\r\nimport { useState } from 'react';\r\nimport { getProjectListById } from 'redux/slices/krowd_slices/project';\r\nimport { dispatch } from 'redux/store';\r\nimport { PATH_PAGE } from 'routes/paths';\r\nimport { fCurrency } from 'utils/formatNumber';\r\nimport { ALL_Project } from '../../../@types/krowd/project';\r\n//language\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nconst CardStyle = styled(Card)(({ theme }) => {\r\n  const shadowCard = (opacity: number) =>\r\n    theme.palette.mode === 'light'\r\n      ? alpha(theme.palette.common.black, opacity)\r\n      : alpha(theme.palette.common.black, opacity);\r\n  return {\r\n    maxWidth: 390,\r\n    margin: 'auto',\r\n    textAlign: 'left',\r\n    marginBottom: theme.spacing(5),\r\n    boxShadow: `-40px 40px 80px 0 ${shadowCard(0.2)}`,\r\n    [theme.breakpoints.up('md')]: {\r\n      borderRadius: theme.shape.borderRadiusMd,\r\n      backgroundColor: '#f4f6f8',\r\n      boxShadow: `-20px 20px 40px 0 ${shadowCard(0.15)}`\r\n    },\r\n    [theme.breakpoints.up('xs')]: {\r\n      borderRadius: theme.shape.borderRadiusMd,\r\n      backgroundColor: '#f4f6f8'\r\n    }\r\n    // '&.cardCenter': {\r\n    //   [theme.breakpoints.up('md')]: {\r\n    //     marginTop: -80,\r\n    //     backgroundColor: theme.palette.background.paper,\r\n    //     boxShadow: `-40px 40px 80px 0 ${shadowCard(0.1)}`,\r\n    //     '&:before': {\r\n    //       top: 0,\r\n    //       left: 0,\r\n    //       right: 0,\r\n    //       bottom: 0,\r\n    //       zIndex: -1,\r\n    //       content: \"''\",\r\n    //       margin: 'auto',\r\n    //       position: 'absolute',\r\n    //       width: 'calc(100% - 40px)',\r\n    //       height: 'calc(100% - 40px)',\r\n    //       borderRadius: theme.shape.borderRadiusMd,\r\n    //       backgroundColor: theme.palette.background.paper,\r\n    //       boxShadow: `-20px 20px 40px 0 ${shadowCard(0.05)}`\r\n    //     }\r\n    //   }\r\n    // }\r\n  };\r\n});\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 300 : 700]\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#14B7CC'\r\n  }\r\n}));\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nfunction ProjectCard({ row }: { row: ALL_Project }) {\r\n  const [isHover, setIsHover] = useState(false);\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <Grid sx={{ p: 2 }} item key={row.id} xs={12} sm={12} md={6} lg={4}>\r\n      <MotionInView variants={varFadeInUp}>\r\n        <Link href={`${PATH_PAGE.details}/${row.id}`} style={{ textDecoration: 'none' }}>\r\n          <CardStyle\r\n            onMouseOver={() => setIsHover(true)}\r\n            onMouseOut={() => setIsHover(false)}\r\n            sx={{\r\n              width: 360,\r\n              maxHeight: 500,\r\n              height: 500\r\n            }}\r\n          >\r\n            <CardActionArea>\r\n              <Card\r\n                sx={{\r\n                  minWidth: 50,\r\n                  minHeight: 50,\r\n                  boxShadow: '20px 40px 80px 0 20%',\r\n                  position: 'absolute',\r\n                  top: isHover ? '39%' : '42%',\r\n                  left: '5%',\r\n                  display: 'flex',\r\n                  alignItems: 'center'\r\n                }}\r\n              >\r\n                <img style={{ width: '4em' }} src={row.businessImage} />\r\n              </Card>\r\n              <CardMedia\r\n                style={{\r\n                  display: 'center'\r\n                }}\r\n                component=\"img\"\r\n                height={240}\r\n                src={row.image}\r\n              />\r\n              <Box px={3}>\r\n                <Box minHeight={'10em'}>\r\n                  <Typography\r\n                    sx={{\r\n                      color: 'text.primary',\r\n                      textOverflow: 'ellipsis',\r\n                      overflow: 'hidden',\r\n                      display: '-webkit-box',\r\n                      WebkitBoxOrient: 'vertical',\r\n                      WebkitLineClamp: 1,\r\n                      paddingTop: '1.8rem'\r\n                    }}\r\n                    variant=\"subtitle1\"\r\n                  >\r\n                    {row.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    style={{ textAlign: 'left' }}\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      textOverflow: 'ellipsis',\r\n                      overflow: 'hidden',\r\n                      display: '-webkit-box',\r\n                      WebkitBoxOrient: 'vertical',\r\n                      WebkitLineClamp: 5\r\n                    }}\r\n                    variant=\"body2\"\r\n                  >\r\n                    {row.description}\r\n                  </Typography>\r\n                </Box>\r\n                <Box mt={isHover ? 3 : 2}>\r\n                  <Box sx={{ display: !isHover ? 'block' : 'none' }}>\r\n                    <Box>\r\n                      <Typography\r\n                        paragraph\r\n                        variant=\"subtitle2\"\r\n                        sx={{\r\n                          color: 'text.disabled',\r\n                          textOverflow: 'ellipsis',\r\n                          overflow: 'hidden',\r\n                          display: '-webkit-box',\r\n                          WebkitBoxOrient: 'vertical',\r\n                          WebkitLineClamp: 1,\r\n                          marginBottom: '0.3rem'\r\n                        }}\r\n                      >\r\n                        {row.address.length > 40\r\n                          ? `${row.address.substring(0, 40)}...`\r\n                          : row.address}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex' }}>\r\n                      <Chip\r\n                        label={<Typography variant=\"caption\">{row.fieldName}</Typography>}\r\n                        variant=\"filled\"\r\n                        sx={{ borderRadius: '3px', color: 'rgba(0,0,0,0.6)' }}\r\n                      />\r\n                      <Chip\r\n                        label={<Typography variant=\"caption\">{row.fieldDescription}</Typography>}\r\n                        variant=\"filled\"\r\n                        sx={{ ml: 1, borderRadius: '3px', color: 'rgba(0,0,0,0.6)' }}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n                  <Box sx={{ display: isHover ? 'block' : 'none' }}>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>{t(`Invested`)}</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>{t(`InvestCapital`)}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <BorderLinearProgress\r\n                      variant=\"determinate\"\r\n                      value={(row.investedCapital / row.investmentTargetCapital) * 100}\r\n                    />\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        paddingTop: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#14B7CC'\r\n                        }}\r\n                      >\r\n                        <strong>{fCurrency(row.investedCapital)}</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#FF7F56'\r\n                        }}\r\n                      >\r\n                        <strong>{fCurrency(row.investmentTargetCapital)}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </CardActionArea>\r\n          </CardStyle>\r\n        </Link>\r\n      </MotionInView>\r\n    </Grid>\r\n  );\r\n}\r\nexport default ProjectCard;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\DialogAnimate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\MotionContainer.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\MotionInView.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\rotate\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\scale\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\flip\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\zoom\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\bounce\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\slide\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\fade\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartArea.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\charts\\ChartBar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\rotate\\RotateOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\fade\\FadeOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\fade\\FadeIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\slide\\SlideOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\slide\\SlideIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\bounce\\BounceOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\bounce\\BounceIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\zoom\\ZoomOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\zoom\\ZoomIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\flip\\FlipOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\flip\\FlipIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\scale\\ScaleOut.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\scale\\ScaleIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\BackgroundColor.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\BackgroundPan.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\background\\BackgroundKenburns.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\animate\\variants\\rotate\\RotateIn.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\HeaderBreadcrumbs.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserAccountForm.tsx",["2781","2782","2783","2784","2785","2786"],"import * as Yup from 'yup';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport {\r\n  Grid,\r\n  Dialog,\r\n  Button,\r\n  TextField,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n  DialogContentText,\r\n  Stack,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select\r\n} from '@mui/material';\r\nimport { DatePicker, LoadingButton } from '@mui/lab';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios from 'axios';\r\nimport { dispatch, RootState } from 'redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { getUserKrowdDetail } from 'redux/slices/krowd_slices/investor';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { User_Investor } from '../../../@types/krowd/investor';\r\nimport { fDateTimeSuffix2 } from 'utils/formatTime';\r\n\r\n// @types\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype UserAccountFormProps = {\r\n  user: User_Investor;\r\n  open: boolean;\r\n  onClose: VoidFunction;\r\n};\r\n\r\nexport default function UserAccountForm({ user, open, onClose }: UserAccountFormProps) {\r\n  const [value, setValue] = useState<Date | null>(new Date(user?.dateOfBirth ?? 'dd/MM/yyyy'));\r\n  const [valueMinDate, setMinDate] = useState<Date | null>(new Date('1950/12/31'));\r\n  const [valueMaxDate, setMaxDate] = useState<Date | null>(new Date('2003/12/31'));\r\n\r\n  const handleChange = (newValue: Date | null) => {\r\n    setValue(newValue);\r\n    setFieldValue('dateOfBirth', fDateTimeSuffix2(newValue!));\r\n  };\r\n  const GENDER_OPTION = ['Nam', 'Nữ', 'Khác'];\r\n  const NewAddressSchema = Yup.object().shape({\r\n    phoneNum: Yup.string().required('Yêu cầu nhập số điện thoại'),\r\n    district: Yup.string().required('Yêu cầu nhập quận của bạn'),\r\n    address: Yup.string().required('Yêu cầu nhập địa chỉ'),\r\n    firstName: Yup.string().required('Yêu cầu nhập họ của bạn'),\r\n    lastName: Yup.string().required('Yêu cầu nhập tên của bạn')\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}` };\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: user?.firstName ?? '',\r\n      lastName: user?.lastName ?? '',\r\n      phoneNum: user?.phoneNum ?? '',\r\n      address: user?.address ?? '',\r\n      gender: user?.gender ?? '',\r\n      idCard: user?.idCard ?? '',\r\n      district: user?.district ?? '',\r\n      city: user?.city ?? '',\r\n      bankName: user?.bankName ?? '',\r\n      bankAccount: user?.bankAccount ?? '',\r\n      taxIdentificationNumber: user?.taxIdentificationNumber ?? '',\r\n      dateOfBirth: user?.dateOfBirth ?? ''\r\n    },\r\n    validationSchema: NewAddressSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        if (user === null) {\r\n          throw new Error('User null');\r\n        }\r\n        const formData = new FormData();\r\n        const header = getHeaderFormData();\r\n        formData.append('firstName', values.firstName);\r\n        formData.append('email', user?.email);\r\n        formData.append('lastName', values.lastName ?? '');\r\n        formData.append('phoneNum', values.phoneNum);\r\n        formData.append('city', values.city);\r\n        formData.append('district', values.district);\r\n        formData.append('address', values.address);\r\n        formData.append('idCard', values.idCard);\r\n        formData.append('bankName', values.bankName);\r\n        formData.append('dateOfBirth', `${values.dateOfBirth}`);\r\n        formData.append('taxIdentificationNumber', values.taxIdentificationNumber);\r\n        formData.append('bankAccount', values.bankAccount);\r\n        formData.append('gender', values.gender);\r\n        await axios({\r\n          method: 'put',\r\n          url: REACT_APP_API_URL + `/users/${user.id}`,\r\n          data: formData,\r\n          headers: header\r\n        })\r\n          .then(() => {\r\n            enqueueSnackbar('Cập nhật thành công', {\r\n              variant: 'success'\r\n            });\r\n            dispatch(getUserKrowdDetail(user?.id));\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Cập nhật thất bại', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {\r\n            onClose();\r\n          });\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, isSubmitting, handleSubmit, getFieldProps, setFieldValue } =\r\n    formik;\r\n\r\n  return (\r\n    <Dialog fullWidth maxWidth=\"sm\" open={open}>\r\n      <FormikProvider value={formik}>\r\n        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <DialogTitle>Cập nhật thông tin</DialogTitle>\r\n          <DialogContent>\r\n            <Box my={3}>\r\n              <DialogContentText>Cập nhật thông tin của bạn ở bên dưới</DialogContentText>\r\n            </Box>\r\n            <Stack spacing={{ xs: 2, md: 3 }}>\r\n              <Typography>Thông tin cá nhân:</Typography>\r\n              <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                <TextField\r\n                  label=\"Họ\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('firstName')}\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  helperText={touched.firstName && errors.firstName}\r\n                />\r\n                <TextField\r\n                  label=\"Tên\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('lastName')}\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  helperText={touched.lastName && errors.lastName}\r\n                />\r\n\r\n                <FormControl sx={{ width: '270px' }}>\r\n                  <InputLabel>Giới tính</InputLabel>\r\n                  <Select\r\n                    label=\"Giới tính\"\r\n                    native\r\n                    {...getFieldProps('gender')}\r\n                    value={values.gender}\r\n                  >\r\n                    {GENDER_OPTION.map((category, i) => (\r\n                      <option key={i} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Stack>\r\n\r\n              <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                <Grid xs={12} md={5}>\r\n                  <DatePicker\r\n                    label=\"Ngày sinh\"\r\n                    inputFormat=\"dd/MM/yyyy\"\r\n                    value={value}\r\n                    minDate={valueMinDate!}\r\n                    maxDate={valueMaxDate!}\r\n                    onChange={handleChange}\r\n                    renderInput={(params) => (\r\n                      <TextField\r\n                        {...params}\r\n                        error={Boolean(touched.dateOfBirth && errors.dateOfBirth)}\r\n                      />\r\n                    )}\r\n                  />\r\n                </Grid>\r\n                <TextField\r\n                  label=\"SĐT\"\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('phoneNum')}\r\n                  error={Boolean(touched.phoneNum && errors.phoneNum)}\r\n                  helperText={touched.phoneNum && errors.phoneNum}\r\n                />\r\n                <TextField\r\n                  label=\"CMND/CCCD\"\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('idCard')}\r\n                  error={Boolean(touched.idCard && errors.idCard)}\r\n                  helperText={touched.idCard && errors.idCard}\r\n                />\r\n              </Stack>\r\n              <Typography>Địa chỉ:</Typography>\r\n\r\n              <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                <TextField\r\n                  label=\"Số nhà, tên đường\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('address')}\r\n                  error={Boolean(touched.address && errors.address)}\r\n                  helperText={touched.address && errors.address}\r\n                />\r\n              </Stack>\r\n              <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                <TextField\r\n                  label=\"Thành phố\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('city')}\r\n                  error={Boolean(touched.city && errors.city)}\r\n                  helperText={touched.city && errors.city}\r\n                />\r\n                <TextField\r\n                  label=\"Quận\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('district')}\r\n                  error={Boolean(touched.district && errors.district)}\r\n                  helperText={touched.district && errors.district}\r\n                />\r\n              </Stack>\r\n              <Typography>Ngân hàng</Typography>\r\n              <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                <TextField\r\n                  label=\"Tên ngân hàng\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('bankName')}\r\n                  error={Boolean(touched.bankName && errors.bankName)}\r\n                  helperText={touched.bankName && errors.bankName}\r\n                />\r\n                <TextField\r\n                  label=\"Số tài khoản\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('bankAccount')}\r\n                  error={Boolean(touched.bankAccount && errors.bankAccount)}\r\n                  helperText={touched.bankAccount && errors.bankAccount}\r\n                />\r\n                <TextField\r\n                  label=\"Mã số thuế\"\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                  {...getFieldProps('taxIdentificationNumber')}\r\n                  error={Boolean(touched.taxIdentificationNumber && errors.taxIdentificationNumber)}\r\n                  helperText={touched.taxIdentificationNumber && errors.taxIdentificationNumber}\r\n                />\r\n              </Stack>\r\n            </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={onClose}>Đóng</Button>\r\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n              Lưu\r\n            </LoadingButton>\r\n          </DialogActions>\r\n        </Form>\r\n      </FormikProvider>\r\n    </Dialog>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainNavbarTopUp.tsx",["2787","2788","2789","2790"],"import { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, AppBar, Toolbar, Container, Link, MenuItem, Menu } from '@mui/material';\r\n// hooks\r\nimport useOffSetTop from '../../hooks/useOffSetTop';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport Label from '../../components/Label';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\nimport MenuMobile from './MenuMobile';\r\nimport navConfig from './MenuConfig';\r\nimport i18next from 'i18next';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PATH_AUTH, PATH_DASHBOARD, PATH_PAGE } from '../../routes/paths';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst APP_BAR_MOBILE = 64;\r\nconst APP_BAR_DESKTOP = 88;\r\n\r\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: APP_BAR_MOBILE,\r\n  transition: theme.transitions.create(['height', 'background-color'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  [theme.breakpoints.up('md')]: {\r\n    height: APP_BAR_DESKTOP\r\n  }\r\n}));\r\n// const GlobeIcon = ({ width = 24, height = 24 }) => (\r\n//   <svg\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//     width={width}\r\n//     height={height}\r\n//     fill=\"currentColor\"\r\n//     className=\"bi bi-globe\"\r\n//     viewBox=\"0 0 16 16\"\r\n//     color=\"#14b7cc\"\r\n//     style={{ marginRight: '3px' }}\r\n//   >\r\n//     <path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z\" />\r\n//   </svg>\r\n// );\r\nconst ToolbarShadowStyle = styled('div')(({ theme }) => ({\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  height: 24,\r\n  zIndex: -1,\r\n  margin: 'auto',\r\n  borderRadius: '50%',\r\n  position: 'absolute',\r\n  width: `calc(100% - 48px)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type MenuItemProps = {\r\n  title: string;\r\n  path: string;\r\n  icon?: JSX.Element;\r\n  to?: string;\r\n  children?: {\r\n    subheader: string;\r\n    items: {\r\n      title: string;\r\n      path: string;\r\n    }[];\r\n  }[];\r\n};\r\n\r\nexport type MenuProps = {\r\n  isOffset: boolean;\r\n  isHome: boolean;\r\n  navConfig: MenuItemProps[];\r\n};\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nexport default function MainNavbarTopUp() {\r\n  const isOffset = useOffSetTop(-1);\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const { user, logout } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleLogout = async () => {\r\n    console.log('aaa');\r\n    try {\r\n      await logout?.();\r\n      if (isMountedRef.current) {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\r\n    }\r\n  };\r\n  const isHome = pathname === '/';\r\n  const initialLanguage = cookies.get('i18next') || 'vi';\r\n  const [currentLanguage, setCurrentLanguage] = useState('');\r\n  const { t } = useTranslation();\r\n  useEffect(() => {\r\n    setCurrentLanguage(initialLanguage);\r\n    localStorage.setItem('i18nextLng', initialLanguage);\r\n  });\r\n\r\n  const setLanguage = (newLang: string) => {\r\n    localStorage.setItem('i18nextLng', newLang);\r\n    const current = localStorage.getItem('i18nextLng')!;\r\n    i18next.changeLanguage(current);\r\n    setCurrentLanguage(current);\r\n    console.log(currentLanguage);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      sx={{\r\n        height: '120px',\r\n        boxShadow: 0,\r\n        bgcolor: '#FFFFFF',\r\n        position: 'absolute'\r\n      }}\r\n    >\r\n      <ToolbarStyle\r\n        disableGutters\r\n        sx={{\r\n          ...(isOffset && {\r\n            bgcolor: 'background.default',\r\n            height: { md: APP_BAR_DESKTOP - 16 }\r\n          })\r\n        }}\r\n      >\r\n        <Container\r\n          maxWidth=\"lg\"\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <RouterLink to=\"/\">\r\n            <Logo />\r\n          </RouterLink>\r\n          <Label\r\n            sx={{\r\n              ml: 1,\r\n              color: '#14b7cc',\r\n              backgroundColor: '#fff',\r\n              textTransform: 'uppercase',\r\n              fontSize: '1.25rem'\r\n            }}\r\n          >\r\n            Krowd\r\n          </Label>\r\n          <Box sx={{ flexGrow: 1.4 }} />\r\n\r\n          <MHidden width=\"mdDown\">\r\n            {(user && (\r\n              <>\r\n                <Button\r\n                  sx={{ marginRight: '23px' }}\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? 'basic-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? 'true' : undefined}\r\n                  onClick={handleClick}\r\n                  variant=\"contained\"\r\n                >\r\n                  {user?.fullName}{' '}\r\n                </Button>\r\n                <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                    'aria-labelledby': 'basic-button'\r\n                  }}\r\n                >\r\n                  <MenuItem component={Link} href={'/'}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_landing`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_DASHBOARD.user.account}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_profile`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_DASHBOARD.general.banking}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_console`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_PAGE.pageTopUp}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_wallet`)}\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleLogout}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_logout`)}\r\n                  </MenuItem>\r\n                </Menu>\r\n              </>\r\n            )) || (\r\n              <Button\r\n                sx={{\r\n                  marginRight: '23px',\r\n                  bgcolor: 'rgb(255, 127, 80)',\r\n                  '&:hover': {\r\n                    bgcolor: 'rgb(255, 127, 80)',\r\n                    color: '#ffffff'\r\n                  }\r\n                }}\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                href={PATH_AUTH.login}\r\n              >\r\n                {t('Navbar_login')}\r\n              </Button>\r\n            )}\r\n            {/* <div className=\"language-select\">\r\n              <div className=\"d-flex justify-content-end align-items-center language-select-root\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    className=\"btn btn-link dropdown-toggle\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenuButton1\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                    style={{\r\n                      color: '#14b7cc',\r\n                      textDecoration: 'solid',\r\n                      paddingRight: '1rem'\r\n                    }}\r\n                  >\r\n                    <GlobeIcon />\r\n                    {t('language')}\r\n                  </button>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                    {Language.map(({ code, name, countryCode }) => {\r\n                      return (\r\n                        <li key={countryCode}>\r\n                          <Link\r\n                            underline=\"none\"\r\n                            sx={{ cursor: 'pointer' }}\r\n                            className={classNames('dropdown-item', {\r\n                              disabled: currentLanguage === code\r\n                            })}\r\n                            onClick={() => setLanguage(code)}\r\n                          >\r\n                            <span\r\n                              className={`/static/icons/ic_flag_${countryCode}.svg`}\r\n                              style={{\r\n                                opacity: currentLanguage === code ? 0.5 : 1\r\n                              }}\r\n                            >\r\n                              <img src={`/static/icons/ic_flag_${countryCode}.svg`} />\r\n                            </span>\r\n                            {name}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n          </MHidden>\r\n          <MHidden width=\"mdUp\">\r\n            <MenuMobile\r\n              isOffset={isOffset}\r\n              isHome={isHome}\r\n              navConfig={currentLanguage === 'vi' ? navConfig.vi : navConfig.en}\r\n            />\r\n          </MHidden>\r\n        </Container>\r\n      </ToolbarStyle>\r\n\r\n      {isOffset && <ToolbarShadowStyle />}\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\ComingSoon.tsx",["2791"],"import { Icon } from '@iconify/react';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Button, Tooltip, Container, Typography } from '@mui/material';\r\n// hooks\r\nimport useCountdown from '../hooks/useCountdown';\r\n// components\r\nimport { MIconButton } from '../components/@material-extend';\r\nimport Page from '../components/Page';\r\nimport { ComingSoonIllustration } from '../assets';\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport useLocales from 'hooks/useLocales';\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIALS = [\r\n  {\r\n    name: 'Facebook',\r\n    icon: <Icon icon={facebookFill} width={24} height={24} color=\"#1877F2\" />\r\n  },\r\n  {\r\n    name: 'Instagram',\r\n    icon: <Icon icon={instagramFilled} width={24} height={24} color=\"#D7336D\" />\r\n  },\r\n  {\r\n    name: 'Linkedin',\r\n    icon: <Icon icon={linkedinFill} width={24} height={24} color=\"#006097\" />\r\n  },\r\n  {\r\n    name: 'Twitter',\r\n    icon: <Icon icon={twitterFill} width={24} height={24} color=\"#1C9CEA\" />\r\n  }\r\n];\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  minHeight: '100%',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  paddingTop: theme.spacing(15),\r\n  paddingBottom: theme.spacing(10)\r\n}));\r\n\r\nconst CountdownStyle = styled('div')({\r\n  display: 'flex',\r\n  justifyContent: 'center'\r\n});\r\n\r\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n  [theme.breakpoints.up('sm')]: {\r\n    margin: theme.spacing(0, 2.5)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ComingSoon() {\r\n  const countdown = useCountdown(new Date('10/02/2023 22:22'));\r\n  const { translate: t } = useLocales();\r\n  return (\r\n    <RootStyle title=\"Coming Soon | Krowd\">\r\n      <Container>\r\n        <Box sx={{ maxWidth: 480, margin: 'auto', textAlign: 'center' }}>\r\n          <Typography variant=\"h3\" paragraph>\r\n            {t('comming_soon_1')}\r\n          </Typography>\r\n          <Typography sx={{ color: 'text.secondary' }}> {t('comming_soon_2')} </Typography>\r\n          <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\r\n          <CountdownStyle>\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.days}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>{t('Days')}</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.hours}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>{t('Hours')}</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.minutes}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>{t('Minutes')}</Typography>\r\n            </div>\r\n\r\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\r\n\r\n            <div>\r\n              <Typography variant=\"h2\">{countdown.seconds}</Typography>\r\n              <Typography sx={{ color: 'text.secondary' }}>{t('Seconds')}</Typography>\r\n            </div>\r\n          </CountdownStyle>\r\n\r\n          <Box sx={{ textAlign: 'center', '& > *': { mx: 1 } }}>\r\n            {SOCIALS.map((social) => (\r\n              <Tooltip key={social.name} title={social.name}>\r\n                <MIconButton>{social.icon}</MIconButton>\r\n              </Tooltip>\r\n            ))}\r\n          </Box>\r\n          <Button to=\"/\" size=\"large\" variant=\"contained\" component={RouterLink}>\r\n            Trở về KROWD\r\n          </Button>\r\n        </Box>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Faqs.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\Contact.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\LandingPage.tsx",["2792"],"// material\r\nimport { styled } from '@mui/material/styles';\r\n// components\r\nimport Page from '../components/Page';\r\nimport { MessengerChat } from 'react-messenger-chat-plugin';\r\n\r\nimport {\r\n  LandingHero,\r\n  LandingKrowdSteps,\r\n  LandingAppDownload,\r\n  LandingStartup,\r\n  LandingKrowdFaqs,\r\n  LandingAdvertisement,\r\n  LandingStepsInvestment,\r\n  LandingKrowdFranchising\r\n} from '../components/_external-pages/landing';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  height: '100%'\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  backgroundColor: theme.palette.background.default\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LandingPage() {\r\n  return (\r\n    <RootStyle title=\"Nền tảng gọi vốn cộng đồng cho doanh nghiệp nhỏ | Krowd\" id=\"move_top\">\r\n      <ContentStyle>\r\n        <LandingHero />\r\n        <LandingKrowdSteps />\r\n        <LandingStartup />\r\n        <LandingKrowdFranchising />\r\n        <LandingAdvertisement />\r\n        <LandingStepsInvestment />\r\n        <LandingKrowdFaqs />\r\n        <LandingAppDownload />\r\n      </ContentStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\About.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\Mail.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\Chat.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserCreate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainFooter.tsx",["2793","2794","2795","2796","2797"],"import { Icon } from '@iconify/react';\r\nimport googleFill from '@iconify/icons-eva/google-fill';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport { Link as ScrollLink } from 'react-scroll';\r\nimport { Link as RouterLink, matchPath, useLocation, useNavigate } from 'react-router-dom';\r\n\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Divider,\r\n  Container,\r\n  Typography,\r\n  IconButton,\r\n  Stack,\r\n  Button\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_PAGE } from '../../routes/paths';\r\n//\r\nimport Logo from '../../components/Logo';\r\n//i18n\r\n\r\nimport useLocales from 'hooks/useLocales';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIALS = [\r\n  { name: 'FaceBook', icon: facebookFill },\r\n  { name: 'Google', icon: googleFill },\r\n  { name: 'Linkedin', icon: linkedinFill },\r\n  { name: 'Twitter', icon: twitterFill }\r\n];\r\n\r\nconst LINKS = [\r\n  {\r\n    headline: '1',\r\n    x: 0,\r\n    children: [\r\n      { name: 'Về chúng tôi', href: PATH_PAGE.about },\r\n      { name: 'Liên hệ với chúng tôi', href: PATH_PAGE.maintenance, target: '' },\r\n      { name: 'Hướng dẫn đầu tư', href: PATH_PAGE.maintenance, target: '' },\r\n      { name: 'Hướng dẫn gọi đầu tư', href: PATH_PAGE.maintenance, target: '' },\r\n      { name: 'Các câu hỏi thường gặp', href: PATH_PAGE.maintenance, target: '' }\r\n    ]\r\n  },\r\n  {\r\n    // headline: 'Thông tin pháp lý',\r\n    headline: '2',\r\n    children: [\r\n      { name: '  Điều khoản sử dụng dịch vụ', href: PATH_PAGE.maintenance, target: '' },\r\n      { name: 'Chính sách bảo mật', href: PATH_PAGE.maintenance },\r\n      { name: 'Cảnh báo rủi ro đầu tư', href: PATH_PAGE.maintenance, target: '' },\r\n      { name: 'Hợp đồng pháp lý liên quan', href: PATH_PAGE.maintenance, target: '' }\r\n    ]\r\n  },\r\n  {\r\n    headline: '3',\r\n    // headline: 'Về KROWD',\r\n    children: [\r\n      { name: 'Tuyển dụng', href: PATH_PAGE.maintenance, target: '' },\r\n      {\r\n        name: 'Truyền thông',\r\n        target: '_blank',\r\n        href: 'https://www.facebook.com/profile.php?id=100084621412328'\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  backgroundColor: theme.palette.background.default\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MainFooter() {\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <RootStyle>\r\n      {/* <Divider /> */}\r\n      <Container maxWidth=\"lg\" sx={{ pt: 4 }}>\r\n        <Grid\r\n          container\r\n          justifyContent={{ xs: 'center', md: 'space-between' }}\r\n          sx={{ textAlign: { xs: 'center', md: 'left' } }}\r\n        >\r\n          <Grid item xs={12} sx={{ mb: 3 }}>\r\n            <ScrollLink to=\"move_top\" spy smooth>\r\n              <Logo sx={{ mx: { xs: 'auto', md: 'inherit' } }} />\r\n            </ScrollLink>\r\n          </Grid>\r\n          <Grid item xs={8} md={3}>\r\n            <Typography variant=\"body2\" sx={{ pr: { md: 5 } }}>\r\n              {t('footer_title_left')}\r\n            </Typography>\r\n            <Stack\r\n              spacing={1.5}\r\n              direction=\"row\"\r\n              justifyContent={{ xs: 'center', md: 'flex-start' }}\r\n              sx={{ mt: 5, mb: { xs: 5, md: 0 } }}\r\n            >\r\n              {SOCIALS.map((social) => (\r\n                <IconButton key={social.name} color=\"primary\" sx={{ p: 1 }}>\r\n                  <Icon icon={social.icon} width={16} height={16} />\r\n                </IconButton>\r\n              ))}\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={7}>\r\n            <Stack\r\n              spacing={5}\r\n              direction={{ xs: 'column', md: 'row' }}\r\n              justifyContent=\"space-between\"\r\n            >\r\n              {LINKS.map((list) => {\r\n                const { headline, children } = list;\r\n                var x = 1;\r\n                return (\r\n                  <Stack key={headline} spacing={2}>\r\n                    <Typography component=\"p\" variant=\"overline\" sx={{ textAlign: 'center' }}>\r\n                      {t(`footer_title_${headline}.headline_name`)}\r\n                    </Typography>\r\n                    {children.map((link) => (\r\n                      <Button\r\n                        href={link.href}\r\n                        key={link.name}\r\n                        target={link.target}\r\n                        color=\"inherit\"\r\n                        sx={{ display: 'block', fontSize: '13px', fontWeight: 300, p: 0 }}\r\n                      >\r\n                        {t(`footer_title_${headline}.headline_link_description_${x++}`)}\r\n                        {/* {link.name} */}\r\n                      </Button>\r\n                    ))}\r\n                  </Stack>\r\n                );\r\n              })}\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n        <Divider sx={{ mt: 5 }} />\r\n\r\n        <Typography\r\n          sx={{\r\n            pt: 2,\r\n            mt: 5,\r\n            fontSize: 11,\r\n            textAlign: { xs: 'left', md: 'left' }\r\n          }}\r\n        >\r\n          {t('policy_description_legal_1')}\r\n        </Typography>\r\n        <Typography\r\n          sx={{\r\n            pt: 2,\r\n            fontSize: 11,\r\n            textAlign: { xs: 'left', md: 'left' }\r\n          }}\r\n        >\r\n          {t('policy_description_legal_2')}\r\n        </Typography>\r\n        <Typography\r\n          sx={{\r\n            pt: 2,\r\n            pb: 5,\r\n            fontSize: 11,\r\n            textAlign: { xs: 'left', md: 'left' }\r\n          }}\r\n        >\r\n          {t('policy_description_legal_3')}\r\n        </Typography>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\ProjectStageReport.tsx",["2798","2799","2800","2801","2802","2803","2804","2805","2806","2807","2808","2809","2810","2811","2812","2813","2814"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\BillReportDailyProject.tsx",["2815","2816","2817"],"// material\r\nimport { Box, CircularProgress, Container, Typography } from '@mui/material';\r\n\r\nimport React from 'react';\r\nimport ProjectBillDailyReport from '../../../components/table/sidebarProject/ProjectBillDailyReport';\r\n// ----------------------------------------------------------------------\r\nimport Page from 'components/Page';\r\n\r\nexport default function BillReportDailyProject() {\r\n  return (\r\n    <Page title=\"Báo cáo dự án hằng ngày | Krowd dành cho doanh nghiệp\">\r\n      <Container maxWidth={false}>\r\n        <ProjectBillDailyReport />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\ReportDailyProject.tsx",["2818","2819","2820"],"// material\r\nimport { Box, CircularProgress, Container, Typography } from '@mui/material';\r\n\r\nimport Page from 'components/Page';\r\nimport ProjectReportRevenue from 'components/table/sidebarProject/ProjectReportRevenue';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ReportDailyProject() {\r\n  return (\r\n    <Page title=\"Báo cáo dự án hằng ngày | Krowd dành cho doanh nghiệp\">\r\n      <Container maxWidth={false}>\r\n        <ProjectReportRevenue />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useIsMountedRef.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useOffSetTop.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MenuConfig.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MenuMobile.tsx",["2821","2822","2823","2824","2825","2826","2827"],"import { Icon } from '@iconify/react';\r\nimport menu2Fill from '@iconify/icons-eva/menu-2-fill';\r\nimport { NavLink as RouterLink, useLocation, useNavigate } from 'react-router-dom';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport classNames from 'classnames';\r\nimport React, { useEffect, useRef, useState, ReactNode } from 'react';\r\n\r\nimport i18next from 'i18next';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  List,\r\n  Link,\r\n  Drawer,\r\n  Collapse,\r\n  LinkProps,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListItemButton,\r\n  ListItemButtonProps,\r\n  Button,\r\n  FormControl,\r\n  Select,\r\n  Typography,\r\n  MenuItem,\r\n  Menu\r\n} from '@mui/material';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport NavSection from '../../components/NavSection';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport { MIconButton } from '../../components/@material-extend';\r\n//\r\nimport { MenuProps, MenuItemProps } from './MainNavbar';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useIsMountedRef from 'hooks/useIsMountedRef';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PATH_AUTH, PATH_DASHBOARD } from 'routes/paths';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = 22;\r\nconst ITEM_SIZE = 48;\r\nconst PADDING = 2.5;\r\n\r\ntype StyleProps = LinkProps & ListItemButtonProps;\r\n\r\ninterface ListItemStyleProps extends StyleProps {\r\n  component?: ReactNode;\r\n  to?: string;\r\n  end?: boolean;\r\n}\r\n\r\nconst ListItemStyle = styled(ListItemButton)<ListItemStyleProps>(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  height: ITEM_SIZE,\r\n  textTransform: 'capitalize',\r\n  paddingLeft: theme.spacing(PADDING),\r\n  paddingRight: theme.spacing(2.5),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype MenuMobileItemProps = {\r\n  item: MenuItemProps;\r\n  isOpen: boolean;\r\n  onOpen: VoidFunction;\r\n};\r\n\r\nfunction MenuMobileItem({ item, isOpen, onOpen }: MenuMobileItemProps) {\r\n  const { title, path, icon, children } = item;\r\n\r\n  if (children) {\r\n    return (\r\n      <>\r\n        <ListItemStyle onClick={onOpen}>\r\n          <ListItemIcon>{icon}</ListItemIcon>\r\n          <ListItemText disableTypography primary={title} />\r\n          <Box\r\n            component={Icon}\r\n            icon={isOpen ? arrowIosDownwardFill : arrowIosForwardFill}\r\n            sx={{ width: 16, height: 16, ml: 1 }}\r\n          />\r\n        </ListItemStyle>\r\n\r\n        <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\r\n          <Box sx={{ display: 'flex', flexDirection: 'column-reverse' }}>\r\n            <NavSection\r\n              navConfig={children}\r\n              sx={{\r\n                '& .MuiList-root:last-of-type .MuiListItemButton-root': {\r\n                  height: 200,\r\n                  backgroundSize: '92%',\r\n                  backgroundPosition: 'center',\r\n                  bgcolor: 'background.neutral',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundImage: 'url(/static/illustrations/illustration_dashboard.png)',\r\n                  '& > *:not(.MuiTouchRipple-root)': { display: 'none' }\r\n                },\r\n                '& .MuiListSubheader-root': {\r\n                  pl: PADDING,\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  '&:before': {\r\n                    ml: '6px',\r\n                    mr: '22px',\r\n                    width: 8,\r\n                    height: 2,\r\n                    content: \"''\",\r\n                    borderRadius: 2,\r\n                    bgcolor: '#14b7cc'\r\n                  }\r\n                },\r\n                '& .MuiListItemButton-root': {\r\n                  pl: PADDING,\r\n                  '&:before': { display: 'none' },\r\n                  '&.active': { color: 'primary.main', bgcolor: 'transparent' }\r\n                },\r\n                '& .MuiListItemIcon-root': {\r\n                  width: ICON_SIZE,\r\n                  height: ICON_SIZE,\r\n                  '&:before': {\r\n                    width: 4,\r\n                    height: 4,\r\n                    content: \"''\",\r\n                    borderRadius: '50%',\r\n                    bgcolor: '#ff7f50'\r\n                  }\r\n                }\r\n              }}\r\n            />\r\n          </Box>\r\n        </Collapse>\r\n      </>\r\n    );\r\n  }\r\n\r\n  if (title === 'Documentation') {\r\n    return (\r\n      <ListItemStyle href={path} target=\"_blank\" component={Link}>\r\n        <ListItemIcon>{icon}</ListItemIcon>\r\n        <ListItemText disableTypography primary={title} />\r\n      </ListItemStyle>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ListItemStyle\r\n      to={path}\r\n      component={RouterLink}\r\n      end={path === '/'}\r\n      sx={{\r\n        '&.active': {\r\n          color: 'primary.main',\r\n          fontWeight: 'fontWeightMedium',\r\n          bgcolor: (theme) =>\r\n            alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\r\n        }\r\n      }}\r\n    >\r\n      <ListItemIcon>{icon}</ListItemIcon>\r\n      <ListItemText disableTypography primary={title} />\r\n    </ListItemStyle>\r\n  );\r\n}\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nexport default function MenuMobile({ isOffset, isHome, navConfig }: MenuProps) {\r\n  const { pathname } = useLocation();\r\n  const [open, setOpen] = useState(false);\r\n  const [drawerOpen, setDrawerOpen] = useState(false);\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  const navigate = useNavigate();\r\n  const { user, logout } = useAuth();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open1 = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout?.();\r\n      if (isMountedRef.current) {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (drawerOpen) {\r\n      handleDrawerClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [pathname]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const handleDrawerOpen = () => {\r\n    setDrawerOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setDrawerOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        onClick={handleDrawerOpen}\r\n        sx={{\r\n          ml: 1,\r\n          ...(isHome && { color: 'common.white' }),\r\n          ...(isOffset && { color: 'text.primary' })\r\n        }}\r\n      >\r\n        <Icon icon={menu2Fill} />\r\n      </MIconButton>\r\n\r\n      <Drawer\r\n        open={drawerOpen}\r\n        onClose={handleDrawerClose}\r\n        ModalProps={{ keepMounted: true }}\r\n        PaperProps={{ sx: { pb: 5, width: 260 } }}\r\n      >\r\n        <Scrollbar>\r\n          <Link component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\r\n            <Logo sx={{ mx: PADDING, my: 3 }} />\r\n          </Link>\r\n\r\n          <List disablePadding>\r\n            {navConfig.map((link) => (\r\n              <MenuMobileItem key={link.title} item={link} isOpen={open} onOpen={handleOpen} />\r\n            ))}\r\n          </List>\r\n\r\n          {(user && (\r\n            <>\r\n              <Button\r\n                fullWidth\r\n                sx={{ my: 2 }}\r\n                id=\"basic-button\"\r\n                aria-controls={open1 ? 'basic-menu' : undefined}\r\n                aria-haspopup=\"true\"\r\n                aria-expanded={open1 ? 'true' : undefined}\r\n                onClick={handleClick}\r\n                variant=\"contained\"\r\n              >\r\n                {user?.fullName}\r\n              </Button>\r\n              <Menu\r\n                id=\"basic-menu\"\r\n                anchorEl={anchorEl}\r\n                open={open1}\r\n                onClose={handleClose}\r\n                MenuListProps={{\r\n                  'aria-labelledby': 'basic-button'\r\n                }}\r\n              >\r\n                <MenuItem component={Link} href={'/'}>\r\n                  {t(`mainNavbar_menu_item.mainNavbar_landing`)}\r\n                </MenuItem>\r\n                <MenuItem component={Link} href={PATH_DASHBOARD.user.account}>\r\n                  {t(`mainNavbar_menu_item.mainNavbar_menu_item_profile`)}\r\n                </MenuItem>\r\n                <MenuItem component={Link} href={PATH_DASHBOARD.general.banking}>\r\n                  {t(`mainNavbar_menu_item.mainNavbar_menu_item_console`)}\r\n                </MenuItem>\r\n                <MenuItem onClick={handleLogout}>\r\n                  {t(`mainNavbar_menu_item.mainNavbar_menu_item_logout`)}\r\n                </MenuItem>\r\n              </Menu>\r\n            </>\r\n          )) || (\r\n            <Button\r\n              sx={{\r\n                marginRight: '1rem',\r\n                bgcolor: 'rgb(255, 127, 80)',\r\n                '&:hover': {\r\n                  bgcolor: 'rgb(255, 127, 80)',\r\n                  color: '#ffffff'\r\n                }\r\n              }}\r\n              size=\"medium\"\r\n              variant=\"contained\"\r\n              href={PATH_AUTH.login}\r\n            >\r\n              {t('Navbar_login')}\r\n            </Button>\r\n          )}\r\n        </Scrollbar>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\ProjectListInvested.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserInvestmentAll.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserPeriodRevenueHistory.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserPaymentProject.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserInvestment.tsx",["2828","2829","2830","2831","2832","2833","2834","2835"],"// material\r\nimport { Container } from '@mui/material';\r\n\r\nimport InvestmentTable from 'components/table/InvestmentTable';\r\nimport Page from 'components/Page';\r\nimport { BlogPostsSearch, BlogPostsSort } from 'components/_dashboard/project';\r\nimport { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserInvestment() {\r\n  return (\r\n    <Page title=\"Giao dịch đầu tư | Krowd\">\r\n      <Container maxWidth={false}>\r\n        <InvestmentTable />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserWalletTransaction.tsx",["2836","2837","2838","2839","2840","2841","2842","2843"],"// material\r\nimport { Container } from '@mui/material';\r\n\r\nimport WalletTransactionTable from 'components/table/WalletTransactionTable';\r\nimport Page from 'components/Page';\r\nimport { BlogPostsSearch, BlogPostsSort } from 'components/_dashboard/project';\r\nimport { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function UserWalletTransaction() {\r\n  return (\r\n    <Page title=\"Giao dịch ví | Krowd\">\r\n      <Container maxWidth={false}>\r\n        <WalletTransactionTable />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useCountdown.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserWithDrawTransaction.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserAccount.tsx",["2844","2845","2846","2847","2848","2849","2850"],"import { Icon } from '@iconify/react';\r\nimport { capitalCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\nimport UserAccountForm from './UserAccountForm';\r\n// material\r\nimport { Container, Tab, Box, Tabs, Button, CircularProgress, Typography } from '@mui/material';\r\n// redux\r\nimport { RootState, useDispatch, useSelector } from '../../../redux/store';\r\n\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../../hooks/useSettings';\r\n// components\r\nimport Page from '../../../components/Page';\r\nimport HeaderBreadcrumbs from '../../../components/HeaderBreadcrumbs';\r\nimport { AccountBilling, AccountGeneral } from '../../../components/_dashboard/user/account';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { getUserKrowdDetail } from 'redux/slices/krowd_slices/investor';\r\nimport useAuth from 'hooks/useAuth';\r\n// ----------------------------------------------------------------------\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n\r\nexport default function UserAccount() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const { investorKrowdDetail: mainInvestor, isLoading } = useSelector(\r\n    (state: RootState) => state.user_InvestorStateKrowd\r\n  );\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Tài khoản người đầu tư | Krowd\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Tài khoản của bạn\"\r\n          links={[\r\n            { name: 'Bảng điều khiển', href: PATH_DASHBOARD.root },\r\n            { name: 'Quản lý tài khoản' }\r\n          ]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Icon icon={editFill} />}\r\n              onClick={handleClickOpen}\r\n              color=\"warning\"\r\n            >\r\n              Cập nhật tài khoản\r\n            </Button>\r\n          }\r\n        />\r\n        {mainInvestor && <UserAccountForm user={mainInvestor} open={open} onClose={handleClose} />}\r\n        {(isLoading && (\r\n          <Box>\r\n            <CircularProgress\r\n              size={100}\r\n              sx={{ margin: '0px auto', padding: '1rem', display: 'flex' }}\r\n            />\r\n            <Typography variant=\"h5\" sx={{ textAlign: 'center', padding: '1rem' }}>\r\n              Đang tải dữ liệu, vui lòng đợi giây lát...\r\n            </Typography>\r\n          </Box>\r\n        )) ||\r\n          (mainInvestor && <AccountGeneral investor={mainInvestor} />)}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\AccountManager\\UserAccountTransaction.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserList.tsx",["2851"],"import { filter } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useState, useEffect } from 'react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Table,\r\n  Stack,\r\n  Avatar,\r\n  Button,\r\n  Checkbox,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  Container,\r\n  Typography,\r\n  TableContainer,\r\n  TablePagination\r\n} from '@mui/material';\r\n// redux\r\nimport { RootState, useDispatch, useSelector } from '../../redux/store';\r\nimport { getUserList, deleteUser } from '../../redux/slices/userKrowdrac';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// @types\r\nimport { UserManager } from '../../@types/user';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport Label from '../../components/Label';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport SearchNotFound from '../../components/SearchNotFound';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/list';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'name', label: 'Name', alignRight: false },\r\n  { id: 'company', label: 'Company', alignRight: false },\r\n  { id: 'role', label: 'Role', alignRight: false },\r\n  { id: 'isVerified', label: 'Verified', alignRight: false },\r\n  { id: 'status', label: 'Status', alignRight: false },\r\n  { id: '' }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype Anonymous = Record<string | number, string>;\r\n\r\nfunction descendingComparator(a: Anonymous, b: Anonymous, orderBy: string) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order: string, orderBy: string) {\r\n  return order === 'desc'\r\n    ? (a: Anonymous, b: Anonymous) => descendingComparator(a, b, orderBy)\r\n    : (a: Anonymous, b: Anonymous) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction applySortFilter(\r\n  array: UserManager[],\r\n  comparator: (a: any, b: any) => number,\r\n  query: string\r\n) {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as const);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  if (query) {\r\n    return filter(array, (_user) => _user.name.toLowerCase().indexOf(query.toLowerCase()) !== -1);\r\n  }\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nexport default function UserList() {\r\n  const { themeStretch } = useSettings();\r\n  const theme = useTheme();\r\n  const dispatch = useDispatch();\r\n\r\n  const { userList } = useSelector((state: RootState) => state.user);\r\n  const [page, setPage] = useState(0);\r\n  const [order, setOrder] = useState<'asc' | 'desc'>('asc');\r\n  const [selected, setSelected] = useState<string[]>([]);\r\n  const [orderBy, setOrderBy] = useState('name');\r\n  const [filterName, setFilterName] = useState('');\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserList());\r\n  }, [dispatch]);\r\n\r\n  const handleRequestSort = (property: string) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (checked: boolean) => {\r\n    if (checked) {\r\n      const newSelecteds = userList.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (name: string) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected: string[] = [];\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleFilterByName = (filterName: string) => {\r\n    setFilterName(filterName);\r\n  };\r\n\r\n  const handleDeleteUser = (userId: string) => {\r\n    dispatch(deleteUser(userId));\r\n  };\r\n\r\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userList.length) : 0;\r\n\r\n  const filteredUsers = applySortFilter(userList, getComparator(order, orderBy), filterName);\r\n\r\n  const isUserNotFound = filteredUsers.length === 0;\r\n\r\n  return (\r\n    <Page title=\"User: List | Krowd\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"User List\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'User', href: PATH_DASHBOARD.user.root },\r\n            { name: 'List' }\r\n          ]}\r\n          action={\r\n            <Button\r\n              variant=\"contained\"\r\n              component={RouterLink}\r\n              to={PATH_DASHBOARD.user.newUser}\r\n              startIcon={<Icon icon={plusFill} />}\r\n            >\r\n              New User\r\n            </Button>\r\n          }\r\n        />\r\n\r\n        <Card>\r\n          <UserListToolbar\r\n            numSelected={selected.length}\r\n            filterName={filterName}\r\n            onFilterName={handleFilterByName}\r\n          />\r\n\r\n          <Scrollbar>\r\n            <TableContainer sx={{ minWidth: 800 }}>\r\n              <Table>\r\n                <UserListHead\r\n                  order={order}\r\n                  orderBy={orderBy}\r\n                  headLabel={TABLE_HEAD}\r\n                  rowCount={userList.length}\r\n                  numSelected={selected.length}\r\n                  onRequestSort={handleRequestSort}\r\n                />\r\n                <TableBody>\r\n                  {filteredUsers\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((row) => {\r\n                      const { id, name, role, status, company, avatarUrl, isVerified } = row;\r\n                      const isItemSelected = selected.indexOf(name) !== -1;\r\n\r\n                      return (\r\n                        <TableRow\r\n                          hover\r\n                          key={id}\r\n                          tabIndex={-1}\r\n                          role=\"checkbox\"\r\n                          selected={isItemSelected}\r\n                          aria-checked={isItemSelected}\r\n                        >\r\n                          <TableCell padding=\"checkbox\">\r\n                            <Checkbox checked={isItemSelected} onClick={() => handleClick(name)} />\r\n                          </TableCell>\r\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n                              <Avatar alt={name} src={avatarUrl} />\r\n                              <Typography variant=\"subtitle2\" noWrap>\r\n                                {name}\r\n                              </Typography>\r\n                            </Stack>\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{company}</TableCell>\r\n                          <TableCell align=\"left\">{role}</TableCell>\r\n                          <TableCell align=\"left\">{isVerified ? 'Yes' : 'No'}</TableCell>\r\n                          <TableCell align=\"left\">\r\n                            <Label\r\n                              variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                              color={(status === 'banned' && 'error') || 'success'}\r\n                            >\r\n                              {sentenceCase(status)}\r\n                            </Label>\r\n                          </TableCell>\r\n\r\n                          <TableCell align=\"right\">\r\n                            <UserMoreMenu onDelete={() => handleDeleteUser(id)} userName={name} />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  {emptyRows > 0 && (\r\n                    <TableRow style={{ height: 53 * emptyRows }}>\r\n                      <TableCell colSpan={6} />\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n                {isUserNotFound && (\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\r\n                        <SearchNotFound searchQuery={filterName} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                )}\r\n              </Table>\r\n            </TableContainer>\r\n          </Scrollbar>\r\n\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={userList.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            onPageChange={(e, page) => setPage(page)}\r\n            onRowsPerPageChange={(e) => handleChangeRowsPerPage}\r\n          />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentSummary.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentNewCardForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentMethods.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\payment\\PaymentBillingAddress.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserCards.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\UserProfile.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProjectOwner.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProjectMedia.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\UserNewForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProjectEntity.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceInvoice.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\KrowdNewProject.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\BlogPost.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\PackageVoucherCheckout.tsx",["2852","2853","2854"],"import { Icon } from '@iconify/react';\r\nimport { useEffect } from 'react';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Grid, Step, Stepper, Container, StepLabel, StepConnector } from '@mui/material';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getCart, createBilling } from '../../redux/slices/product';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\nimport useSettings from '../../hooks/useSettings';\r\n// @types\r\nimport { ProductState } from '../../@types/products';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport {\r\n  CheckoutPackage,\r\n  CheckoutPayment,\r\n  CheckoutOrderComplete,\r\n  CheckoutBillingAddress\r\n} from '../../components/_dashboard/e-commerce/checkout';\r\nimport KrowdPackage from 'pages/KrowdPackage';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst STEPS = ['Gói ưu đãi', 'Gói đã chọn', 'Thanh toán'];\r\n\r\nconst QontoConnector = styled(StepConnector)(({ theme }) => ({\r\n  top: 10,\r\n  left: 'calc(-50% + 20px)',\r\n  right: 'calc(50% + 20px)',\r\n  '& .MuiStepConnector-line': {\r\n    borderTopWidth: 2,\r\n    borderColor: theme.palette.divider\r\n  },\r\n  '&.Mui-active, &.Mui-completed': {\r\n    '& .MuiStepConnector-line': {\r\n      borderColor: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nfunction QontoStepIcon({ active, completed }: { active: boolean; completed: boolean }) {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        zIndex: 9,\r\n        width: 24,\r\n        height: 24,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        color: active ? 'primary.main' : 'text.disabled'\r\n      }}\r\n    >\r\n      {completed ? (\r\n        <Box\r\n          component={Icon}\r\n          icon={checkmarkFill}\r\n          sx={{ zIndex: 1, width: 20, height: 20, color: 'primary.main' }}\r\n        />\r\n      ) : (\r\n        <Box\r\n          sx={{\r\n            width: 8,\r\n            height: 8,\r\n            borderRadius: '50%',\r\n            backgroundColor: 'currentColor'\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function PackageVoucherCheckout() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { checkout } = useSelector((state: { product: ProductState }) => state.product);\r\n  const { cart, billing, activeStep } = checkout;\r\n  const isComplete = activeStep === 2;\r\n  useEffect(() => {\r\n    if (isMountedRef.current) {\r\n      dispatch(getCart(cart));\r\n    }\r\n  }, [dispatch, isMountedRef, cart]);\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 1) {\r\n      dispatch(createBilling(null));\r\n    }\r\n  }, [dispatch, activeStep]);\r\n  console.log('activeS', activeStep);\r\n  return (\r\n    <Page title=\"Gói ưu đãi | Krowd\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <Grid container sx={{ py: 10 }} justifyContent={isComplete ? 'center' : 'flex-start'}>\r\n          <Grid item xs={12} md={8} sx={{ mb: 5 }}>\r\n            <Stepper alternativeLabel activeStep={activeStep} connector={<QontoConnector />}>\r\n              {STEPS.map((label) => (\r\n                <Step key={label}>\r\n                  <StepLabel\r\n                    StepIconComponent={QontoStepIcon}\r\n                    sx={{\r\n                      '& .MuiStepLabel-label': {\r\n                        typography: 'subtitle2',\r\n                        color: 'text.disabled'\r\n                      }\r\n                    }}\r\n                  >\r\n                    {label}\r\n                  </StepLabel>\r\n                </Step>\r\n              ))}\r\n            </Stepper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {!isComplete ? (\r\n          <>\r\n            {activeStep === 0 && <CheckoutPackage />}\r\n            {activeStep === 1 && <CheckoutBillingAddress />}\r\n            {/* {activeStep === 1 && <CheckoutPackage />} */}\r\n            {/* {activeStep === 2 && <CheckoutBillingAddress />} */}\r\n            {activeStep === 2 && billing && <CheckoutPayment />}\r\n          </>\r\n        ) : (\r\n          <CheckoutOrderComplete open={isComplete} />\r\n        )}\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceProductCreate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceProductList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceProductDetails.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\EcommerceShop.tsx",["2855","2856","2857","2858","2859","2860","2861","2862"],"import { useFormik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { filter, includes, orderBy } from 'lodash';\r\n// material\r\nimport { Backdrop, Container, Typography, CircularProgress, Stack } from '@mui/material';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getProducts, filterProducts } from '../../redux/slices/product';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// utils\r\nimport fakeRequest from '../../utils/fakeRequest';\r\n// @types\r\nimport { Product, ProductState, ProductFilter } from '../../@types/products';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport {\r\n  ShopTagFiltered,\r\n  ShopProductSort,\r\n  ShopProductList,\r\n  ShopFilterSidebar\r\n} from '../../components/_dashboard/e-commerce/shop';\r\nimport CartWidget from '../../components/_dashboard/e-commerce/CartWidget';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction applyFilter(products: Product[], sortBy: string | null, filters: ProductFilter) {\r\n  // SORT BY\r\n  if (sortBy === 'featured') {\r\n    products = orderBy(products, ['sold'], ['desc']);\r\n  }\r\n  if (sortBy === 'newest') {\r\n    products = orderBy(products, ['createdAt'], ['desc']);\r\n  }\r\n  if (sortBy === 'priceDesc') {\r\n    products = orderBy(products, ['price'], ['desc']);\r\n  }\r\n  if (sortBy === 'priceAsc') {\r\n    products = orderBy(products, ['price'], ['asc']);\r\n  }\r\n  // FILTER PRODUCTS\r\n  if (filters.gender.length > 0) {\r\n    products = filter(products, (_product) => includes(filters.gender, _product.gender));\r\n  }\r\n  if (filters.category !== 'All') {\r\n    products = filter(products, (_product) => _product.category === filters.category);\r\n  }\r\n  if (filters.colors.length > 0) {\r\n    products = filter(products, (_product) =>\r\n      _product.colors.some((color) => filters.colors.includes(color))\r\n    );\r\n  }\r\n  if (filters.priceRange) {\r\n    products = filter(products, (_product) => {\r\n      if (filters.priceRange === 'below') {\r\n        return _product.price < 25;\r\n      }\r\n      if (filters.priceRange === 'between') {\r\n        return _product.price >= 25 && _product.price <= 75;\r\n      }\r\n      return _product.price > 75;\r\n    });\r\n  }\r\n  if (filters.rating) {\r\n    products = filter(products, (_product) => {\r\n      const convertRating = (value: string) => {\r\n        if (value === 'up4Star') return 4;\r\n        if (value === 'up3Star') return 3;\r\n        if (value === 'up2Star') return 2;\r\n        return 1;\r\n      };\r\n      return _product.totalRating > convertRating(filters.rating);\r\n    });\r\n  }\r\n  return products;\r\n}\r\n\r\nexport default function EcommerceShop() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n  const { products, sortBy, filters } = useSelector(\r\n    (state: { product: ProductState }) => state.product\r\n  );\r\n\r\n  const filteredProducts = applyFilter(products, sortBy, filters);\r\n\r\n  const formik = useFormik<ProductFilter>({\r\n    initialValues: {\r\n      gender: filters.gender,\r\n      category: filters.category,\r\n      colors: filters.colors,\r\n      priceRange: filters.priceRange,\r\n      rating: filters.rating\r\n    },\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n        setSubmitting(false);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { values, resetForm, handleSubmit, isSubmitting, initialValues } = formik;\r\n\r\n  const isDefault =\r\n    !values.priceRange &&\r\n    !values.rating &&\r\n    values.gender.length === 0 &&\r\n    values.colors.length === 0 &&\r\n    values.category === 'All';\r\n\r\n  useEffect(() => {\r\n    dispatch(getProducts());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(filterProducts(values));\r\n  }, [dispatch, values]);\r\n\r\n  const handleOpenFilter = () => {\r\n    setOpenFilter(true);\r\n  };\r\n\r\n  const handleCloseFilter = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    handleSubmit();\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <Page title=\"Ecommerce: Shop | Krowd\">\r\n      {values && (\r\n        <Backdrop open={isSubmitting} sx={{ zIndex: 9999 }}>\r\n          <CircularProgress />\r\n        </Backdrop>\r\n      )}\r\n\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Shop\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            {\r\n              name: 'E-Commerce',\r\n              href: PATH_DASHBOARD.eCommerce.root\r\n            },\r\n            { name: 'Shop' }\r\n          ]}\r\n        />\r\n\r\n        {!isDefault && (\r\n          <Typography gutterBottom>\r\n            <Typography component=\"span\" variant=\"subtitle1\">\r\n              {filteredProducts.length}\r\n            </Typography>\r\n            &nbsp;Products found\r\n          </Typography>\r\n        )}\r\n\r\n        {/* <Stack\r\n          direction=\"row\"\r\n          flexWrap=\"wrap-reverse\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"flex-end\"\r\n          sx={{ mb: 5 }}\r\n        >\r\n          <ShopTagFiltered\r\n            filters={filters}\r\n            formik={formik}\r\n            isShowReset={openFilter}\r\n            onResetFilter={handleResetFilter}\r\n            isDefault={isDefault}\r\n          />\r\n\r\n          <Stack direction=\"row\" spacing={1} flexShrink={0} sx={{ my: 1 }}>\r\n            <ShopFilterSidebar\r\n              formik={formik}\r\n              isOpenFilter={openFilter}\r\n              onResetFilter={handleResetFilter}\r\n              onOpenFilter={handleOpenFilter}\r\n              onCloseFilter={handleCloseFilter}\r\n            />\r\n            <ShopProductSort />\r\n          </Stack>\r\n        </Stack> */}\r\n\r\n        <ShopProductList products={filteredProducts} isLoad={!filteredProducts && !initialValues} />\r\n        <CartWidget />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralBooking.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralAnalytics.tsx",["2863","2864","2865","2866","2867","2868","2869","2870"],"// material\r\nimport { Grid, Container, Typography } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport {\r\n  AnalyticsTasks,\r\n  MembersParticipation,\r\n  TermOfProject,\r\n  MultiplierProject,\r\n  AnalyticsNewsUpdate,\r\n  SharedRevenue,\r\n  AnalyticsOrderTimeline,\r\n  AnalyticsCurrentVisits,\r\n  AnalyticsWebsiteVisits,\r\n  AnalyticsTrafficBySite,\r\n  AnalyticsCurrentSubject,\r\n  AnalyticsConversionRates\r\n} from '../../components/_dashboard/general-analytics';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function GeneralAnalytics() {\r\n  const { themeStretch } = useSettings();\r\n\r\n  return (\r\n    <Page title=\"Tổng quan ngày | Krowd\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Typography variant=\"h4\" sx={{ mb: 5 }}>\r\n          Chào mừng trở lại\r\n        </Typography>\r\n\r\n        <Grid container spacing={3}>\r\n          {/* <Grid item xs={12} sm={6} md={3}>\r\n            <SharedRevenue />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <MembersParticipation />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <MultiplierProject />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <TermOfProject />\r\n          </Grid> */}\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AnalyticsWebsiteVisits />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AnalyticsCurrentVisits />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} md={6} lg={8}>\r\n            <AnalyticsConversionRates />\r\n          </Grid> */}\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AnalyticsNewsUpdate />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AnalyticsCurrentSubject />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} md={6} lg={4}>\r\n            <AnalyticsOrderTimeline />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={4}>\r\n            <AnalyticsTrafficBySite />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={6} lg={8}>\r\n            <AnalyticsTasks />\r\n          </Grid> */}\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\WalletBanking.tsx",["2871","2872","2873"],"// material\r\nimport { Grid, Container, Stack } from '@mui/material';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport {\r\n  TempWallet,\r\n  SharedInvestmentWallet,\r\n  AdvanceWallet,\r\n  ProjectPaymentWallet,\r\n  CollectionWallet,\r\n  BankingRecentTransitions\r\n} from '../../components/_dashboard/general-banking';\r\nimport { Wallet } from '../../@types/krowd/wallet';\r\nimport { RootState, useSelector } from 'redux/store';\r\nimport useAuth from 'hooks/useAuth';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function WalletBanking({ wallet }: { wallet: Wallet }) {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n  const { UserDetailState } = useSelector((state: RootState) => state.userKrowd);\r\n  const { UserDetail, isLoading } = UserDetailState;\r\n\r\n  return (\r\n    <Page title=\"Ví của bạn | Krowd\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack direction={{ xs: 'row', sm: 'row' }} sx={{ mb: 3 }} spacing={3}>\r\n              <TempWallet wallet={wallet} />\r\n              <SharedInvestmentWallet wallet={wallet} />\r\n            </Stack>\r\n            <Stack direction={{ xs: 'row', sm: 'row' }} spacing={1}>\r\n              <AdvanceWallet wallet={wallet} />\r\n              <ProjectPaymentWallet wallet={wallet} />\r\n              <CollectionWallet wallet={wallet} />\r\n            </Stack>\r\n          </Grid>\r\n          <Grid item xs={12} md={12}>\r\n            <Stack spacing={3}>\r\n              <BankingRecentTransitions />\r\n            </Stack>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralEcommerce.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\ProjectBillDailyReport.tsx",["2874"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\TermOfService.tsx",["2875","2876","2877","2878","2879","2880","2881","2882"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function TermOfService() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Những gì bạn nhận được khi bạn đầu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Những gì bạn nhận được khi bạn đầu tư\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khi bạn đầu tư thông qua hệ sinh thái của Krowd, bạn cung cấp vốn thông qua việc mua gói\r\n            đầu tư để đổi lấy những ưu đãi, phần lợi tức từ dự án của Krowd. Lãi suất tài chính đó\r\n            bị ràng buộc bởi một thỏa thuận giữa bạn và dự án huy động tiền của Krowd. Thỏa thuận\r\n            này được ghi lại bằng hợp đồng giữa bạn và dự án và nó này là một bảo mật chỉ bạn và\r\n            Krowd có thể xem.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Các gói đầu tư vào dự án của Krowd sẽ đưa cho bạn phần lợi tức thông qua:\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/revenue.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Chia sẻ doanh thu</Typography>\r\n                <ContentStyle>\r\n                  Chia sẻ doanh thu là một loại hình đầu tư tư nhân mà bạn được chia sẻ phần doanh\r\n                  thu của dự án mà không cần quyền sở hữu và từ đó kiếm thu nhập thụ động.\r\n                </ContentStyle>\r\n                <ContentStyle>\r\n                  Ghi chú chia sẻ doanh thu có thể cung cấp các khoản thanh toán dựa trên luồng\r\n                  doanh thu của dự án trền nền tảng Krowd, lên đến một mức tối đa nhất định.\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/voucher.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Ưu đãi của từng gói đầu tư dự án (Voucher) </Typography>\r\n                <ContentStyle>\r\n                  Các gói đầu tư của từng dự án khác nhau sẽ cho bạn các ưu đãi khác nhau khi sử\r\n                  dụng dịch vụ tại các cơ sở kinh doanh của dự án. Ví dụ như: phiếu giảm giá, gói sử\r\n                  dụng dịch vụ, thẻ thành viên,...\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\Communication.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\PrivaryPolicy.tsx",["2883","2884","2885","2886","2887","2888","2889","2890"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function PrivaryPolicy() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Những gì bạn nhận được khi bạn đầu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Những gì bạn nhận được khi bạn đầu tư\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khi bạn đầu tư thông qua hệ sinh thái của Krowd, bạn cung cấp vốn thông qua việc mua gói\r\n            đầu tư để đổi lấy những ưu đãi, phần lợi tức từ dự án của Krowd. Lãi suất tài chính đó\r\n            bị ràng buộc bởi một thỏa thuận giữa bạn và dự án huy động tiền của Krowd. Thỏa thuận\r\n            này được ghi lại bằng hợp đồng giữa bạn và dự án và nó này là một bảo mật chỉ bạn và\r\n            Krowd có thể xem.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Các gói đầu tư vào dự án của Krowd sẽ đưa cho bạn phần lợi tức thông qua:\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/revenue.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Chia sẻ doanh thu</Typography>\r\n                <ContentStyle>\r\n                  Chia sẻ doanh thu là một loại hình đầu tư tư nhân mà bạn được chia sẻ phần doanh\r\n                  thu của dự án mà không cần quyền sở hữu và từ đó kiếm thu nhập thụ động.\r\n                </ContentStyle>\r\n                <ContentStyle>\r\n                  Ghi chú chia sẻ doanh thu có thể cung cấp các khoản thanh toán dựa trên luồng\r\n                  doanh thu của dự án trền nền tảng Krowd, lên đến một mức tối đa nhất định.\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/voucher.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Ưu đãi của từng gói đầu tư dự án (Voucher) </Typography>\r\n                <ContentStyle>\r\n                  Các gói đầu tư của từng dự án khác nhau sẽ cho bạn các ưu đãi khác nhau khi sử\r\n                  dụng dịch vụ tại các cơ sở kinh doanh của dự án. Ví dụ như: phiếu giảm giá, gói sử\r\n                  dụng dịch vụ, thẻ thành viên,...\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToContact.tsx",["2891","2892","2893","2894","2895","2896","2897","2898"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function HowToContact() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Những gì bạn nhận được khi bạn đầu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Những gì bạn nhận được khi bạn đầu tư\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khi bạn đầu tư thông qua hệ sinh thái của Krowd, bạn cung cấp vốn thông qua việc mua gói\r\n            đầu tư để đổi lấy những ưu đãi, phần lợi tức từ dự án của Krowd. Lãi suất tài chính đó\r\n            bị ràng buộc bởi một thỏa thuận giữa bạn và dự án huy động tiền của Krowd. Thỏa thuận\r\n            này được ghi lại bằng hợp đồng giữa bạn và dự án và nó này là một bảo mật chỉ bạn và\r\n            Krowd có thể xem.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Các gói đầu tư vào dự án của Krowd sẽ đưa cho bạn phần lợi tức thông qua:\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/revenue.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Chia sẻ doanh thu</Typography>\r\n                <ContentStyle>\r\n                  Chia sẻ doanh thu là một loại hình đầu tư tư nhân mà bạn được chia sẻ phần doanh\r\n                  thu của dự án mà không cần quyền sở hữu và từ đó kiếm thu nhập thụ động.\r\n                </ContentStyle>\r\n                <ContentStyle>\r\n                  Ghi chú chia sẻ doanh thu có thể cung cấp các khoản thanh toán dựa trên luồng\r\n                  doanh thu của dự án trền nền tảng Krowd, lên đến một mức tối đa nhất định.\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/voucher.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Ưu đãi của từng gói đầu tư dự án (Voucher) </Typography>\r\n                <ContentStyle>\r\n                  Các gói đầu tư của từng dự án khác nhau sẽ cho bạn các ưu đãi khác nhau khi sử\r\n                  dụng dịch vụ tại các cơ sở kinh doanh của dự án. Ví dụ như: phiếu giảm giá, gói sử\r\n                  dụng dịch vụ, thẻ thành viên,...\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToJoinKrowdEco.tsx",["2899","2900","2901","2902","2903","2904","2905","2906"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function HowToJoinKrowdEco() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Những gì bạn nhận được khi bạn đầu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Những gì bạn nhận được khi bạn đầu tư\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khi bạn đầu tư thông qua hệ sinh thái của Krowd, bạn cung cấp vốn thông qua việc mua gói\r\n            đầu tư để đổi lấy những ưu đãi, phần lợi tức từ dự án của Krowd. Lãi suất tài chính đó\r\n            bị ràng buộc bởi một thỏa thuận giữa bạn và dự án huy động tiền của Krowd. Thỏa thuận\r\n            này được ghi lại bằng hợp đồng giữa bạn và dự án và nó này là một bảo mật chỉ bạn và\r\n            Krowd có thể xem.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Các gói đầu tư vào dự án của Krowd sẽ đưa cho bạn phần lợi tức thông qua:\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/revenue.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Chia sẻ doanh thu</Typography>\r\n                <ContentStyle>\r\n                  Chia sẻ doanh thu là một loại hình đầu tư tư nhân mà bạn được chia sẻ phần doanh\r\n                  thu của dự án mà không cần quyền sở hữu và từ đó kiếm thu nhập thụ động.\r\n                </ContentStyle>\r\n                <ContentStyle>\r\n                  Ghi chú chia sẻ doanh thu có thể cung cấp các khoản thanh toán dựa trên luồng\r\n                  doanh thu của dự án trền nền tảng Krowd, lên đến một mức tối đa nhất định.\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <ImageStyle src=\"/static/icons/navbar/voucher.png\" />\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Ưu đãi của từng gói đầu tư dự án (Voucher) </Typography>\r\n                <ContentStyle>\r\n                  Các gói đầu tư của từng dự án khác nhau sẽ cho bạn các ưu đãi khác nhau khi sử\r\n                  dụng dịch vụ tại các cơ sở kinh doanh của dự án. Ví dụ như: phiếu giảm giá, gói sử\r\n                  dụng dịch vụ, thẻ thành viên,...\r\n                </ContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToCallInvest.tsx",["2907","2908","2909","2910","2911","2912","2913","2914","2915","2916"],"// material\r\nimport { Box, Container, Divider, Grid, Link, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport useLocales from 'hooks/useLocales';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst GrayContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  color: 'gray'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\nconst SubTitle = styled(Typography)(() => ({\r\n  fontSize: '30px',\r\n  color: 'gray'\r\n}));\r\nconst StepStyle = styled(Typography)(() => ({\r\n  fontSize: '80px',\r\n  color: '#C7E4FF'\r\n}));\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function HowToCallInvest() {\r\n  const { themeStretch } = useSettings();\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <Page title=\"Làm thể nào để trở thành chủ dự án của Krowd | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Làm thể nào để trở thành chủ dự án của Krowd\r\n          </Typography>\r\n          <ContentStyle>\r\n            Hiện tại Krowd cung cấp 2 phương thức để trở thành chủ dự án của Krowd: Trở thành quản\r\n            lý dự án dưới danh nghĩa là nhân viên của Krowd và trở thành chủ dự án hợp tác với\r\n            Krowd.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }} my={1}>\r\n            Phương thức 1: Quản lý dự án dưới danh nghĩa là nhân viên của Krowd.\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>1</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Chuẩn bị hồ sơ ứng tuyển</Typography>\r\n                <GrayContentStyle>\r\n                  Đây là bước sơ khai khi bạn muốn ứng tuyển vào Krowd, bạn cần chuẩn bị một bộ CV\r\n                  và các giấy tờ liên quan (CMND/CCCD, bằng tốt nghiệp đại học/cao đẳng, các chứng\r\n                  chỉ chứng minh năng lực nghiệp vụ và quản lý,...)\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>2</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Ứng tuyển vào công ty Krowd</Typography>\r\n                <GrayContentStyle my={1}>\r\n                  Gửi CV và các giấy tờ đã chuẩn bị đến email{' '}\r\n                  <Link href={`mailto:krowd.hr@gmail.com`}>krowd.hr@gmail.com</Link> để tham gia ứng\r\n                  tuyển.\r\n                </GrayContentStyle>\r\n                <GrayContentStyle my={1}>\r\n                  Hoặc trực tiếp đến phòng nhân sự của công ty địa chỉ: Văn phòng 1714, tòa S105,\r\n                  chung cư Vinhome GrandPark, đường Nguyễn Xiển, phường Long Thạnh Mỹ, TP.Thủ Đức,\r\n                  TPHCM.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>3</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Được phân công vào dự án của Krowd</Typography>\r\n                <GrayContentStyle>\r\n                  Sau giải đoạn phỏng vấn và được thành công trở thành nhân viên của công ty, bạn sẽ\r\n                  được phân công vào các dự án có sẵn của Krowd. Bạn sẽ bắt đầu công việc phân tích\r\n                  thị trưởng, đưa ra các ưu điểm, nhược điểm của dự án mà bạn sẽ làm quản lý. Cung\r\n                  cấp các thông tin cần thiết cho dự án bạn được giao lên nền tảng Krowd.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>4</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Trở thành quản lý dự án</Typography>\r\n                <GrayContentStyle>\r\n                  Sau khi dự án của bạn vượt qua giai đoạn thẩm định của Krowd, chúc mừng bạn đã\r\n                  chính thức trở thành quản lý dự án đó.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }} my={1}>\r\n            Phương thức 2: Chủ dự án hợp tác với Krowd.\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>1</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Chuẩn bị dự án mà bạn có muốn triển khai</Typography>\r\n                <GrayContentStyle>\r\n                  Đây là bước sơ khai để trở thành chủ dự án hợp tác với Krowd, thương hiệu của dự\r\n                  án mà bạn muốn triển khai phải trực thuộc vào hệ sinh thái của Krowd (\r\n                  <Link>KrowdEco</Link>).\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>2</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Liên hệ với Krowd</Typography>\r\n                <GrayContentStyle my={1}>\r\n                  Gửi hồ sơ cá nhân và các giấy tờ liên quan đến bạn (CMND/CCCD, bằng tốt nghiệp đại\r\n                  học/cao đẳng, các chứng chỉ chứng minh năng lực nghiệp vụ và quản lý,...) đã chuẩn\r\n                  bị đến{' '}\r\n                  <Link href={`mailto:krowd.co-operate@gmail.com`}>krowd.co-operate@gmail.com</Link>{' '}\r\n                  để được hỗ trợ.\r\n                </GrayContentStyle>\r\n                <GrayContentStyle my={1}>\r\n                  Hoặc trực tiếp đến phòng hợp tác của công ty địa chỉ: Văn phòng 1714, tòa S105,\r\n                  chung cư Vinhome GrandPark, đường Nguyễn Xiển, phường Long Thạnh Mỹ, TP.Thủ Đức,\r\n                  TPHCM.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>3</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Ký hợp đồng</Typography>\r\n                <GrayContentStyle>\r\n                  Bên Krowd sẽ có nhân viên thẩm định đến gặp trực tiếp bạn để trao đổi về các quy\r\n                  trình hợp tác giữa bạn và Krowd. Sau đó, bạn sẽ phải ký một hợp đồng hợp tác giữa\r\n                  hai bên.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>4</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Được cung cấp tài khoản Krowd Business</Typography>\r\n                <GrayContentStyle>\r\n                  Sau giai đoạn ký hợp đồng hợp tác, bạn sẽ được Krowd cung cấp một tài khoản Krowd\r\n                  Business để đăng nhập vào trang{' '}\r\n                  <Link href={'https://business.krowd.vn/'}>business.krowd.vn</Link>, bạn sẽ cập\r\n                  nhật một số thông tin cá nhân trên trang này.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>5</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Tạo thông tin dự án</Typography>\r\n                <GrayContentStyle>\r\n                  Sau đó, bạn sẽ cập nhật các thông tin cần thiết cho dự án mà bạn muốn triển khai\r\n                  lên nền tảng Krowd.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ py: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>6</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Bắt đầu kêu gọi và trở thành chủ dự án</Typography>\r\n                <GrayContentStyle>\r\n                  Sau khi đăng dự án và vượt qua giai đoạn thẩm định dự án của Krowd, chúc mừng bạn\r\n                  đã chính thức trở thành chủ dự án đó.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowToInvest.tsx",["2917","2918","2919","2920","2921","2922","2923"],"// material\r\nimport { Box, Container, Divider, Grid, Link, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { PATH_AUTH, PATH_DASHBOARD, PATH_DASHBOARD_LEARN, PATH_PAGE } from 'routes/paths';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst GrayContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  color: 'gray'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\nconst SubTitle = styled(Typography)(() => ({\r\n  fontSize: '30px',\r\n  color: 'gray'\r\n}));\r\nconst StepStyle = styled(Typography)(() => ({\r\n  fontSize: '80px',\r\n  color: '#C7E4FF'\r\n}));\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function HowToInvest() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Làm thế nào để bắt đầu đầu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Làm thế nào để bắt đầu đầu tư\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography sx={{ py: 1 }}>\r\n            <SubTitle>Bắt đầu đầu tư nào !!!</SubTitle>\r\n          </Typography>\r\n          <Grid container spacing={2} sx={{ my: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>1</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>\r\n                  <Link href={PATH_AUTH.login} underline=\"none\">\r\n                    Đăng nhập\r\n                  </Link>{' '}\r\n                  vào Krowd\r\n                </Typography>\r\n                <GrayContentStyle>\r\n                  Hiện tại Krowd đang hỗ trợ việc đăng nhập bằng Google email, hãy chắc chắn rằng\r\n                  bạn sở hữu Google email trước khi đăng nhập vào Krowd nhé. Việc này chỉ mất một ít\r\n                  thời gian của bạn thôi.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ my: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>2</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>\r\n                  Cập nhật{' '}\r\n                  <Link href={PATH_DASHBOARD.user.account} underline=\"none\">\r\n                    thông tin cá nhân\r\n                  </Link>\r\n                </Typography>\r\n                <GrayContentStyle>\r\n                  Krowd được yêu cầu bởi các quy định của Việt Nam để xác minh danh tính của tất cả\r\n                  các nhà đầu tư.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ my: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>3</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>\r\n                  <Link href={PATH_PAGE.pageTopUp} underline=\"none\">\r\n                    Nạp tiền\r\n                  </Link>{' '}\r\n                  vào ví đầu tư\r\n                </Typography>\r\n                <GrayContentStyle>\r\n                  Hầu hết các khoản đầu tư hiện tại vào Krowd có thể được thực hiện qua ví Momo.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ my: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>4</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>\r\n                  <Link href={PATH_PAGE.project} underline=\"none\">\r\n                    Tìm dự án\r\n                  </Link>{' '}\r\n                  mình quan tâm\r\n                </Typography>\r\n                <GrayContentStyle>\r\n                  Ở đây Krowd cung cấp cho bạn tất cả các dự án đang trong giai đoạn gọi vốn đầu tư,\r\n                  bạn có thể nhấp vào từng dự án để xem ghi chú chia sẻ doanh thu, các gói đầu tư,\r\n                  các ưu đãi của dự án, thông tin của chủ dự án và các thông tin liên quan khác. Sau\r\n                  đó chọn gói đầu tư phù hợp với mình, yêu cầu thanh toán, chờ xác nhận thành công.\r\n                  Thế là chúc mừng bạn đã chính thức trở thành một nhà đầu tư của Krowd rồi đó.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container spacing={2} sx={{ my: 2 }}>\r\n            <Grid item md={1}>\r\n              <BorderBoxStyle>\r\n                <StepStyle>5</StepStyle>\r\n              </BorderBoxStyle>\r\n            </Grid>\r\n            <Grid item md={10}>\r\n              <Box mx={5}>\r\n                <Typography variant={'h4'}>Xác nhận thông tin hợp đồng</Typography>\r\n                <GrayContentStyle>\r\n                  Đây là bước cuối cùng trong giai đoạn đầu tư, bạn sẽ nhận được một hợp đồng từ dự\r\n                  án gửi về email của bạn. Bạn nên kiểm tra kĩ các thông tin trong hợp đồng. Nếu có\r\n                  sai sót bạn nên liên hệ ngay với Krowd để được sửa chữa hoặc bạn có thể hủy giao\r\n                  dịch trong vòng 24h.\r\n                </GrayContentStyle>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Box my={5} p={2} bgcolor={'#FFFAE9'} height={80} width=\"90%\">\r\n          <Typography fontWeight={'bold'}>Câu hỏi ?</Typography>\r\n          <ContentStyle>\r\n            Mọi câu hỏi thắc mắc vui lòng liên hệ với Krowd qua email{' '}\r\n            <Link href={`mailto:krowd.support@gmail.com`}>krowd.support@gmail.com</Link>{' '}\r\n          </ContentStyle>\r\n        </Box>\r\n        <Box p={2}>\r\n          <ContentStyle my={2}>\r\n            <BoldStyle>Ghi nhớ:</BoldStyle> Đầu tư là rủi ro! Mặc dù một số khoản đầu tư thành công\r\n            và có thể mang lại lợi ích đáng kể cho các nhà đầu tư, nhưng hầu hết sẽ thất bại. Đọc về\r\n            rủi ro đầu tư <Link href={PATH_DASHBOARD_LEARN.learn.risk_invested}>tại đây</Link>.\r\n          </ContentStyle>\r\n          <ContentStyle my={2}>\r\n            <BoldStyle>Không có gì được đảm bảo.</BoldStyle> Bạn không có nhiều quyền với tư cách là\r\n            nhà đầu tư. Hiệu suất, dự báo hoặc kế hoạch trong quá khứ không dự đoán thành công trong\r\n            tương lai.\r\n          </ContentStyle>\r\n          <ContentStyle my={2}>\r\n            <BoldStyle>Cuối cùng nhưng không kém phần quan trọng</BoldStyle>, hãy đầu tư vào tương\r\n            lai mà bạn tin tưởng. Hầu hết các khoản đầu tư vào Krowd đều cho phép bạn tham gia sớm,\r\n            sở hữu gói đầu tư và đó có thể là câu chuyện bạn kể cho những đứa trẻ tương lai của mình\r\n            vào một ngày nào đó.\r\n          </ContentStyle>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\HowReturnWork.tsx",["2924","2925","2926","2927","2928","2929","2930","2931","2932","2933"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nimport useLocales from 'hooks/useLocales';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function HowReturnWork() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <Page title=\"Quy trình thanh khoản | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_How_Return_Work.Heading')}\r\n          </Typography>\r\n          <ContentStyle my={2}>{t('Learn_Investor_How_Return_Work.Definition')}</ContentStyle>\r\n          <ContentStyle my={2}>\r\n            {t('Learn_Investor_How_Return_Work.Definition_Text_2')}\r\n          </ContentStyle>\r\n          <ContentStyle my={2}>\r\n            {t('Learn_Investor_How_Return_Work.Definition_Text_3')}\r\n          </ContentStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskManager.tsx",["2934","2935","2936","2937","2938","2939","2940","2941","2942","2943"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function RiskManager() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Rủi ro khi đâu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Rủi ro khi đầu tư\r\n          </Typography>\r\n          <ContentStyle>\r\n            Chúng tôi đã chuẩn bị phần sau dưới dạng một đoạn trích từ các tiết lộ rủi ro đầy đủ của\r\n            chúng tôi để bạn tiện theo dõi. Các khoản đầu tư vào Krowd vốn có tính rủi ro. Bạn nên\r\n            tự nghiên cứu và xem xét kỹ lưỡng tất cả các yếu tố rủi ro được tiết lộ trước khi đưa ra\r\n            quyết định đầu tư.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tính thất bại của dự án\r\n          </Typography>\r\n          <ContentStyle>\r\n            Các khoản đầu tư vào các dự án mới thành lập đều mang tính rủi ro cao và những dự án này\r\n            có thể thất bại. Không giống như khoản đầu tư vào một doanh nghiệp đã trưởng thành, nơi\r\n            có hồ sơ về doanh thu và thu nhập, thành công của một dự án mới thành lập thường dựa vào\r\n            các yếu tố tài chính, địa lý, con người và môi trường xung quanh dự án đó. Bạn nên chuẩn\r\n            bị để mất toàn bộ khoản đầu tư của mình.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tính thanh khoản của dự án\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khả năng thanh toán lại khoản đầu tư của bạn trong những kỳ đầu tiên sẽ bị hạn chế với\r\n            các lý do khác nhau. Bạn có thể phải neo khoản đầu tư của mình trong một khoảng thời\r\n            gian dài. Không giống như đầu tư vào các dự án được niêm yết trên sàn giao dịch chứng\r\n            khoán, tại Krowd không hỗ trợ hình thức bán lại khoản đầu tư của mình cho người khác để\r\n            thu hồi vốn đầu tư ban đầu. Song, nếu bạn thực hiện giao dịch đó ngoài nền tảng của\r\n            Krowd, mọi rủi ro và rắc rối về sau không nằm trong sự quản lý của Krowd.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tính sở hữu và biểu quyết về dự án\r\n          </Typography>\r\n          <ContentStyle>\r\n            Các dự án đầu tư được lưu trữ trên Krowd được Krowd sở hữu sẽ được tổ chức thông qua quy\r\n            trình của Krowd, không cung cấp quyền biểu quyết cho các nhà đầu tư. Cách thức xây dựng\r\n            và tổ chức của dự án sẽ do bên quản lý dự án của Krowd quyết định toàn bộ. Nhà đầu tư sẽ\r\n            nhận được các thông báo thường nhật và báo cáo hằng kỳ về tình hình dự án và nhà đầu tư\r\n            có quyền góp ý về dự án thông qua kênh truyền thông của Krowd. Song quyền quyết định vẫn\r\n            thuộc về quản lý dự án đó.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Hạn chế hủy bỏ\r\n          </Typography>\r\n          <ContentStyle>\r\n            Theo quy định huy động vốn cộng đồng và quy định của Krowd, sau khi bạn thực hiện việc\r\n            mua gói đầu tư, bạn có thể hủy giao dịch bất kỳ lúc nào và vì bất kỳ lý do gì trong vòng\r\n            24h sau khi thực hiện giao dịch. Sau khoản thời gian này, mọi giao dịch được coi là đã\r\n            xác nhận, các khiếu nại của bạn về sau Krowd sẽ dựa theo quy định này để xử lý.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tiết lộ hạn chế\r\n          </Typography>\r\n          <ContentStyle>\r\n            Dự án phải tiết lộ thông tin về thông tin người quản lý, kế hoạch kinh doanh, đợt kêu\r\n            gọi, đợt thanh toán và việc sử dụng dự kiến số tiền thu được, cùng những thứ khác. Điều\r\n            quan trọng cần lưu ý là một dự án ở giai đoạn đầu có thể chỉ cung cấp thông tin hạn chế\r\n            về kế hoạch kinh doanh và hoạt động của mình vì công ty vẫn đang phát triển hoạt động\r\n            của mình. Tùy thuộc vào cách thức kêu gọi, công ty cũng có thể không có nghĩa vụ phải\r\n            nộp thông tin liên quan đến hoạt động kinh doanh của mình hàng năm, bao gồm cả báo cáo\r\n            tài chính.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Đầu tư vào nhân sự\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khoản đầu tư vào một dự án mới thành lập cũng là khoản đầu tư vào (các) doanh nhân, nhà\r\n            quản lý sáng lập và / hoặc ban quản lý của dự án. Các doanh nhân và nhà quản lý sáng lập\r\n            sẽ có trình độ chuyên nghiệp và trình độ quản lý khác nhau. Khả năng thực hiện kế hoạch\r\n            kinh doanh là một yếu tố quan trọng để xác định liệu hoạt động kinh doanh có khả thi và\r\n            thành công hay không. Các nhà đầu tư nên xem xét cẩn thận bất kỳ thông tin tiết lộ nào\r\n            liên quan đến việc sử dụng tiền của dự án.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Khả năng xảy ra gian lận\r\n          </Typography>\r\n          <ContentStyle>\r\n            Có một rủi ro rằng một dự án kêu gọi vốn gian lận. Krowd sẽ có những đợt kiểm tra thường\r\n            kỳ để giảm nguy cơ này một cách tốt nhất có thể. Tuy nhiên, không có cách nào để kiểm\r\n            soát hành động của một dự án sau khi đợt chào bán kết thúc một cách triệt để.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Thiếu sự hướng dẫn nghiệp vụ\r\n          </Typography>\r\n          <ContentStyle>\r\n            Nhiều dự án thành công một phần cho rằng thành công ban đầu của họ là do sự hướng dẫn\r\n            của các nhà quản trị chuyên nghiệp ở giai đoạn đầu (ví dụ: các nhà đầu tư thiên thần và\r\n            các công ty đầu tư mạo hiểm). Những nhà đầu tư này thường thương lượng để có được ghế\r\n            trong ban giám đốc của công ty và đóng vai trò quan trọng trong việc cung cấp thêm nguồn\r\n            lực, địa chỉ liên hệ và kinh nghiệm trong việc hỗ trợ các công ty ở giai đoạn đầu thực\r\n            hiện kế hoạch kinh doanh của họ. Một công ty ở giai đoạn đầu được tài trợ chủ yếu thông\r\n            qua huy động vốn cộng đồng có thể không có được lợi ích từ các nhà đầu tư chuyên nghiệp\r\n            như vậy.\r\n          </ContentStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskForField.tsx",["2944","2945","2946","2947","2948","2949","2950","2951","2952","2953"],"// material\r\nimport {\r\n  Box,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItemText,\r\n  Stack,\r\n  styled,\r\n  Typography\r\n} from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function RiskForField() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Rủi ro khi đâu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Rủi ro khi đầu tư từng lĩnh vực khác nhau\r\n          </Typography>\r\n          <ContentStyle>\r\n            Krowd cung cấp nền tảng đầu tư cho nhiều lĩnh vực kinh doanh khác nhau. Khi tham gia vào\r\n            đầu tư, bạn nên có một sự am hiểu nhất định về lĩnh vực đó. Ở đây chúng tôi liệt kê ra\r\n            một số rủi ro cho từng lĩnh vực đầu tư để bạn có thể tham khảo trong quá trình đầu tư\r\n            tiếp theo.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            1. Lĩnh vực ăn uống\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khi bắt đầu thực hiện dự án trong lĩnh vực ăn uống, có thể do chưa có nhiều kinh nghiệm\r\n            và trang bị đầy đủ kiến thức, bên chủ dự án sẽ dễ “sa chân” vào những rủi ro, tổn thất\r\n            không đáng có.\r\n            <List dense sx={{ lineHeight: 2 }}>\r\n              <ListItemText disableTypography>\r\n                - Không bắt kịp xu hướng, thị hiếu khách\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Xác định sai khách hàng mục tiêu</ListItemText>\r\n              <ListItemText disableTypography>- Vấn đề an toàn thực phẩm</ListItemText>\r\n              <ListItemText disableTypography>\r\n                - Giá cả không hợp lý so với mặt bằng chung\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Trộm cắp, lừa đảo</ListItemText>\r\n              <ListItemText disableTypography>- Thực phẩm dễ hư hỏng</ListItemText>\r\n              <ListItemText disableTypography>- Thiệt hại do cháy nổ</ListItemText>\r\n            </List>\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            2. Lĩnh vực giáo dục\r\n          </Typography>\r\n          <ContentStyle>\r\n            Kinh doanh theo mô hình nhượng quyền có rất nhiều thuận lợi nhưng rủi ro không hề ít.\r\n            Nhượng quyền giáo dục lại càng nhiều rủi ro hơn do đây là một lĩnh vực khá mới và nó\r\n            cũng cần nhiều yếu tố cấu thành để có thể thành công.\r\n            <List dense sx={{ lineHeight: 2 }}>\r\n              <ListItemText disableTypography>\r\n                - Khó khăn trong việc xây dựng giáo trình\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Gây nên sự xung đột văn hóa</ListItemText>\r\n              <ListItemText disableTypography>\r\n                - Cạnh tranh mạnh trong tất cả phân khúc\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Rủi ro về chính sách pháp luật</ListItemText>\r\n              <ListItemText disableTypography>- Cạnh tranh với giáo dục công lập</ListItemText>\r\n              <ListItemText disableTypography>- Dân số trẻ ngày càng giảm sút</ListItemText>\r\n              <ListItemText disableTypography>- Khan hiếm giáo viên có năng lực</ListItemText>\r\n            </List>\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            3. Lĩnh vực làm đẹp\r\n          </Typography>\r\n          <ContentStyle>\r\n            Làm đẹp, thẩm mỹ là một ngành có ềm năng phát triển rất mạnh mẽ, thế nhưng kèm theo đó\r\n            cũng là những rủi ro lớn, khiến nhà quản lý dễ mắc phải sai lầm ngay từ những bước đi\r\n            đầu tiên.\r\n            <List dense sx={{ lineHeight: 2 }}>\r\n              <ListItemText disableTypography>\r\n                - Khó khăn trong quản lý doanh thu và chi phí\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Quảng cáo marketing không hiệu quả</ListItemText>\r\n              <ListItemText disableTypography>- Tuyển chọn nhân viên thiếu kỹ năng</ListItemText>\r\n              <ListItemText disableTypography>- Thiết kế không gian chưa phù hợp</ListItemText>\r\n              <ListItemText disableTypography>- Lựa chọn mỹ phẩm kém chất lượng</ListItemText>\r\n              <ListItemText disableTypography>- Không có khả năng xử lý khủng hoảng</ListItemText>\r\n            </List>\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            4. Lĩnh vực quầy tiện ích\r\n          </Typography>\r\n          <ContentStyle>\r\n            Trong kinh doanh sẽ luôn có rủi ro, đặc biệt với ngành hàng bách hóa, càng nhiều mặt\r\n            hàng thì càng nhiều rủi ro và nhiều vấn đề cần phải giải quyết.\r\n            <List dense sx={{ lineHeight: 2 }}>\r\n              <ListItemText disableTypography>\r\n                - Lừa đảo trưng bày sản phẩm giả mạo, kém chất lượng\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Lượng hàng tồn kho lớn</ListItemText>\r\n              <ListItemText disableTypography>\r\n                - Nhân viên sale tăng giá và ngắt cắt chương trình công ty\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Nhân viên giao hàng giao thiếu hàng</ListItemText>\r\n              <ListItemText disableTypography>- Dễ mất trộm hàng hóa cửa hàng</ListItemText>\r\n              <ListItemText disableTypography>\r\n                - Khó khăn trong việc quản lý hàng hóa và các chi phí\r\n              </ListItemText>\r\n            </List>\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            1. Lĩnh vực ăn uống\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khi bắt đầu thực hiện dự án trong lĩnh vực ăn uống, có thể do chưa có nhiều kinh nghiệm\r\n            và trang bị đầy đủ kiến thức, bên chủ dự án sẽ dễ “sa chân” vào những rủi ro, tổn thất\r\n            không đáng có.\r\n            <List dense sx={{ lineHeight: 2 }}>\r\n              <ListItemText disableTypography>\r\n                - Không bắt kịp xu hướng, thị hiếu khách\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Xác định sai khách hàng mục tiêu</ListItemText>\r\n              <ListItemText disableTypography>- Vấn đề an toàn thực phẩm</ListItemText>\r\n              <ListItemText disableTypography>\r\n                - Giá cả không hợp lý so với mặt bằng chung\r\n              </ListItemText>\r\n              <ListItemText disableTypography>- Trộm cắp, lừa đảo</ListItemText>\r\n              <ListItemText disableTypography>- Thực phẩm dễ hư hỏng</ListItemText>\r\n              <ListItemText disableTypography>- Thiệt hại do cháy nổ</ListItemText>\r\n            </List>\r\n          </ContentStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskFranchise.tsx",["2954","2955","2956","2957","2958","2959","2960","2961","2962","2963"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport React from 'react';\r\nimport Page from '../../components/Page';\r\nimport { Link } from 'react-router-dom';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nconst SubContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px',\r\n  paddingLeft: 20\r\n}));\r\n\r\nconst BoldStyle = styled('span')(() => ({\r\n  fontWeight: 'bold'\r\n}));\r\nconst ItalicStyle = styled('span')(() => ({\r\n  fontStyle: 'italic'\r\n}));\r\nconst BorderBoxStyle = styled(Box)(() => ({\r\n  width: 100,\r\n  height: 100,\r\n  backgroundColor: '#14B7CC',\r\n  borderRadius: 25,\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\nconst ImageStyle = styled('img')(() => ({\r\n  width: 80,\r\n  height: 80\r\n}));\r\nexport default function RiskFranchise() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Page title=\"Rủi ro khi đâu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            Rủi ro khi nhượng quyền thương hiệu\r\n          </Typography>\r\n          <ContentStyle>\r\n            Chúng tôi đã chuẩn bị phần sau dưới dạng một đoạn trích từ các tiết lộ rủi ro đầy đủ của\r\n            chúng tôi để bạn tiện theo dõi. Các khoản đầu tư vào Krowd vốn có tính rủi ro. Bạn nên\r\n            tự nghiên cứu và xem xét kỹ lưỡng tất cả các yếu tố rủi ro được tiết lộ trước khi đưa ra\r\n            quyết định đầu tư.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tính thất bại của dự án\r\n          </Typography>\r\n          <ContentStyle>\r\n            Các khoản đầu tư vào các dự án mới thành lập đều mang tính rủi ro cao và những dự án này\r\n            có thể thất bại. Không giống như khoản đầu tư vào một doanh nghiệp đã trưởng thành, nơi\r\n            có hồ sơ về doanh thu và thu nhập, thành công của một dự án mới thành lập thường dựa vào\r\n            các yếu tố tài chính, địa lý, con người và môi trường xung quanh dự án đó. Bạn nên chuẩn\r\n            bị để mất toàn bộ khoản đầu tư của mình.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tính thanh khoản của dự án\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khả năng thanh toán lại khoản đầu tư của bạn trong những kỳ đầu tiên sẽ bị hạn chế với\r\n            các lý do khác nhau. Bạn có thể phải neo khoản đầu tư của mình trong một khoảng thời\r\n            gian dài. Không giống như đầu tư vào các dự án được niêm yết trên sàn giao dịch chứng\r\n            khoán, tại Krowd không hỗ trợ hình thức bán lại khoản đầu tư của mình cho người khác để\r\n            thu hồi vốn đầu tư ban đầu. Song, nếu bạn thực hiện giao dịch đó ngoài nền tảng của\r\n            Krowd, mọi rủi ro và rắc rối về sau không nằm trong sự quản lý của Krowd.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tính sở hữu và biểu quyết về dự án\r\n          </Typography>\r\n          <ContentStyle>\r\n            Các dự án đầu tư được lưu trữ trên Krowd được Krowd sở hữu sẽ được tổ chức thông qua quy\r\n            trình của Krowd, không cung cấp quyền biểu quyết cho các nhà đầu tư. Cách thức xây dựng\r\n            và tổ chức của dự án sẽ do bên quản lý dự án của Krowd quyết định toàn bộ. Nhà đầu tư sẽ\r\n            nhận được các thông báo thường nhật và báo cáo hằng kỳ về tình hình dự án và nhà đầu tư\r\n            có quyền góp ý về dự án thông qua kênh truyền thông của Krowd. Song quyền quyết định vẫn\r\n            thuộc về quản lý dự án đó.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Hạn chế hủy bỏ\r\n          </Typography>\r\n          <ContentStyle>\r\n            Theo quy định huy động vốn cộng đồng và quy định của Krowd, sau khi bạn thực hiện việc\r\n            mua gói đầu tư, bạn có thể hủy giao dịch bất kỳ lúc nào và vì bất kỳ lý do gì trong vòng\r\n            24h sau khi thực hiện giao dịch. Sau khoản thời gian này, mọi giao dịch được coi là đã\r\n            xác nhận, các khiếu nại của bạn về sau Krowd sẽ dựa theo quy định này để xử lý.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Tiết lộ hạn chế\r\n          </Typography>\r\n          <ContentStyle>\r\n            Dự án phải tiết lộ thông tin về thông tin người quản lý, kế hoạch kinh doanh, đợt kêu\r\n            gọi, đợt thanh toán và việc sử dụng dự kiến số tiền thu được, cùng những thứ khác. Điều\r\n            quan trọng cần lưu ý là một dự án ở giai đoạn đầu có thể chỉ cung cấp thông tin hạn chế\r\n            về kế hoạch kinh doanh và hoạt động của mình vì công ty vẫn đang phát triển hoạt động\r\n            của mình. Tùy thuộc vào cách thức kêu gọi, công ty cũng có thể không có nghĩa vụ phải\r\n            nộp thông tin liên quan đến hoạt động kinh doanh của mình hàng năm, bao gồm cả báo cáo\r\n            tài chính.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Đầu tư vào nhân sự\r\n          </Typography>\r\n          <ContentStyle>\r\n            Khoản đầu tư vào một dự án mới thành lập cũng là khoản đầu tư vào (các) doanh nhân, nhà\r\n            quản lý sáng lập và / hoặc ban quản lý của dự án. Các doanh nhân và nhà quản lý sáng lập\r\n            sẽ có trình độ chuyên nghiệp và trình độ quản lý khác nhau. Khả năng thực hiện kế hoạch\r\n            kinh doanh là một yếu tố quan trọng để xác định liệu hoạt động kinh doanh có khả thi và\r\n            thành công hay không. Các nhà đầu tư nên xem xét cẩn thận bất kỳ thông tin tiết lộ nào\r\n            liên quan đến việc sử dụng tiền của dự án.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Khả năng xảy ra gian lận\r\n          </Typography>\r\n          <ContentStyle>\r\n            Có một rủi ro rằng một dự án kêu gọi vốn gian lận. Krowd sẽ có những đợt kiểm tra thường\r\n            kỳ để giảm nguy cơ này một cách tốt nhất có thể. Tuy nhiên, không có cách nào để kiểm\r\n            soát hành động của một dự án sau khi đợt chào bán kết thúc một cách triệt để.\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            Thiếu sự hướng dẫn nghiệp vụ\r\n          </Typography>\r\n          <ContentStyle>\r\n            Nhiều dự án thành công một phần cho rằng thành công ban đầu của họ là do sự hướng dẫn\r\n            của các nhà quản trị chuyên nghiệp ở giai đoạn đầu (ví dụ: các nhà đầu tư thiên thần và\r\n            các công ty đầu tư mạo hiểm). Những nhà đầu tư này thường thương lượng để có được ghế\r\n            trong ban giám đốc của công ty và đóng vai trò quan trọng trong việc cung cấp thêm nguồn\r\n            lực, địa chỉ liên hệ và kinh nghiệm trong việc hỗ trợ các công ty ở giai đoạn đầu thực\r\n            hiện kế hoạch kinh doanh của họ. Một công ty ở giai đoạn đầu được tài trợ chủ yếu thông\r\n            qua huy động vốn cộng đồng có thể không có được lợi ích từ các nhà đầu tư chuyên nghiệp\r\n            như vậy.\r\n          </ContentStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\RiskInvest.tsx",["2964"],"// material\r\nimport { Box, Container, Grid, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport Page from '../../components/Page';\r\nimport useLocales from 'hooks/useLocales';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\nexport default function RiskInvest() {\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <Page title=\"Rủi ro khi đâu tư | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Heading')}\r\n          </Typography>\r\n          <ContentStyle>{t('Learn_Investor_Risk_Invest.Definition')}</ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Project_Failure')}\r\n          </Typography>\r\n          <ContentStyle>{t('Learn_Investor_Risk_Invest.Project_Failure_Definition')}</ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Project_Liquidity')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Project_Liquidity_Definition')}\r\n            {/* Khả năng thanh toán lại khoản đầu tư của bạn trong những kỳ đầu tiên sẽ bị hạn chế với\r\n            các lý do khác nhau. Bạn có thể phải neo khoản đầu tư của mình trong một khoảng thời\r\n            gian dài. Không giống như đầu tư vào các dự án được niêm yết trên sàn giao dịch chứng\r\n            khoán, tại Krowd không hỗ trợ hình thức bán lại khoản đầu tư của mình cho người khác để\r\n            thu hồi vốn đầu tư ban đầu. Song, nếu bạn thực hiện giao dịch đó ngoài nền tảng của\r\n            Krowd, mọi rủi ro và rắc rối về sau không nằm trong sự quản lý của Krowd. */}\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Project_Ownership_Voting')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Project_Ownership_Voting_Definition')}\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Cancellation_Restrictions')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Cancellation_Restrictions_Definition')}\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Limited_Disclosures')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Limited_Disclosures_Definition')}\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Investment_Personnel')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Investment_Personnel_Definition')}\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Possibility_Fraud')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Possibility_Fraud_Definition')}\r\n          </ContentStyle>\r\n        </Grid>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h3\" sx={{ py: 1 }}>\r\n            {t('Learn_Investor_Risk_Invest.Lack_Professional_Guidance')}\r\n          </Typography>\r\n          <ContentStyle>\r\n            {t('Learn_Investor_Risk_Invest.Lack_Professional_Guidance_Definition')}\r\n          </ContentStyle>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\NavSection.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\WhatIGetInvest.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\LearnHowItWork.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\learn\\DealTerm.tsx",["2965"],"// material\r\nimport { Box, Container, Divider, Grid, Stack, styled, Typography } from '@mui/material';\r\n// hooks\r\nimport Page from '../../components/Page';\r\nimport useLocales from 'hooks/useLocales';\r\nconst ContentStyle = styled(Typography)(() => ({\r\n  fontSize: '18px'\r\n}));\r\n\r\nexport default function DealTerm() {\r\n  const { translate: t } = useLocales();\r\n\r\n  return (\r\n    <Page title=\"Hiểu về các điều khoản giao dịch | Krowd\">\r\n      <Container maxWidth={'lg'}>\r\n        <Grid container sx={{ py: 2 }}>\r\n          <Typography variant=\"h2\" sx={{ pt: 5 }}>\r\n            {t('Learn_Investor_Deal_Term.Heading')}\r\n          </Typography>\r\n          <Typography\r\n            sx={{ fontSize: '25px', lineHeight: 1.3, color: '#777', fontWeight: 400, py: 3 }}\r\n          >\r\n            {t('Learn_Investor_Deal_Term.Definition')}\r\n          </Typography>\r\n          <Box>\r\n            <Typography variant=\"h3\">{t('Learn_Investor_Deal_Term.Sponsorship_Goals')}</Typography>\r\n            <Divider sx={{ mb: 3 }} />\r\n            <Box sx={{ lineHeight: 2 }}>\r\n              <Box sx={{ mb: 2 }}>\r\n                <ContentStyle>\r\n                  {t('Learn_Investor_Deal_Term.Sponsorship_Goals_Definition')}\r\n                </ContentStyle>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box>\r\n            <Typography variant=\"h3\">{t('Learn_Investor_Deal_Term.Stages_Campaign')}</Typography>\r\n            <Divider sx={{ mb: 3 }} />\r\n            <Box sx={{ lineHeight: 2 }}>\r\n              <Box>{t('Learn_Investor_Deal_Term.Stages_Campaign_Definition')}</Box>\r\n              <Box sx={{ pb: 5 }}>\r\n                {t('Learn_Investor_Deal_Term.Stages_Campaign_Definition_Text_2')}\r\n              </Box>\r\n              <Box display={'flex'}>\r\n                <Box>\r\n                  <Typography sx={{ color: 'blue', fontWeight: 700, fontSize: 70 }}>1</Typography>\r\n                </Box>\r\n                <Box sx={{ pb: 5 }}>\r\n                  <Box sx={{ px: 4.5 }}>\r\n                    <Typography sx={{ fontSize: '22px', lineHeight: 1.3 }}>\r\n                      {t('Learn_Investor_Deal_Term.Stages_1')}\r\n                    </Typography>\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_1_Description')}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box display={'flex'}>\r\n                <Box>\r\n                  <Typography sx={{ color: 'blue', fontWeight: 700, fontSize: 70 }}> 2</Typography>\r\n                </Box>\r\n                <Box sx={{ pb: 5 }}>\r\n                  <Box sx={{ px: 3 }}>\r\n                    <Typography sx={{ fontSize: '22px', lineHeight: 1.3 }}>\r\n                      {t('Learn_Investor_Deal_Term.Stages_2')}\r\n                    </Typography>\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_2_Description')}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box display={'flex'}>\r\n                <Box>\r\n                  <Typography sx={{ color: 'blue', fontWeight: 700, fontSize: 70 }}> 3</Typography>\r\n                </Box>\r\n                <Box sx={{ pb: 5 }}>\r\n                  <Box sx={{ px: 3 }}>\r\n                    <Typography sx={{ fontSize: '22px', lineHeight: 1.3 }}>\r\n                      {t('Learn_Investor_Deal_Term.Stages_3')}\r\n                    </Typography>\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_3_Description')}\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_3_Description_Text_2')}\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_3_Description_Text_3')}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box display={'flex'}>\r\n                <Box>\r\n                  <Typography sx={{ color: 'blue', fontWeight: 700, fontSize: 70 }}> 4</Typography>\r\n                </Box>\r\n                <Box sx={{ pb: 5 }}>\r\n                  <Box sx={{ px: 3 }}>\r\n                    <Typography sx={{ fontSize: '22px', lineHeight: 1.3 }}>\r\n                      {t('Learn_Investor_Deal_Term.Stages_4')}\r\n                    </Typography>\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_4_Description')}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n              <Box display={'flex'}>\r\n                <Box>\r\n                  <Typography sx={{ color: 'blue', fontWeight: 700, fontSize: 70 }}> 5</Typography>\r\n                </Box>\r\n                <Box sx={{ pb: 5 }}>\r\n                  <Box sx={{ px: 3 }}>\r\n                    <Typography sx={{ fontSize: '22px', lineHeight: 1.3 }}>\r\n                      {t('Learn_Investor_Deal_Term.Stages_5')}\r\n                    </Typography>\r\n                    <br /> {t('Learn_Investor_Deal_Term.Stages_5_Description')}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n          <Box>\r\n            <Typography variant=\"h3\">\r\n              {t('Learn_Investor_Deal_Term.Change_Trading_Terms')}\r\n            </Typography>\r\n            <Divider sx={{ mb: 3 }} />\r\n            <Box>\r\n              <Typography sx={{ mb: 2 }}>\r\n                {t('Learn_Investor_Deal_Term.Change_Trading_Terms_Description_1')}\r\n              </Typography>\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ mb: 2 }}>\r\n                {t('Learn_Investor_Deal_Term.Change_Trading_Terms_Description_2')}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\GeneralApp.tsx",["2966","2967","2968","2969","2970","2971","2972","2973","2974","2975"],"// material\r\nimport { Container, Grid, Stack } from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport {\r\n  AppWelcome,\r\n  AppWidgets1,\r\n  AppWidgets2,\r\n  AppFeatured,\r\n  AppNewInvoice,\r\n  AppTopRelated,\r\n  AppAreaInstalled,\r\n  AppTotalDownloads,\r\n  AppTotalInstalled,\r\n  AppCurrentDownload,\r\n  AppTotalActiveUsers\r\n} from '../../components/_dashboard/general-app';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { useEffect } from 'react';\r\nimport { getProjectListInvestedById } from 'redux/slices/krowd_slices/project';\r\n\r\nexport default function GeneralApp() {\r\n  const { themeStretch } = useSettings();\r\n  const { user } = useAuth();\r\n  const { UserDetailState } = useSelector((state: RootState) => state.userKrowd);\r\n  const { UserDetail, isLoading } = UserDetailState;\r\n  useEffect(() => {\r\n    dispatch(getProjectListInvestedById(localStorage.getItem('projectId') ?? ''));\r\n  }, [dispatch]);\r\n  return (\r\n    <Page title=\"Bảng điều khiển | Krowd\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <AppWelcome user={user} investor={UserDetail} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <AppFeatured />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <AppTotalActiveUsers />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} lg={12}>\r\n            <AppNewInvoice />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\BusinessMaterialUI.tsx",["2976","2977","2978","2979","2980","2981"],"// components//\r\nimport { Box, Grid, Card, Container, Typography, useMediaQuery } from '@mui/material';\r\n//\r\nimport { varFadeInUp, MotionInView } from '../../animate';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport { alpha, useTheme, styled } from '@mui/material/styles';\r\nimport mockData from 'utils/mock-data';\r\n// ----------------------------------------------------------------------\r\nconst MOCK_NUMBER = [...Array(1)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  hook1: mockData.contentDB.hook1(index),\r\n  data0: mockData.contentDB.data0(index),\r\n  data1: mockData.contentDB.data1(index),\r\n  data2: mockData.contentDB.data2(index)\r\n}));\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  paddingTop: theme.spacing(10),\r\n  backgroundColor: '#E5F3E9'\r\n}));\r\nconst CardStyle = styled(Card)(({ theme }) => {\r\n  const shadowCard = (opacity: number) =>\r\n    theme.palette.mode === 'light'\r\n      ? alpha(theme.palette.common.black, opacity)\r\n      : alpha(theme.palette.common.black, opacity);\r\n  return {\r\n    maxWidth: 390,\r\n    minHeight: 420,\r\n    margin: 'auto',\r\n    textAlign: 'left',\r\n    padding: theme.spacing(0, 3, 0),\r\n    boxShadow: `-40px 40px 80px 0 ${shadowCard(0.48)}`,\r\n    [theme.breakpoints.up('md')]: {\r\n      backgroundColor: '#FFFFFF',\r\n      borderRadius: theme.shape.borderRadiusMd,\r\n      boxShadow: `-20px 20px 40px 0 ${shadowCard(0.35)}`\r\n    },\r\n    '&.cardCenter': {\r\n      [theme.breakpoints.up('md')]: {\r\n        marginTop: -80,\r\n        backgroundColor: theme.palette.background.paper,\r\n        boxShadow: `-40px 40px 80px 0 ${shadowCard(0.4)}`,\r\n        '&:before': {\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          zIndex: -1,\r\n          content: \"''\",\r\n          margin: 'auto',\r\n          position: 'absolute',\r\n          width: 'calc(100% - 40px)',\r\n          height: 'calc(100% - 40px)',\r\n          borderRadius: theme.shape.borderRadiusMd,\r\n          backgroundColor: theme.palette.background.paper,\r\n          boxShadow: `-20px 20px 40px 0 ${shadowCard(0.12)}`\r\n        }\r\n      }\r\n    }\r\n  };\r\n});\r\nexport default function ComponentMaterialUI() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const bgLight = theme.palette.mode === 'light';\r\n  const isDesktop = useMediaQuery(theme.breakpoints.up('lg'));\r\n  return (\r\n    <RootStyle>\r\n      <h1 style={{ textAlign: 'center' }}>\r\n        Our Franchise\r\n        <br /> Selection Processo\r\n      </h1>\r\n      <p style={{ textAlign: 'center', paddingBottom: '4rem' }}>\r\n        At FranShares, we will never charge fees. We invest alongside our investors in every fund,\r\n        generally 20%. This means we only make money\r\n        <br /> when you make money, so we take franchise selection seriously\r\n      </p>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={isDesktop ? 10 : 5}>\r\n          <Grid item xs={12} md={4}>\r\n            <MotionInView variants={varFadeInUp}>\r\n              <CardStyle\r\n                sx={{\r\n                  mb: { xs: 10, md: 10, textAlign: 'center' },\r\n                  color: isLight ? 'white' : 'text.primary',\r\n                  backgroundColor: bgLight ? '#ffffff' : '#9acdff'\r\n                }}\r\n              >\r\n                <Typography>\r\n                  <img\r\n                    style={{ width: '80px', display: 'inline', paddingTop: '3rem' }}\r\n                    src=\"/static/faqs/bussiness1.png\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"h5\" style={{ color: 'purple' }} paragraph>\r\n                  Source the best\r\n                  <br /> franchise opportunities\r\n                </Typography>\r\n                <Typography\r\n                  style={{ paddingBottom: '2rem' }}\r\n                  sx={{ color: isLight ? 'text.secondary' : 'common.black' }}\r\n                >\r\n                  We review hundreds of franchise opportunities, but less than 1% meet our\r\n                  investment criteria. We look for franchise opportunities in recession resistant\r\n                  industries with a strong track record of success\r\n                </Typography>\r\n              </CardStyle>\r\n            </MotionInView>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <MotionInView variants={varFadeInUp}>\r\n              <CardStyle\r\n                sx={{\r\n                  mb: { xs: 10, md: 10, textAlign: 'center' },\r\n                  color: isLight ? 'white' : 'text.primary',\r\n                  backgroundColor: bgLight ? '#ffffff' : '#9acdff'\r\n                }}\r\n              >\r\n                <Typography>\r\n                  <img\r\n                    style={{ width: '80px', display: 'inline', paddingTop: '3rem' }}\r\n                    src=\"/static/faqs/bussiness2.png\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"h5\" style={{ color: 'purple' }} paragraph>\r\n                  Lock-in the\r\n                  <br /> best deals\r\n                </Typography>\r\n                <Typography\r\n                  style={{ paddingBottom: '2rem' }}\r\n                  sx={{ color: isLight ? 'text.secondary' : 'common.black' }}\r\n                >\r\n                  At FranShares, we buy our franchises in bulk. This buying power ensures that we’re\r\n                  also getting the best franchise valuations while enjoying franchise fee savings of\r\n                  32% on average.\r\n                </Typography>\r\n              </CardStyle>\r\n            </MotionInView>\r\n          </Grid>\r\n          <Grid item xs={12} md={4}>\r\n            <MotionInView variants={varFadeInUp}>\r\n              <CardStyle\r\n                sx={{\r\n                  mb: { xs: 10, md: 10, textAlign: 'center' },\r\n                  color: isLight ? 'white' : 'text.primary',\r\n                  backgroundColor: bgLight ? '#ffffff' : '#9acdff'\r\n                }}\r\n              >\r\n                <Typography>\r\n                  <img\r\n                    style={{ width: '80px', display: 'inline', paddingTop: '3rem' }}\r\n                    src=\"/static/faqs/bussiness2.png\"\r\n                  />\r\n                </Typography>\r\n                <Typography variant=\"h5\" style={{ color: 'purple' }} paragraph>\r\n                  Conduct rigorous\r\n                  <br /> due diligence\r\n                </Typography>\r\n                <Typography\r\n                  style={{ paddingBottom: '2rem' }}\r\n                  sx={{ color: isLight ? 'text.secondary' : 'common.black' }}\r\n                >\r\n                  When we find a deal worth pursuing, we dive into the details and look at\r\n                  everything from industry growth, competitive activity, macroeconomic trends,\r\n                  franchise leadership, risks, and potential return on investment\r\n                </Typography>\r\n              </CardStyle>\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\BusinessHero.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\business-components\\BusinessContent.tsx",["2982","2983","2984","2985","2986","2987","2988","2989","2990","2991"],"// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Grid, Container, Typography } from '@mui/material';\r\n//\r\nimport { MotionInView, varFadeInUp } from '../../animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(9, 0),\r\n  backgroundColor: '#E5F3E9'\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  marginBottom: theme.spacing(10),\r\n  [theme.breakpoints.up('md')]: {\r\n    height: '100%',\r\n    marginBottom: 0,\r\n    textAlign: 'left',\r\n    display: 'inline-flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'flex-start'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function BusinessContent() {\r\n  return (\r\n    <RootStyle>\r\n      <h1 style={{ paddingBottom: '5rem' }}>\r\n        Criteria that we believe is important when selecting a franchise to invest in\r\n      </h1>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative' }}>\r\n        <Grid container spacing={5} direction=\"row-reverse\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Return On Investment (ROI)\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  All franchises are subject to FTC regulation which requires franchises to disclose\r\n                  their itemized startup costs. Additionally, many franchises disclose a Financial\r\n                  Performance Representation (FPR) of their locations. FranShares only works with\r\n                  franchises that show net profits in their FPR so our investors can have a better\r\n                  understanding of potential returns. We avoid franchises that have high buildout\r\n                  costs, employee headcounts, and inventory to maximize ROI.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest1.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Growth\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  FranShares looks at each franchise’s growth per location, store sales and number\r\n                  of franchisees to ensure the brand is growing quickly, efficiently, and\r\n                  sustainably.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest2.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row-reverse\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Availability\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  While most people think of major fast-food franchise brands when thinking about\r\n                  franchising, the availability for new locations is limited-to-nonexistent in good\r\n                  markets. FranShares looks for growing franchise brands that have availability for\r\n                  multiple locations in good markets.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest3.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Leadership\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  As part of FTC regulation, each franchisor’s leadership must be disclosed. We look\r\n                  for experienced teams based on their involvement in their franchise’s industry and\r\n                  in franchising as a whole.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest4.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row-reverse\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Sustainability\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  While they may not always invest in the “sexiest” businesses, FranShares looks for\r\n                  those that are more essential services that have great long-term outlooks. We\r\n                  avoid quick fads and stick with staples like haircare, automotive, fitness, etc.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest5.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Competition and Competitive Advantages\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  Franchising does not make new industries but instead consolidates existing ones.\r\n                  We look at who the other competitors in their respective industries are, whether\r\n                  they are growing, and what our franchises’ competitive advantages are to capture\r\n                  market share in the space.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest6.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row-reverse\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Manageability\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  Many franchises require a full-time owner and operator. We focus on semi-absentee\r\n                  franchise models that can be manager-run, which typically have lower employee\r\n                  headcounts and simpler operations. We also add an extra layer of management, which\r\n                  is typically not found in these franchise models to have top-of-the-line\r\n                  efficiency in operations.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest7.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  Recession and Pandemic Resistance\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  No one has a crystal ball that can reveal what’s going to happen in the future and\r\n                  what to invest in. Instead, we make educated investment decisions to prepare as\r\n                  much as possible. We look at essential and need-based industries that tend to\r\n                  perform well in all economic conditions and have a history of performing well in\r\n                  the previous recession or COVID lockdowns.\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest8.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', paddingTop: '7rem' }}>\r\n        <Grid container spacing={5} direction=\"row-reverse\" justifyContent=\"space-between\">\r\n          <Grid item xs={12} md={6}>\r\n            <ContentStyle>\r\n              <MotionInView variants={varFadeInUp}>\r\n                <Typography variant=\"h4\" sx={{ mb: 3, color: 'black' }}>\r\n                  How we select\r\n                  <br /> our operators\r\n                </Typography>\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  For decades, Private Equity firms have been acquiring profitable franchises and\r\n                  turning them into cash cows by leveraging outsourced franchise management\r\n                  companies, or building in-house franchise management teams.\r\n                </Typography>\r\n                <br />\r\n                <br />\r\n                <Typography variant=\"h6\" sx={{ mb: 3, color: '#637381' }}>\r\n                  At FranShares, we’ll be taking a page from the private equity book of franchise\r\n                  management to ensure our franchises maximize ROI. Depending on the fund, we’ll\r\n                  either work with a reputable and experienced outsourced management company like\r\n                  Restaurant Sherpas, or leverage our internal expertise to hire a in-house\r\n                  management team. There is no shortage of franchise management talent in our team’s\r\n                  network\r\n                </Typography>\r\n              </MotionInView>\r\n            </ContentStyle>\r\n          </Grid>\r\n          <Grid item xs={4} md={6} sx={{ position: 'static' }}>\r\n            <MotionInView\r\n              threshold={0.5}\r\n              variants={varFadeInUp}\r\n              sx={{ top: 0, left: 0, position: 'static' }}\r\n            >\r\n              <img src=\"/static/home/Invest10.png\" />\r\n            </MotionInView>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\countries.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\authentication\\VerifyCode.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\authentication\\Register.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\ProjectReportRevenue.tsx",["2992","2993","2994","2995","2996","2997","2998"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\Markdown.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\ProductNewForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\CartWidget.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\breakpoints.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\typography.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\theme\\shape.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\authentication\\Login.tsx",["2999","3000","3001","3002","3003"],"import { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, Stack, Link, Container, Typography, Box } from '@mui/material';\r\n// routes\r\nimport { PATH_AUTH } from '../../routes/paths';\r\n// layouts\r\nimport AuthLayout from '../../layouts/AuthLayout';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport { MHidden } from '../../components/@material-extend';\r\nimport { LoginForm } from '../../components/authentication/login';\r\nimport { motion } from 'framer-motion';\r\n\r\n// ----------------------------------------------------------------------\r\nconst RootStyle = styled(Page)(({ theme }) => ({\r\n  backgroundImage: 'url(/static/overlay.svg), url(/static/logo-image-login.jpg)',\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center',\r\n  [theme.breakpoints.up('md')]: {\r\n    display: 'flex'\r\n  }\r\n}));\r\nconst HeroImgStyle = styled(motion.iframe)(({ theme }) => ({\r\n  top: 0,\r\n  right: 10,\r\n  bottom: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  height: '100%',\r\n  margin: 'auto',\r\n  position: 'absolute',\r\n  objectFit: 'cover',\r\n  opacity: 0.8,\r\n  [theme.breakpoints.up('md')]: {\r\n    width: 'auto',\r\n    height: '48vh'\r\n  },\r\n  [theme.breakpoints.down('md')]: {\r\n    display: 'none'\r\n  }\r\n}));\r\nconst SectionStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  maxWidth: 464,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  margin: theme.spacing(2, 0, 2, 2)\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 480,\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  minHeight: '100vh',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(12, 0)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Login() {\r\n  return (\r\n    <RootStyle title=\"Login | Krowd\">\r\n      <MHidden width=\"mdDown\">\r\n        <SectionStyle>\r\n          <Typography variant=\"h3\" sx={{ p: 5, mt: 10, mb: 5 }}>\r\n            Dành cho nhà đầu tư <br />\r\n            KROWD System\r\n          </Typography>\r\n          <Typography variant=\"h3\" sx={{ p: 25 }}>\r\n            <HeroImgStyle src=\"https://embed.lottiefiles.com/animation/38435\" />\r\n          </Typography>\r\n        </SectionStyle>\r\n      </MHidden>\r\n\r\n      <Container maxWidth=\"sm\">\r\n        <ContentStyle>\r\n          <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"space-between\"\r\n            spacing={3}\r\n            sx={{\r\n              height: 250,\r\n              backgroundColor: 'rgb(114 114 114 / 3%)',\r\n              mb: 3,\r\n              borderRadius: '17%'\r\n            }}\r\n          >\r\n            <LoginForm />\r\n          </Stack>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\_apis_\\krowd_apis\\transaction.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\LogoOnlyLayout.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\guards\\AuthGuard.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\guards\\GuestGuard.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\ProjectTable.tsx",["3004","3005","3006"],"import { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from '../../redux/store';\r\nimport { PATH_DASHBOARD_PROJECT, PATH_PAGE } from '../../routes/paths';\r\nimport { ACTION_TYPE, DATA_TYPE, KrowdTable, RowData } from './krowd-table/KrowdTable';\r\nimport { getProjectListInvested } from '../../redux/slices/krowd_slices/project';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'image', label: '', align: '' },\r\n  { id: 'name', label: 'DỰ ÁN', align: 'left' },\r\n  { id: 'investedAmount', label: 'ĐÃ ĐẦU TƯ', align: 'center' },\r\n  { id: 'multiplier', label: 'HỆ SỐ NHÂN', align: 'center' },\r\n  { id: 'duration', label: 'SỐ KỲ', align: 'left' },\r\n  { id: 'sharedRevenue', label: 'DOANH THU CHIA SẺ', align: 'left' },\r\n  { id: 'lastestInvestmentDate', label: 'NGÀY ĐẦU TƯ', align: 'center' },\r\n  { id: 'status', label: 'TRẠNG THÁI', align: 'left' },\r\n  { id: '', label: 'Chi tiết', align: 'center' }\r\n];\r\nconst action = [\r\n  {\r\n    nameAction: 'view',\r\n    action: PATH_DASHBOARD_PROJECT.project.root,\r\n    icon: eyeFill,\r\n    color: '#14b7cc',\r\n    type: ACTION_TYPE.LINK\r\n  }\r\n];\r\nexport default function ProjectTable() {\r\n  const { projectListInvested } = useSelector((state: RootState) => state.project);\r\n  const { isLoadingProjectListInvested, listOfProject: list, numOfProject } = projectListInvested;\r\n\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n\r\n  useEffect(() => {\r\n    dispatch(getProjectListInvested(pageIndex, 5));\r\n  }, [dispatch, pageIndex]);\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'image',\r\n            value: _item.image,\r\n            type: DATA_TYPE.IMAGE\r\n          },\r\n          {\r\n            name: 'name',\r\n            value: _item.name,\r\n            type: DATA_TYPE.TEXT,\r\n            textColor:\r\n              (_item.status === 'CALLING_FOR_INVESTMENT' && '#14b7cc') ||\r\n              (_item.status === 'DRAFT' && 'black') ||\r\n              (_item.status === 'WAITING_FOR_APPROVAL' && '#eacb00') ||\r\n              (_item.status === 'WAITING_TO_ACTIVATE' && '#4dc0b5') ||\r\n              (_item.status === 'ACTIVE' && 'green') ||\r\n              (_item.status === 'WAITING_TO_PUBLISH' && '#f66d9b') ||\r\n              (_item.status === 'CLOSED' && '#6574cd') ||\r\n              (_item.status === 'DENIED' && 'red') ||\r\n              (_item.status === 'CALLING_TIME_IS_OVER' ? 'red' : 'black')\r\n          },\r\n\r\n          // {\r\n          //   name: 'business',\r\n          //   value: _item.business.name,\r\n          //   type: DATA_TYPE.LIST_TEXT\r\n          // },\r\n          {\r\n            name: 'investedAmount',\r\n            value: _item.investedAmount,\r\n            type: DATA_TYPE.NUMBER_FORMAT,\r\n            textColor: 'rgb(20, 183, 204)'\r\n          },\r\n\r\n          {\r\n            name: 'multiplier',\r\n            value: `${_item.multiplier} x`,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'duration',\r\n            value: `${_item.numOfStage} kỳ`,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'sharedRevenue',\r\n            value: `${_item.sharedRevenue} %`,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'lastestInvestmentDate',\r\n            value: _item.lastestInvestmentDate,\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n          {\r\n            name: 'status',\r\n            value:\r\n              (_item.status === 'CLOSED' && 'Đã đóng') ||\r\n              (_item.status === 'ACTIVE' && 'Đang hoạt động') ||\r\n              (_item.status === 'WAITING_TO_ACTIVATE' && 'Đang chờ hoạt động') ||\r\n              (_item.status === 'CALLING_TIME_IS_OVER' && 'Đã quá hạn đầu tư') ||\r\n              (_item.status === 'CALLING_FOR_INVESTMENT' && 'Đang kêu gọi đầu tư') ||\r\n              (_item.status === 'WAITING_TO_PUBLISH' && 'Đang chờ công khai') ||\r\n              (_item.status === 'DENIED' && 'Đã bị từ chối') ||\r\n              (_item.status === 'WAITING_FOR_APPROVAL' && 'Đang chờ duyệt') ||\r\n              (_item.status === 'DRAFT' && 'Bản nháp'),\r\n            type: DATA_TYPE.TEXT,\r\n            textColor:\r\n              (_item.status === 'CALLING_FOR_INVESTMENT' && '#14b7cc') ||\r\n              (_item.status === 'DRAFT' && 'black') ||\r\n              (_item.status === 'WAITING_FOR_APPROVAL' && '#eacb00') ||\r\n              (_item.status === 'WAITING_TO_ACTIVATE' && '#4dc0b5') ||\r\n              (_item.status === 'ACTIVE' && 'green') ||\r\n              (_item.status === 'WAITING_TO_PUBLISH' && '#f66d9b') ||\r\n              (_item.status === 'CLOSED' && '#6574cd') ||\r\n              (_item.status === 'DENIED' && 'red') ||\r\n              (_item.status === 'CALLING_TIME_IS_OVER' ? 'red' : 'black')\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <KrowdTable\r\n      headingTitle=\"DANH SÁCH DỰ ÁN ĐẦU TƯ\"\r\n      header={TABLE_HEAD}\r\n      getData={getData}\r\n      isLoading={isLoadingProjectListInvested}\r\n      // viewPath={PATH_PAGE.details}\r\n      actionsButton={action}\r\n      paging={{\r\n        pageIndex,\r\n        pageSize: pageSize,\r\n        numberSize: numOfProject,\r\n\r\n        handleNext() {\r\n          setPageIndex(pageIndex + 1);\r\n        },\r\n        handlePrevious() {\r\n          setPageIndex(pageIndex - 1);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\InvestmentTableAll.tsx",["3007","3008","3009","3010"],"import React, { useEffect, useState } from 'react';\r\nimport {\r\n  getInvestmentByID,\r\n  getInvestmentProjectID\r\n} from '../../redux/slices/krowd_slices/transaction';\r\nimport { dispatch, RootState, useSelector } from '../../redux/store';\r\nimport { DATA_TYPE, KrowdTable, RowData } from './krowd-table/KrowdTable';\r\nimport total from '@iconify/icons-eva/text-outline';\r\nimport time from '@iconify/icons-eva/clock-outline';\r\nimport done from '@iconify/icons-eva/checkmark-circle-2-outline';\r\nimport paytime from '@iconify/icons-eva/close-square-outline';\r\nimport warning from '@iconify/icons-eva/trending-up-fill';\r\nimport {\r\n  Typography,\r\n  Box,\r\n  Card,\r\n  Divider,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Button\r\n} from '@mui/material';\r\n\r\nimport Scrollbar from 'components/Scrollbar';\r\nimport { Icon } from '@iconify/react';\r\nimport { Container, Stack } from '@mui/system';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { useSnackbar } from 'notistack';\r\nimport axios from 'axios';\r\nimport { fCurrency } from 'utils/formatNumber';\r\nimport { LoadingButton } from '@mui/lab';\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'projectId', label: 'DỰ ÁN', align: 'center' },\r\n  { id: 'totalPrice', label: 'TRẠNG THÁI DỰ ÁN', align: 'center' },\r\n  { id: 'packageId', label: 'GÓI', align: 'center' },\r\n  { id: 'packagePrice', label: 'GIÁ GÓI', align: 'center' },\r\n  { id: 'quantity', label: 'SỐ LƯỢNG', align: 'center' },\r\n  { id: 'totalPrice', label: 'TỔNG TIỀN', align: 'center' },\r\n  { id: 'createDate', label: 'NGÀY ĐẦU TƯ', align: 'center' },\r\n  { id: 'status', label: 'TRẠNG THÁI ĐẦU TƯ', align: 'center' },\r\n  { id: '', label: 'HỦY ĐẦU TƯ', align: 'center' }\r\n];\r\nconst note = [\r\n  {\r\n    name: 'Lưu ý:'\r\n  },\r\n  {\r\n    name: 'Thao tác HỦY ĐẦU TƯ cho bạn hủy đầu tư trong vòng 24 tiếng (Tính từ lúc bạn đầu tư dự án)'\r\n  },\r\n  {\r\n    name: 'Bảng biểu thị thông tin giao dịch đầu tư của bạn (Nếu có bất kỳ thắc mắc xin vui lòng liên lạc với bộ phận hỗ trợ của Krowd tại 19007777)'\r\n  }\r\n];\r\nexport default function InvestmentTableAll() {\r\n  const { investmentState, investmentDetailState } = useSelector(\r\n    (state: RootState) => state.transactionKrowd\r\n  );\r\n  const { isLoading, listOfInvestment: list, numOfInvestment, filterCount } = investmentState;\r\n  const { InvestmentDetail } = investmentDetailState;\r\n\r\n  const milliSecs = 86400000;\r\n  const [value, setValue] = useState(Date.now());\r\n  const [InvestDate, setInvestDate] = useState(0);\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  useEffect(() => {\r\n    dispatch(getInvestmentProjectID('', pageIndex, 5));\r\n    setInvestDate(\r\n      Date.parse(\r\n        InvestmentDetail?.createDate.toString().substring(0, 10).split('/').reverse().join('/') ??\r\n          ''\r\n      )\r\n    );\r\n  }, [dispatch, pageIndex, InvestmentDetail?.createDate]);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n  const formik = useFormik({\r\n    initialValues: {},\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const headers = getHeaderFormData();\r\n        await axios\r\n          .put(REACT_APP_API_URL + `/investments/${InvestmentDetail?.id}`, values, {\r\n            headers: headers\r\n          })\r\n          .then(() => {\r\n            enqueueSnackbar('Hủy đầu tư thành công', {\r\n              variant: 'success'\r\n            });\r\n            setOpen(false);\r\n            dispatch(getInvestmentProjectID('', pageIndex, 5));\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar(\r\n              'Hủy đầu tư thất bại vui lòng kiểm tra lại. Bạn chỉ được hủy đầu tư trong vòng 24h(Tính từ ngày bạn đầu tư)',\r\n              {\r\n                variant: 'error'\r\n              }\r\n            );\r\n          });\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { isSubmitting, handleSubmit } = formik;\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'projectName',\r\n            value: _item.projectName,\r\n            type: DATA_TYPE.TEXT_FORMAT,\r\n            textColor:\r\n              (_item.status === 'SUCCESS' && 'green') ||\r\n              (_item.status === 'CANCELED' && 'red') ||\r\n              (_item.status === 'WAITING' && '#eacb00') ||\r\n              (_item.status === 'FAILED' ? 'red' : 'black')\r\n          },\r\n\r\n          {\r\n            name: 'projectStatus',\r\n            value:\r\n              (_item.projectStatus === 'CLOSED' && 'Đã đóng') ||\r\n              (_item.projectStatus === 'ACTIVE' && 'Đang hoạt động') ||\r\n              (_item.projectStatus === 'WAITING_TO_ACTIVATE' && 'Đang chờ hoạt động') ||\r\n              (_item.projectStatus === 'CALLING_TIME_IS_OVER' && 'Đã quá hạn đầu tư') ||\r\n              (_item.projectStatus === 'CALLING_FOR_INVESTMENT' && 'Đang kêu gọi đầu tư') ||\r\n              (_item.projectStatus === 'WAITING_TO_PUBLISH' && 'Đang chờ công khai') ||\r\n              (_item.projectStatus === 'DENIED' && 'Đã bị từ chối') ||\r\n              (_item.projectStatus === 'WAITING_FOR_APPROVAL' && 'Đang chờ duyệt') ||\r\n              (_item.projectStatus === 'DRAFT' && 'Bản nháp'),\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor:\r\n              (_item.projectStatus === 'CALLING_FOR_INVESTMENT' && '#14b7cc') ||\r\n              (_item.projectStatus === 'DRAFT' && 'black') ||\r\n              (_item.projectStatus === 'WAITING_FOR_APPROVAL' && '#eacb00') ||\r\n              (_item.projectStatus === 'WAITING_TO_ACTIVATE' && '#4dc0b5') ||\r\n              (_item.projectStatus === 'ACTIVE' && 'green') ||\r\n              (_item.projectStatus === 'WAITING_TO_PUBLISH' && '#f66d9b') ||\r\n              (_item.projectStatus === 'CLOSED' && '#6574cd') ||\r\n              (_item.projectStatus === 'DENIED' && 'red') ||\r\n              (_item.projectStatus === 'CALLING_TIME_IS_OVER' ? 'red' : 'black')\r\n          },\r\n          {\r\n            name: 'packageName',\r\n            value: _item.packageName,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'packagePrice',\r\n            value: `${_item.packagePrice} đ`,\r\n            type: DATA_TYPE.NUMBER_FORMAT\r\n          },\r\n          {\r\n            name: 'quantity',\r\n            value: `${_item.quantity} gói`,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'totalPrice',\r\n            value: `${_item.totalPrice} đ`,\r\n            type: DATA_TYPE.NUMBER_FORMAT,\r\n            textColor:\r\n              (_item.status === 'SUCCESS' && 'green') ||\r\n              (_item.status === 'CANCELED' && 'red') ||\r\n              (_item.status === 'WAITING' && '#eacb00') ||\r\n              (_item.status === 'FAILED' ? 'red' : 'black')\r\n          },\r\n          {\r\n            name: 'createDate',\r\n            value: _item.createDate,\r\n            type: DATA_TYPE.TEXT_FORMAT\r\n          },\r\n          {\r\n            name: 'status',\r\n            value:\r\n              (_item.status === 'SUCCESS' && 'Đầu tư thành công') ||\r\n              (_item.status === 'FAILED' && 'Đầu tư thất bại') ||\r\n              (_item.status === 'CANCELED' && 'Đã hủy bỏ đầu tư') ||\r\n              (_item.status === 'WAITING' && 'Chờ xử lý'),\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor:\r\n              (_item.status === 'SUCCESS' && 'green') ||\r\n              (_item.status === 'CANCELED' && 'red') ||\r\n              (_item.status === 'WAITING' && '#eacb00') ||\r\n              (_item.status === 'FAILED' ? 'red' : 'black')\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {' '}\r\n      <Scrollbar sx={{ mb: 4 }}>\r\n        <Card\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            mb: 5,\r\n            width: '1500px',\r\n            minWidth: 1000\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '300px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={total} height={40} width={40} color={'#14b7cc'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: '#14b7cc' }}>TẤT CẢ</Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.all} lần đầu tư{' '}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            variant=\"fullWidth\"\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />{' '}\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '300px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={time} height={40} width={40} color={'#fc980b'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: '#fc980b' }}>CHỜ XỬ LÝ</Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.waiting} yêu cầu\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '300px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={warning} height={40} width={40} color={'red'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: 'red' }}>\r\n                ĐẦU TƯ THẤT BẠI\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.failed} lần\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '300px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={paytime} height={40} width={40} color={'red'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: 'red' }}>HỦY BỎ ĐẦU TƯ</Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.canceled} yêu cầu\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '300px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={done} height={40} width={40} color={'green'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: 'green' }}>\r\n                ĐẦU TƯ THÀNH CÔNG\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.success} lần{' '}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Card>\r\n      </Scrollbar>\r\n      <KrowdTable\r\n        headingTitle={`GIAO DỊCH ĐẦU TƯ`}\r\n        header={TABLE_HEAD}\r\n        getData={getData}\r\n        isLoading={isLoading}\r\n        cancelInvest={() => handleClickOpen()}\r\n        paging={{\r\n          pageIndex,\r\n          pageSize: pageSize,\r\n          numberSize: numOfInvestment,\r\n\r\n          handleNext() {\r\n            setPageIndex(pageIndex + 1);\r\n          },\r\n          handlePrevious() {\r\n            setPageIndex(pageIndex - 1);\r\n          }\r\n        }}\r\n        noteTable={note}\r\n      />\r\n      {InvestmentDetail &&\r\n      InvestmentDetail.status !== 'CANCELED' &&\r\n      InvestmentDetail.status !== 'FAILED' &&\r\n      InvestDate + milliSecs >= value ? (\r\n        <Dialog\r\n          open={open}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          <DialogContent>\r\n            <Box mt={1}>\r\n              <DialogContentText\r\n                sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: '#14b7cc' }}\r\n              >\r\n                BẠN MUỐN HỦY ĐẦU TƯ ?\r\n              </DialogContentText>\r\n            </Box>\r\n            <Stack spacing={{ xs: 2, md: 1 }}>\r\n              <Container sx={{ p: 2 }}>\r\n                <Box>\r\n                  <Typography sx={{ textAlign: 'center' }}>\r\n                    Yêu cầu hủy đầu tư {InvestmentDetail?.projectName}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                <Divider sx={{ my: 2 }} />\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    mb: '0.5rem',\r\n                    p: 1\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Dự án đã đầu tư</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>{InvestmentDetail?.projectName}</strong>\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    mb: '0.5rem',\r\n                    p: 1\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Ngày đầu tư</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>{InvestmentDetail?.createDate}</strong>\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    mb: '0.5rem',\r\n                    p: 1\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Tổng số tiền</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>{fCurrency(InvestmentDetail?.totalPrice ?? '')}</strong>\r\n                  </Typography>\r\n                </Box>\r\n                <Divider sx={{ my: 2 }} />\r\n\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Gói đầu tư</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18'\r\n                    }}\r\n                  >\r\n                    {/* {resDate} */}\r\n                    <strong> {InvestmentDetail?.packageName}</strong>\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Giá gói đầu tư</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18'\r\n                    }}\r\n                  >\r\n                    {fCurrency(InvestmentDetail?.packagePrice ?? '')}\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Tổng số gói</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18'\r\n                    }}\r\n                  >\r\n                    {InvestmentDetail?.quantity} Gói\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: '#251E18',\r\n                      marginBottom: '0.2rem'\r\n                    }}\r\n                  >\r\n                    <strong>Trạng thái giao dịch</strong>\r\n                  </Typography>\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      color: 'green',\r\n                      fontWeight: 700\r\n                    }}\r\n                  >\r\n                    {InvestmentDetail?.status === 'SUCCESS' && 'Đầu tư thành công'}\r\n                  </Typography>\r\n                </Box>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    p: 1,\r\n                    justifyContent: 'space-between'\r\n                  }}\r\n                >\r\n                  <Typography\r\n                    paragraph\r\n                    sx={{\r\n                      fontSize: '14px',\r\n                      color: '#ff7600'\r\n                    }}\r\n                  >\r\n                    Lưu ý: Bạn được hủy đầu tư trong vòng 24 tiếng (Tính từ thời gian bạn đầu tư dự\r\n                    án).\r\n                  </Typography>\r\n                </Box>\r\n              </Container>\r\n            </Stack>\r\n            <Box display={'flex'} justifyContent={'flex-end'} gap={1}>\r\n              <Button color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                Đóng\r\n              </Button>\r\n              <FormikProvider value={formik}>\r\n                <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n                  <LoadingButton\r\n                    type=\"submit\"\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    loading={isSubmitting}\r\n                  >\r\n                    Hủy đầu tư\r\n                  </LoadingButton>\r\n                </Form>\r\n              </FormikProvider>\r\n            </Box>\r\n            <Box p={3}>\r\n              <Typography variant=\"body2\">\r\n                Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với bộ\r\n                phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n              </Typography>\r\n            </Box>\r\n          </DialogContent>\r\n        </Dialog>\r\n      ) : (\r\n        <Dialog\r\n          open={open}\r\n          aria-labelledby=\"modal-modal-title\"\r\n          aria-describedby=\"modal-modal-description\"\r\n        >\r\n          {InvestmentDetail && InvestmentDetail.status === 'CANCELED' ? (\r\n            <DialogContent>\r\n              <Box mt={1}>\r\n                <DialogContentText\r\n                  sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'red' }}\r\n                >\r\n                  BẠN ĐÃ HỦY ĐẦU TƯ\r\n                </DialogContentText>\r\n              </Box>\r\n\r\n              <Stack spacing={{ xs: 2, md: 1 }}>\r\n                <Container sx={{ p: 2 }}>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Dự án</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>{InvestmentDetail?.projectName}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Ngày hủy đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>{InvestmentDetail?.updateDate}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tổng số tiền</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>{fCurrency(InvestmentDetail?.totalPrice ?? '')}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Divider sx={{ my: 2 }} />\r\n\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Gói đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {/* {resDate} */}\r\n                      <strong> {InvestmentDetail?.packageName}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Giá gói đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {fCurrency(InvestmentDetail?.packagePrice ?? '')}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tổng số gói</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {InvestmentDetail?.quantity} Gói\r\n                    </Typography>\r\n                  </Box>\r\n                </Container>\r\n              </Stack>\r\n              <Box>\r\n                <Button fullWidth color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                  Đóng\r\n                </Button>\r\n              </Box>\r\n              <Box p={3}>\r\n                <Typography variant=\"body2\">\r\n                  Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với bộ\r\n                  phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                </Typography>\r\n              </Box>\r\n            </DialogContent>\r\n          ) : (\r\n            <DialogContent>\r\n              <Box mt={1}>\r\n                <DialogContentText\r\n                  sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: '#e1920a' }}\r\n                >\r\n                  BẠN KHÔNG THỂ HỦY ĐẦU TƯ\r\n                </DialogContentText>\r\n              </Box>\r\n              <Stack spacing={{ xs: 2, md: 1 }}>\r\n                <Container sx={{ p: 2 }}>\r\n                  <Box>\r\n                    <Typography sx={{ textAlign: 'center', color: '#e1920a' }}>\r\n                      Bạn được hủy đầu tư trong vòng 24 tiếng (Tính từ thời gian bạn đầu tư dự án).\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Divider sx={{ my: 2 }} />\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Dự án đã đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>{InvestmentDetail?.projectName}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Ngày đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>{InvestmentDetail?.createDate}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tổng số tiền</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>{fCurrency(InvestmentDetail?.totalPrice ?? '')}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Divider sx={{ my: 2 }} />\r\n\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Gói đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {/* {resDate} */}\r\n                      <strong> {InvestmentDetail?.packageName}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Giá gói đầu tư</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {fCurrency(InvestmentDetail?.packagePrice ?? '')}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tổng số gói</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {InvestmentDetail?.quantity} Gói\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Trạng thái giao dịch</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: 'green',\r\n                        fontWeight: 700\r\n                      }}\r\n                    >\r\n                      {InvestmentDetail?.status === 'SUCCESS' && 'Đầu tư thành công'}\r\n                    </Typography>\r\n                  </Box>\r\n                </Container>\r\n              </Stack>\r\n              <Box>\r\n                <Button fullWidth color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                  Đóng\r\n                </Button>\r\n              </Box>\r\n              <Box p={3}>\r\n                <Typography variant=\"body2\">\r\n                  Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với bộ\r\n                  phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                </Typography>\r\n              </Box>\r\n            </DialogContent>\r\n          )}\r\n        </Dialog>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\PeriodRevenueHistoryTable.tsx",["3011"],"import React, { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from '../../../redux/store';\r\nimport { DATA_TYPE, KrowdTable, RowData } from '../krowd-table/KrowdTable';\r\nimport { fCurrency } from '../../../utils/formatNumber';\r\nimport { getPeriodRevenueReportList } from '../../../redux/slices/krowd_slices/transaction';\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'periodRevenueId', label: 'MÃ DOANH THU', align: 'left' },\r\n  { id: 'name', label: 'TÊN GIAI ĐOẠN', align: 'left' },\r\n  { id: 'amount', label: 'SỐ TIỀN', align: 'RIGHT' },\r\n  { id: 'description', label: 'MÔ TẢ', align: 'RIGHT' },\r\n  { id: 'createDate', label: 'NGÀY THỰC HIỆN', align: 'center' }\r\n];\r\n\r\nexport default function PeriodRevenueHistoryTable() {\r\n  const { periodRevenueState } = useSelector((state: RootState) => state.transactionKrowd);\r\n  const { isLoading, PeriodRevenueList: list } = periodRevenueState;\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  useEffect(() => {\r\n    dispatch(getPeriodRevenueReportList(pageIndex, pageSize));\r\n  }, [dispatch, pageIndex]);\r\n\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'idx',\r\n            value: _item.periodRevenueId,\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n          {\r\n            name: 'name',\r\n            value: _item.name,\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n\r\n          {\r\n            name: 'amount',\r\n            value: `${fCurrency(_item.amount)}`,\r\n            type: DATA_TYPE.NUMBER_FORMAT\r\n          },\r\n\r\n          {\r\n            name: 'description',\r\n            value: _item.description,\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n\r\n          {\r\n            name: 'createDate',\r\n            value: _item.createDate,\r\n            type: DATA_TYPE.DATE\r\n          }\r\n          // {\r\n          //   name: 'status',\r\n          //   value: _item.status === 'SUCCESS' ? 'Mua thành công' : 'Mua thất bại',\r\n          //   type: DATA_TYPE.TEXT,\r\n          //   textColor: _item.status === 'SUCCESS' ? 'rgb(102, 187, 106)' : 'red'\r\n          // }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <KrowdTable\r\n      headingTitle=\"Lịch sử doanh thu giai đoạn\"\r\n      header={TABLE_HEAD}\r\n      getData={getData}\r\n      isLoading={isLoading}\r\n      paging={{\r\n        pageIndex,\r\n        pageSize: pageSize,\r\n        numberSize: 10,\r\n\r\n        handleNext() {\r\n          setPageIndex(pageIndex + 1);\r\n          setPageSize(pageSize + 5);\r\n        },\r\n        handlePrevious() {\r\n          setPageIndex(pageIndex - 1);\r\n          setPageSize(pageSize - 5);\r\n        }\r\n      }}\r\n      // viewPath={PATH_DASHBOARD.business.details}\r\n    />\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\sidebarProject\\PaymentProjectTable.tsx",["3012","3013","3014","3015","3016","3017","3018"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\InvestmentTable.tsx",["3019","3020","3021"],"import { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from '../../redux/store';\r\nimport { DATA_TYPE, KrowdTable, RowData } from './krowd-table/KrowdTable';\r\nimport { getInvestmentProjectID } from 'redux/slices/krowd_slices/transaction';\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'projectId', label: 'DỰ ÁN', align: 'center' },\r\n  { id: 'investor', label: 'NHÀ ĐẦU TƯ', align: 'center' },\r\n  { id: 'totalPrice', label: 'SỐ TIỀN', align: 'center' },\r\n  { id: 'packageId', label: 'GÓI ĐẦU TƯ', align: 'center' },\r\n  { id: 'packageId', label: 'GIÁ GÓI', align: 'center' },\r\n  { id: 'packageId', label: 'SỐ LƯỢNG', align: 'center' },\r\n  { id: 'status', label: 'TRẠNG THÁI', align: 'center' },\r\n  { id: 'status', label: 'NGÀY ĐẦU TƯ', align: 'center' },\r\n  { id: '', label: '', align: 'left' }\r\n];\r\nexport default function InvestmentTable() {\r\n  const { investmentState } = useSelector((state: RootState) => state.transactionKrowd);\r\n  const { isLoading, listOfInvestment: list, numOfInvestment, filterCount } = investmentState;\r\n  const projectId = localStorage.getItem('projectId');\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  useEffect(() => {\r\n    dispatch(getInvestmentProjectID(projectId ?? '', pageIndex, 5));\r\n  }, [dispatch, pageIndex]);\r\n\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'projectName',\r\n            value: _item.projectName,\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n          {\r\n            name: 'investorName',\r\n            value: _item.investorName,\r\n            type: DATA_TYPE.TEXT_FORMAT\r\n          },\r\n\r\n          {\r\n            name: 'totalPrice',\r\n            value: `${_item.totalPrice} đ`,\r\n            type: DATA_TYPE.NUMBER_FORMAT\r\n          },\r\n          {\r\n            name: 'packageName',\r\n            value: _item.packageName,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'packagePrice',\r\n            value: `${_item.packagePrice} đ`,\r\n            type: DATA_TYPE.NUMBER_FORMAT\r\n          },\r\n          {\r\n            name: 'quantity',\r\n            value: `${_item.quantity} gói`,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'status',\r\n            value:\r\n              (_item.status === 'SUCCESS' && 'Đầu tư thành công') ||\r\n              (_item.status === 'FAILED' && 'Đầu tư thất bại') ||\r\n              (_item.status === 'CANCELLED' && 'Hủy bỏ đầu tư') ||\r\n              (_item.status === 'WAITING' && 'Chờ xử lý'),\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor:\r\n              (_item.status === 'SUCCESS' && 'green') ||\r\n              (_item.status === 'CANCELLED' && 'red') ||\r\n              (_item.status === 'WAITING' && '#eacb00') ||\r\n              (_item.status === 'FAILED' ? 'red' : 'black')\r\n          },\r\n          {\r\n            name: 'createDate',\r\n            value: _item.createDate,\r\n            type: DATA_TYPE.TEXT_FORMAT\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <KrowdTable\r\n        headingTitle={`GIAO DỊCH ĐẦU TƯ`}\r\n        header={TABLE_HEAD}\r\n        getData={getData}\r\n        isLoading={isLoading}\r\n        paging={{\r\n          pageIndex,\r\n          pageSize: pageSize,\r\n          numberSize: numOfInvestment,\r\n\r\n          handleNext() {\r\n            setPageIndex(pageIndex + 1);\r\n          },\r\n          handlePrevious() {\r\n            setPageIndex(pageIndex - 1);\r\n          }\r\n        }}\r\n        // viewPath={PATH_DASHBOARD.business.details}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\WalletTransactionTable.tsx",["3022","3023","3024","3025"],"import { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from '../../redux/store';\r\nimport { DATA_TYPE, KrowdTable, RowData } from './krowd-table/KrowdTable';\r\nimport { getWalletTransactionList } from 'redux/slices/krowd_slices/transaction';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Card,\r\n  Grid,\r\n  Divider,\r\n  List,\r\n  ListItemButton,\r\n  ListItemText\r\n} from '@mui/material';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport total from '@iconify/icons-eva/text-outline';\r\nimport time from '@iconify/icons-bi/wallet-fill';\r\nimport done from '@iconify/icons-bi/wallet-fill';\r\nimport paytime from '@iconify/icons-bi/wallet-fill';\r\nimport warning from '@iconify/icons-bi/wallet-fill';\r\nimport Scrollbar from 'components/Scrollbar';\r\nimport { Icon } from '@iconify/react';\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'id', label: 'MÃ GIAO DỊCH VÍ', align: 'left' },\r\n  { id: 'type', label: 'LOẠI', align: 'left' },\r\n  { id: 'amount', label: 'SỐ TIỀN', align: 'center' },\r\n  { id: 'fee', label: 'PHÍ GIAO DỊCH', align: 'left' },\r\n  { id: 'description', label: 'NỘI DUNG', align: 'center' },\r\n  { id: 'createDate', label: 'NGÀY THỰC HIỆN', align: 'left' }\r\n];\r\n\r\nexport default function WalletTransactionTable() {\r\n  const { investorKrowdDetail } = useSelector((state: RootState) => state.user_InvestorStateKrowd);\r\n  const { walletTransactionState } = useSelector((state: RootState) => state.transactionKrowd);\r\n  const {\r\n    isLoading,\r\n    listOfWalletTransaction: list,\r\n    filterCount,\r\n    numOfWalletTransaction\r\n  } = walletTransactionState;\r\n  const [selectedFilter, setSelectFilter] = useState('');\r\n  const [filter, setValueFilter] = useState('');\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(8);\r\n\r\n  const { walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n\r\n  useEffect(() => {\r\n    dispatch(getWalletTransactionList(filter, pageIndex ?? 1, 8));\r\n    dispatch(getWalletList());\r\n  }, [dispatch, pageIndex, filter]);\r\n  const addToSelectedFilterList = async (newValue: string) => {\r\n    setSelectFilter(newValue);\r\n    setValueFilter(newValue);\r\n    await dispatch(getWalletTransactionList(newValue, pageIndex ?? 1, 8));\r\n  };\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'id',\r\n            value: _item.id,\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n\r\n          {\r\n            name: 'type',\r\n            value:\r\n              (_item.type === 'CASH_IN' && 'Tiền vào') ||\r\n              (_item.type === 'CASH_OUT' && 'Tiền ra') ||\r\n              (_item.type === 'DEPOSIT' && 'Nạp tiền') ||\r\n              (_item.type === 'WITHDRAW' && 'Rút tiền'),\r\n            type: DATA_TYPE.TEXT,\r\n            textColor:\r\n              (_item.type === 'CASH_IN' && 'green') ||\r\n              (_item.type === 'CASH_OUT' && 'red') ||\r\n              (_item.type === 'DEPOSIT' && 'green') ||\r\n              (_item.type === 'WITHDRAW' ? 'red' : 'green')\r\n          },\r\n          {\r\n            name: 'amount',\r\n            value:\r\n              _item.type === 'CASH_IN' || _item.type === 'DEPOSIT'\r\n                ? `+ ${_item.amount}`\r\n                : `- ${_item.amount}`,\r\n            type: DATA_TYPE.NUMBER_FORMAT,\r\n            textColor: _item.type === 'CASH_IN' || _item.type === 'DEPOSIT' ? 'green' : 'red'\r\n          },\r\n          {\r\n            name: 'fee',\r\n            value: `${_item.fee} %`,\r\n            type: DATA_TYPE.TEXT_FORMAT\r\n          },\r\n          {\r\n            name: 'description',\r\n            value:\r\n              (_item.description === 'Deposit money into I1 wallet' &&\r\n                'Nạp tiền vào VÍ TẠM THỜI của bạn') ||\r\n              (_item.description === 'Transfer money from I1 wallet to I2 wallet' &&\r\n                'Chuyển tiền từ VÍ TẠM THỜI sang VÍ ĐẦU TƯ CHUNG của bạn') ||\r\n              (_item.description === 'Receive money from I1 wallet to I2 wallet' &&\r\n                'Nhận tiền từ VÍ TẠM THỜI sang VÍ ĐẦU TƯ CHUNG của bạn') ||\r\n              (_item.description === 'Receive money from I2 wallet to I1 wallet' &&\r\n                'VÍ TẠM THỜI nhận tiền từ VÍ ĐẦU TƯ CHUNG') ||\r\n              (_item.description === 'Transfer money from I2 wallet to I1 wallet' &&\r\n                'Chuyển tiền từ VÍ ĐẦU TƯ CHUNG sang VÍ TẠM THỜI') ||\r\n              (_item.description === 'Transfer money from I4 wallet to I5 wallet' &&\r\n                'Chuyển tiền từ VÍ DỰ ÁN THANH TOÁN sang VÍ THU TIỀN của bạn') ||\r\n              (_item.description === 'Transfer money from I5 wallet to I2 wallet' &&\r\n                'Chuyển tiền từ VÍ THU TIỀN sang VÍ ĐẦU TƯ CHUNG của bạn') ||\r\n              (_item.description === 'Withdraw money out of I1 wallet' &&\r\n                'Rút tiền từ VÍ TẠM THỜI') ||\r\n              (_item.description ===\r\n                'Transfer money from I3 wallet to P3 wallet to prepare for activation' &&\r\n                'Chuyển tiền từ VÍ TẠM ỨNG của bạn sang VÍ ĐẦU TƯ DỰ ÁN') ||\r\n              (_item.description === 'Receive money from I2 wallet to I3 wallet to invest' &&\r\n                'Nhận tiền đầu tư từ VÍ ĐẦU TƯ CHUNG của bạn sang VÍ TẠM ỨNG của bạn') ||\r\n              (_item.description === 'Transfer money from I2 wallet to I3 wallet to invest' &&\r\n                'Chuyển tiền đầu tư từ VÍ ĐẦU TƯ CHUNG của bạn sang VÍ TẠM ỨNG') ||\r\n              (_item.description ===\r\n                'Recieve money from I3 wallet to P3 wallet to prepare for activation' &&\r\n                'Nhận tiền từ VÍ TẠM ỨNG của bạn sang VÍ ĐẦU TƯ DỰ ÁN') ||\r\n              (_item.description ===\r\n                'Receive money from I3 wallet to P3 wallet for stage payment' &&\r\n                'Nhận tiền từ VÍ TẠM ỨNG của bạn sang VÍ ĐẦU TƯ DỰ ÁN cho giai đoạn') ||\r\n              (_item.description ===\r\n                'Transfer money from I3 wallet to P3 wallet to for stage payment' &&\r\n                'Chuyển tiền từ VÍ TẠM ỨNG của bạn sang VÍ ĐẦU TƯ DỰ ÁN') ||\r\n              (_item.description ===\r\n                'Receive money from I3 wallet to I2 wallet due to investment cancellation' &&\r\n                'VÍ ĐẦU TƯ CHUNG nhận tiền từ VÍ ĐẦU TƯ DỰ ÁN') ||\r\n              (_item.description === 'Receive money from I5 wallet to I1 wallet' &&\r\n                'VÍ TẠM THỜI nhận tiền từ VÍ THU TIỀN') ||\r\n              (_item.description === 'Receive money from I4 wallet to I5 wallet' &&\r\n                'VÍ THU TIỀN nhận tiền từ VÍ DỰ ÁN THANH TOÁN') ||\r\n              (_item.description === 'Transfer money from I4 wallet to I5 wallet' &&\r\n                'Chuyển tiền từ VÍ DỰ ÁN THANH TOÁN sang VÍ THU TIỀN') ||\r\n              (_item.description === 'Transfer money from I5 wallet to I1 wallet' &&\r\n                'VÍ THU TIỀN chuyển tiền sang VÍ TẠM THỜI') ||\r\n              (_item.description ===\r\n                'Transfer money from I3 wallet to I2 wallet due to investment cancellation' &&\r\n                'Bạn hủy đầu tư VÍ ĐẦU TƯ DỰ ÁN chuyển tiền sang VÍ ĐẦU TƯ CHUNG') ||\r\n              (_item.description ===\r\n                'Transfer money from I3 wallet to I2 wallet due to unsuccessful project calling for investment' &&\r\n                'Dự án kêu gọi đầu tư không thành công chuyển tiền từ VÍ ĐẦU TƯ DỰ ÁN sang VÍ ĐẦU TƯ CHUNG') ||\r\n              (_item.description ===\r\n                'Receive money from I3 wallet to I2 wallet due to unsuccessful project calling for investment' &&\r\n                'Dự án kêu gọi đầu tư không thành công VÍ ĐẦU TƯ CHUNG nhận tiền từ VÍ ĐẦU TƯ DỰ ÁN') ||\r\n              (_item.description ===\r\n                'Receive money from P4 wallet to I4 wallet for stage payment' &&\r\n                'VÍ DỰ ÁN THANH TOÁN nhận tiền từ dự án') ||\r\n              (_item.description ===\r\n                'Tranfer money from P4 wallet to I4 wallet for stage payment' &&\r\n                'Chuyển tiền từ VÍ THANH TOÁN DỰ ÁN sang VÍ DỰ ÁN THANH TOÁN cho nhà đầu tư') ||\r\n              (_item.description ===\r\n              'Transfer money from I3 wallet to P3 wallet to for stage payment'\r\n                ? 'Chuyển tiền từ VÍ TẠM ỨNG của bạn sang VÍ ĐẦU TƯ DỰ ÁN'\r\n                : 'Đang cập nhật nội dung'),\r\n            type: DATA_TYPE.TEXT\r\n          },\r\n          {\r\n            name: 'createDate',\r\n            value: _item.createDate.toString().substring(0, 11),\r\n            type: DATA_TYPE.DATE,\r\n            textColor: 'rgb(102, 187, 106)'\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <Scrollbar sx={{ mb: 4 }}>\r\n        <Card\r\n          sx={{\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n            mb: 5,\r\n            width: '1540px',\r\n            minWidth: 1000\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '220px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={total} height={40} width={40} color={'#14b7cc'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: '#14b7cc' }}>TẤT CẢ</Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.all} giao dịch{' '}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            variant=\"fullWidth\"\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />{' '}\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '280px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={time} height={40} width={40} color={'#fc980b'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: '#fc980b' }}>\r\n                VÍ TẠM THỜI\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.i1} giao dịch\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '280px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={warning} height={40} width={40} color={'#14b7cc'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: '#14b7cc' }}>\r\n                VÍ ĐẦU TƯ CHUNG\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.i2} giao dịch\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '280px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={paytime} height={40} width={40} color={'#14b7cc'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: '#14b7cc' }}>\r\n                VÍ ĐẦU TƯ DỰ ÁN\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.i3} giao dịch\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '320px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={done} height={40} width={40} color={'green'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: 'green' }}>\r\n                VÍ DỰ ÁN THANH TOÁN\r\n              </Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.i4} giao dịch{' '}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Divider\r\n            sx={{\r\n              borderWidth: '120px medium 1px 0px',\r\n              borderColor: '#14b7cc',\r\n              height: 'auto',\r\n              alignSelf: 'stretch',\r\n              borderStyle: 'dashed'\r\n            }}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: 'flex',\r\n              flexDirection: 'row',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              width: '280px'\r\n            }}\r\n            gap={2}\r\n          >\r\n            <Box>\r\n              <Icon icon={done} height={40} width={40} color={'green'} />\r\n            </Box>\r\n            <Box>\r\n              <Typography sx={{ py: 0.5, fontSize: '700', color: 'green' }}>VÍ THU TIỀN</Typography>\r\n              <Typography sx={{ fontSize: '20px', fontWeight: 700 }}>\r\n                {filterCount?.i5} giao dịch{' '}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Card>\r\n      </Scrollbar>\r\n      <Grid container sx={{ backgroundColor: '#f7f7f7' }} mb={5}>\r\n        <Grid container sx={{ py: 3, ml: 3, justifyContent: 'space-around' }}>\r\n          {listOfInvestorWallet &&\r\n            listOfInvestorWallet.map((f) => {\r\n              const isSelected = selectedFilter.indexOf(f.id);\r\n              return (\r\n                <List key={f.id} component=\"div\" disablePadding>\r\n                  <ListItemButton onClick={() => addToSelectedFilterList(f.id)}>\r\n                    <ListItemText\r\n                      primary={f.walletType.name}\r\n                      sx={{\r\n                        color: isSelected !== -1 ? 'primary.main' : 'text.secondary'\r\n                      }}\r\n                    />\r\n                  </ListItemButton>\r\n                </List>\r\n              );\r\n            })}\r\n        </Grid>\r\n      </Grid>\r\n      <Box sx={{ mb: 7 }}>\r\n        <KrowdTable\r\n          headingTitle={`GIAO DỊCH Ví`}\r\n          header={TABLE_HEAD}\r\n          getData={getData}\r\n          isLoading={isLoading}\r\n          // viewPath={PATH_DASHBOARD.business.details}\r\n          paging={{\r\n            pageIndex,\r\n            pageSize: pageSize,\r\n            numberSize: numOfWalletTransaction,\r\n\r\n            handleNext() {\r\n              setPageIndex(pageIndex + 1);\r\n            },\r\n            handlePrevious() {\r\n              setPageIndex(pageIndex - 1);\r\n            }\r\n          }}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\ContactMap.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\ContactForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\contact\\ContactHero.tsx",["3026","3027","3028"],"import { motion } from 'framer-motion';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Container, Typography, Grid } from '@mui/material';\r\n//\r\nimport { varFadeIn, varWrapEnter, varFadeInRight, TextAnimate } from '../../animate';\r\nimport DashboardLayoutLearn from 'layouts/learnInvest';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CONTACTS = [\r\n  {\r\n    country: 'Bali',\r\n    address: '508 Bridle Avenue Newnan, GA 30263',\r\n    phoneNumber: '(239) 555-0108'\r\n  },\r\n  {\r\n    country: 'London',\r\n    address: '508 Bridle Avenue Newnan, GA 30263',\r\n    phoneNumber: '(319) 555-0115'\r\n  },\r\n  {\r\n    country: 'Prague',\r\n    address: '508 Bridle Avenue Newnan, GA 30263',\r\n    phoneNumber: '(252) 555-0126'\r\n  },\r\n  {\r\n    country: 'Moscow',\r\n    address: '508 Bridle Avenue Newnan, GA 30263',\r\n    phoneNumber: '(307) 555-0133'\r\n  }\r\n];\r\n\r\nconst RootStyle = styled(motion.div)(({ theme }) => ({\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center',\r\n  // backgroundImage: 'url(/static/overlay.svg), url(/static/contact/hero.jpg)',\r\n  padding: theme.spacing(10, 0),\r\n  [theme.breakpoints.up('md')]: {\r\n    height: 560,\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  textAlign: 'center',\r\n  [theme.breakpoints.up('md')]: {\r\n    textAlign: 'left',\r\n    position: 'absolute',\r\n    bottom: theme.spacing(10)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ContactHero() {\r\n  return (\r\n    <RootStyle initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', height: '100%' }}>\r\n        <ContentStyle>\r\n          <TextAnimate text=\"Where\" sx={{ color: 'primary.main' }} variants={varFadeInRight} />\r\n          <Box>\r\n            <Typography sx={{ mr: 2 }}> How it works</Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mr: 2 }}> How it works</Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mr: 2 }}> How it works</Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mr: 2 }}> How it works</Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mr: 2 }}> How it works</Typography>\r\n          </Box>\r\n          <Box>\r\n            <Typography sx={{ mr: 2 }}> How it works</Typography>\r\n          </Box>\r\n        </ContentStyle>\r\n        <DashboardLayoutLearn />\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\AccountTransactionWithDrawTable.tsx",["3029","3030","3031","3032","3033","3034","3035","3036","3037","3038","3039","3040","3041"],"import { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from '../../redux/store';\r\nimport { DATA_TYPE, KrowdTable, RowData } from './krowd-table/KrowdTable';\r\nimport {\r\n  getTransactionList,\r\n  getWithdrawRequestTransactionList\r\n} from 'redux/slices/krowd_slices/transaction';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  Typography,\r\n  TextField,\r\n  Autocomplete,\r\n  DialogActions,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n  Tooltip,\r\n  Divider,\r\n  CircularProgress,\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio\r\n} from '@mui/material';\r\nimport { Container } from '@mui/system';\r\nimport { fCurrency } from 'utils/formatNumber';\r\nimport { TransactionAPI } from '_apis_/krowd_apis/transaction';\r\nimport { ListOfWithdrawRequest } from '../../@types/krowd/transaction';\r\nimport { useSnackbar } from 'notistack';\r\nimport { LoadingButton } from '@mui/lab';\r\n\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'bankName', label: 'TÊN NGÂN HÀNG', align: 'center' },\r\n  { id: 'bankAccount', label: 'TÀI KHOẢN', align: 'center' },\r\n  { id: 'accountName', label: 'CHỦ TÀI KHOẢN', align: 'center' },\r\n  { id: 'amount', label: 'SỐ TIỀN', align: 'center' },\r\n  { id: 'description', label: 'MÔ TẢ', align: 'center' },\r\n  { id: 'status', label: 'TRẠNG THÁI', align: 'center' },\r\n  { id: 'createDate', label: 'NGÀY THỰC HIỆN', align: 'center' },\r\n  { id: '', label: 'CHI TIẾT', align: 'center' }\r\n];\r\nconst note = [\r\n  {\r\n    name: 'Lưu ý:'\r\n  },\r\n  {\r\n    name: 'Yêu cầu của bạn sẽ được bên KROWD xử lý sớm nhất trong vòng 24 tiếng'\r\n  },\r\n  {\r\n    name: 'Bảng biểu thị thông tin lệnh rút tiền của bạn (Nếu có bất kỳ thắc mắc xin vui lòng liên lạc với bộ phận hỗ trợ của KROWD tại 19007777)'\r\n  }\r\n];\r\nexport default function AccountTransactionWithDrawTable() {\r\n  const { transactionWithdrawState, transactionWithdrawDetail } = useSelector(\r\n    (state: RootState) => state.transactionKrowd\r\n  );\r\n  const { isLoading, listOfWithdrawRequest: list, numOfWithdrawRequest } = transactionWithdrawState;\r\n  const { TransactionWithdrawDetail } = transactionWithdrawDetail;\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageIndexPaging, setPageIndexPaging] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  const [isLoadingButton, setIsLoadingButton] = useState(false);\r\n  const [currentWithdrawRequest, setCurrentWithdrawRequest] = useState<ListOfWithdrawRequest>();\r\n  const [refusalReason, setRefusalReason] = useState<string | null>('Không nhận được tiền');\r\n  const [transferStatus, setTransferStatus] = useState<string>('success');\r\n\r\n  const [file, setFile] = useState<File | null>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(getWithdrawRequestTransactionList(localStorage.getItem('userId') ?? '', pageIndex, 5));\r\n  }, [dispatch, pageIndex]);\r\n  const [open, setOpen] = useState(false);\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleChangeTranferStatus = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTransferStatus((event.target as HTMLInputElement).value);\r\n    setFile(null);\r\n    setRefusalReason('Không nhận được tiền');\r\n  };\r\n  const handleChangeRefusalReason = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRefusalReason((event.target as HTMLInputElement).value);\r\n  };\r\n  const handleSubmitOK = async () => {\r\n    setIsLoadingButton(true);\r\n    await TransactionAPI.approveWithdrawRequest({\r\n      requestId: TransactionWithdrawDetail?.id!,\r\n      receipt: file!\r\n    })\r\n      .then(async () => {\r\n        enqueueSnackbar('Xác nhận thành công', {\r\n          variant: 'success'\r\n        });\r\n        setIsLoadingButton(false);\r\n        handleClose();\r\n        dispatch(\r\n          getWithdrawRequestTransactionList(localStorage.getItem('userId') ?? '', pageIndex, 5)\r\n        );\r\n      })\r\n      .catch(() => {\r\n        enqueueSnackbar('Xác nhận thất bại vui lòng kiểm tra lại', {\r\n          variant: 'error'\r\n        });\r\n      });\r\n  };\r\n  //Reported\r\n  const handleSubmitRefuse = async () => {\r\n    setIsLoadingButton(true);\r\n    await TransactionAPI.reportedWithdrawRequest({\r\n      requestId: TransactionWithdrawDetail?.id!,\r\n      reportMessage: refusalReason!\r\n    })\r\n      .then(async () => {\r\n        enqueueSnackbar('Báo cáo lỗi thành công', {\r\n          variant: 'success'\r\n        });\r\n        setIsLoadingButton(false);\r\n        handleClose();\r\n        getWithdrawRequestTransactionList(localStorage.getItem('userId') ?? '', pageIndex, 5);\r\n      })\r\n      .catch(() => {\r\n        enqueueSnackbar('Báo cáo lỗi thất bại vui lòng kiểm tra lại', {\r\n          variant: 'error'\r\n        });\r\n      });\r\n  };\r\n\r\n  //render action\r\n  const renderSubmitButton = () => {\r\n    if (transferStatus === 'success')\r\n      return (\r\n        <LoadingButton\r\n          variant=\"contained\"\r\n          onClick={handleSubmitOK}\r\n          loading={isLoadingButton}\r\n          loadingIndicator={<CircularProgress color=\"primary\" size={24} />}\r\n          autoFocus\r\n        >\r\n          Xác nhận giao dịch\r\n        </LoadingButton>\r\n      );\r\n    else {\r\n      return (\r\n        <LoadingButton\r\n          variant=\"contained\"\r\n          onClick={handleSubmitRefuse}\r\n          loading={isLoadingButton}\r\n          loadingIndicator={<CircularProgress color=\"primary\" size={24} />}\r\n          autoFocus\r\n        >\r\n          Báo cáo lỗi giao dịch\r\n        </LoadingButton>\r\n      );\r\n    }\r\n  };\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'bankName',\r\n            value: _item.bankName,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'bankAccount',\r\n            value: _item.bankAccount,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'accountName',\r\n            value: _item.accountName,\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor: 'rgb(20, 183, 204)'\r\n          },\r\n\r\n          {\r\n            name: 'amount',\r\n            value: _item.amount,\r\n            type: DATA_TYPE.NUMBER_FORMAT\r\n          },\r\n          {\r\n            name: 'description',\r\n            value: _item.description === 'Withdraw Money' ? 'Rút tiền' : 'Rút tiền',\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor: 'rgb(102, 187, 106)'\r\n          },\r\n          {\r\n            name: 'status',\r\n            value:\r\n              (_item.status === 'PENDING' && 'Đang chờ Krowd duyệt yêu cầu rút tiền') ||\r\n              (_item.status === 'REJECTED' && 'Yêu cầu bị Krowd Admin từ chối') ||\r\n              (_item.status === 'APPROVED' && 'Xác nhận thành công') ||\r\n              (_item.status === 'PARTIAL' && 'Krowd Admin đã chấp nhận') ||\r\n              (_item.status === 'PARTIAL_ADMIN' && 'Báo cáo lỗi về Admin') ||\r\n              (_item.status === 'Transfer from I2 to I3' &&\r\n                'Chuyển tiền từ VÍ ĐẦU TƯ CHUNG sang VÍ TẠM ỨNG') ||\r\n              (_item.status === 'Receive from I2 to I3 ' &&\r\n                'Nhận tiền từ VÍ ĐẦU TƯ CHUNG sang VÍ TẠM ỨNG') ||\r\n              _item.status === 'Receive money from I1 to I2',\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor:\r\n              (_item.status === 'PENDING' && 'black') ||\r\n              (_item.status === 'APPROVED' && 'green') ||\r\n              (_item.status === 'REJECTED' && 'red') ||\r\n              (_item.status === 'PARTIAL_ADMIN' && 'red') ||\r\n              (_item.status === 'PARTIAL' && 'green') ||\r\n              (_item.status === 'WAITING' && '#eacb00') ||\r\n              (_item.status === 'FAILED' ? 'red' : 'black')\r\n          },\r\n          {\r\n            name: 'createDate',\r\n            value: _item.createDate.toString().substring(0, 11),\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor: 'rgb(102, 187, 106)'\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <KrowdTable\r\n        headingTitle=\"lệnh rút tiền\"\r\n        header={TABLE_HEAD}\r\n        getData={getData}\r\n        isLoading={isLoading}\r\n        viewPeriodHistory={() => handleClickOpen()}\r\n        paging={{\r\n          pageIndex: pageIndex,\r\n          pageSize: pageSize,\r\n          numberSize: numOfWithdrawRequest,\r\n\r\n          handleNext() {\r\n            setPageIndex(pageIndex + 1);\r\n          },\r\n          handlePrevious() {\r\n            setPageIndex(pageIndex - 1);\r\n          }\r\n        }}\r\n        noteTable={note}\r\n      />\r\n      <Box>\r\n        {TransactionWithdrawDetail &&\r\n        TransactionWithdrawDetail.status !== 'REJECTED' &&\r\n        TransactionWithdrawDetail.status !== 'REPORTED' &&\r\n        TransactionWithdrawDetail.status !== 'PARTIAL' &&\r\n        TransactionWithdrawDetail.status !== 'PENDING' &&\r\n        TransactionWithdrawDetail.status !== 'PARTIAL_ADMIN' ? (\r\n          <Dialog\r\n            open={open}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <DialogContent>\r\n              <Box mt={1}>\r\n                <DialogContentText\r\n                  sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n                >\r\n                  THÔNG TIN\r\n                </DialogContentText>\r\n              </Box>\r\n              <Stack spacing={{ xs: 2, md: 1 }}>\r\n                <Container sx={{ p: 2 }}>\r\n                  <Box>\r\n                    <Typography sx={{ textAlign: 'center' }} variant={'h5'} color={'green'}>\r\n                      Yêu cầu đã hoàn thành\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Divider sx={{ my: 2 }} />\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tổng số tiền</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      justifyContent: 'space-between',\r\n                      mb: '0.5rem',\r\n                      p: 1\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Số tiền thanh toán</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                    </Typography>\r\n                  </Box>\r\n                  <Divider sx={{ my: 2 }} />\r\n\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Giao dịch</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {/* {resDate} */}\r\n                      Rút tiền khỏi ví\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tên người nhận</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {TransactionWithdrawDetail?.accountName}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Ngân hàng thụ hưởng</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {TransactionWithdrawDetail?.bankName}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18',\r\n                        marginBottom: '0.2rem'\r\n                      }}\r\n                    >\r\n                      <strong>Tài khoản người nhận</strong>\r\n                    </Typography>\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {TransactionWithdrawDetail?.bankAccount}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      display: 'flex',\r\n                      p: 1,\r\n                      justifyContent: 'space-between'\r\n                    }}\r\n                  >\r\n                    <Typography\r\n                      paragraph\r\n                      sx={{\r\n                        color: '#251E18'\r\n                      }}\r\n                    >\r\n                      {TransactionWithdrawDetail && (\r\n                        <img src={TransactionWithdrawDetail?.description} />\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Container>\r\n              </Stack>\r\n              <Box>\r\n                <Button fullWidth color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                  Đóng\r\n                </Button>\r\n              </Box>\r\n              <Box p={3}>\r\n                <Typography variant=\"body2\">\r\n                  Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với bộ\r\n                  phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                </Typography>\r\n              </Box>\r\n            </DialogContent>\r\n          </Dialog>\r\n        ) : (\r\n          <Dialog\r\n            open={open}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            {TransactionWithdrawDetail && TransactionWithdrawDetail.status === 'PARTIAL' && (\r\n              <DialogContent>\r\n                <Box mt={1}>\r\n                  <DialogContentText\r\n                    sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n                  >\r\n                    THÔNG TIN\r\n                  </DialogContentText>\r\n                </Box>\r\n                <Stack spacing={{ xs: 2, md: 1 }}>\r\n                  <Container sx={{ p: 2 }}>\r\n                    <Box>\r\n                      <Typography variant=\"h5\" color={'#ff6a00'} sx={{ textAlign: 'center' }}>\r\n                        Yêu cầu đang chờ bạn xác nhận\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tổng số tiền</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Số tiền thanh toán</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Giao dịch</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {/* {resDate} */}\r\n                        Rút tiền khỏi ví\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tên người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.accountName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Ngân hàng thụ hưởng</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        <strong>Tài khoản người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankAccount}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Divider sx={{ my: 2 }} />\r\n                  </Container>\r\n                </Stack>\r\n                <Box\r\n                  sx={{\r\n                    display: 'flex',\r\n                    justifyContent: 'space-between',\r\n                    mb: '0.5rem',\r\n                    px: 4\r\n                  }}\r\n                >\r\n                  <Stack spacing={{ xs: 2, md: 1 }}>\r\n                    {TransactionWithdrawDetail?.status === 'PARTIAL' && (\r\n                      <Box my={2}>\r\n                        <FormControl>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            <Typography sx={{ fontWeight: 900 }}>Trạng thái</Typography>\r\n                          </DialogContentText>\r\n                          <RadioGroup\r\n                            row\r\n                            aria-labelledby=\"demo-row-radio-buttons-group-label\"\r\n                            name=\"row-radio-buttons-group\"\r\n                            value={transferStatus}\r\n                            onChange={handleChangeTranferStatus}\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"success\"\r\n                              control={<Radio />}\r\n                              label=\"Xác nhận thành công\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"reported\"\r\n                              control={<Radio />}\r\n                              label=\"Báo cáo lỗi\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </FormControl>\r\n                      </Box>\r\n                    )}\r\n                    {TransactionWithdrawDetail?.status === 'PARTIAL' &&\r\n                      transferStatus === 'reported' && (\r\n                        <Box my={1}>\r\n                          <DialogContentText id=\"alert-dialog-description\">\r\n                            <Typography sx={{ fontWeight: 900 }}>Báo cáo lỗi giao dịch</Typography>\r\n                          </DialogContentText>\r\n                          <RadioGroup\r\n                            aria-labelledby=\"demo-radio-buttons-group-label\"\r\n                            defaultValue=\"female\"\r\n                            name=\"radio-buttons-group\"\r\n                            value={refusalReason}\r\n                            onChange={handleChangeRefusalReason}\r\n                          >\r\n                            <FormControlLabel\r\n                              value=\"Không nhận được tiền\"\r\n                              control={<Radio />}\r\n                              label=\"Không nhận được tiền\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"Số tiền chuyển khoản không đúng\"\r\n                              control={<Radio />}\r\n                              label=\"Số tiền chuyển khoản không đúng\"\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"Hình ảnh báo cáo không đúng\"\r\n                              control={<Radio />}\r\n                              label=\"Hình ảnh báo cáo không đúng\"\r\n                            />\r\n                          </RadioGroup>\r\n                        </Box>\r\n                      )}\r\n                  </Stack>\r\n                </Box>\r\n                <Box display={'flex'} justifyContent={'flex-end'}>\r\n                  <Button\r\n                    sx={{ mx: 1 }}\r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    onClick={() => handleClose()}\r\n                  >\r\n                    Đóng\r\n                  </Button>\r\n\r\n                  {renderSubmitButton()}\r\n                </Box>\r\n                <Box p={3}>\r\n                  <Typography variant=\"body2\">\r\n                    Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với\r\n                    bộ phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                  </Typography>\r\n                </Box>\r\n              </DialogContent>\r\n            )}\r\n            {TransactionWithdrawDetail && TransactionWithdrawDetail.status === 'PENDING' && (\r\n              <DialogContent>\r\n                <Box mt={1}>\r\n                  <DialogContentText\r\n                    sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n                  >\r\n                    THÔNG TIN\r\n                  </DialogContentText>\r\n                </Box>\r\n                <Stack spacing={{ xs: 2, md: 1 }}>\r\n                  <Container sx={{ p: 2 }}>\r\n                    <Box>\r\n                      <Typography variant=\"h5\" color={'#ff6a00'} sx={{ textAlign: 'center' }}>\r\n                        Yêu cầu đang chờ xử lý\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tổng số tiền</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Số tiền thanh toán</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Giao dịch</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {/* {resDate} */}\r\n                        Rút tiền khỏi ví\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tên người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.accountName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Ngân hàng thụ hưởng</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tài khoản người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankAccount}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Container>\r\n                </Stack>\r\n                <Box>\r\n                  <Button fullWidth color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                    Đóng\r\n                  </Button>\r\n                </Box>\r\n                <Box p={3}>\r\n                  <Typography variant=\"body2\">\r\n                    Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với\r\n                    bộ phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                  </Typography>\r\n                </Box>\r\n              </DialogContent>\r\n            )}\r\n            {TransactionWithdrawDetail && TransactionWithdrawDetail.status === 'REJECTED' && (\r\n              <DialogContent>\r\n                <Box mt={1}>\r\n                  <DialogContentText\r\n                    sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n                  >\r\n                    THÔNG TIN\r\n                  </DialogContentText>\r\n                </Box>\r\n                <Stack spacing={{ xs: 2, md: 1 }}>\r\n                  <Container sx={{ p: 2 }}>\r\n                    <Box>\r\n                      <Typography variant=\"h5\" color={'red'} sx={{ textAlign: 'center' }}>\r\n                        Yêu cầu đã bị từ chối\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Divider sx={{ my: 2 }} />\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Lý do</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: 'red',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {TransactionWithdrawDetail?.refusalReason}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tổng số tiền</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Số tiền thanh toán</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Giao dịch</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {/* {resDate} */}\r\n                        Rút tiền khỏi ví\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tên người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.accountName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Ngân hàng thụ hưởng</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tài khoản người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankAccount}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Container>\r\n                </Stack>\r\n                <Box>\r\n                  <Button fullWidth color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                    Đóng\r\n                  </Button>\r\n                </Box>\r\n                <Box p={3}>\r\n                  <Typography variant=\"body2\">\r\n                    Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với\r\n                    bộ phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                  </Typography>\r\n                </Box>\r\n              </DialogContent>\r\n            )}\r\n            {TransactionWithdrawDetail && TransactionWithdrawDetail.status === 'PARTIAL_ADMIN' && (\r\n              <DialogContent>\r\n                <Box mt={1}>\r\n                  <DialogContentText\r\n                    sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n                  >\r\n                    THÔNG TIN\r\n                  </DialogContentText>\r\n                </Box>\r\n                <Stack spacing={{ xs: 2, md: 1 }}>\r\n                  <Container sx={{ p: 2 }}>\r\n                    <Box>\r\n                      <Typography variant=\"h5\" color={'red'} sx={{ textAlign: 'center' }}>\r\n                        Yêu cầu báo cáo lỗi\r\n                      </Typography>\r\n                    </Box>\r\n\r\n                    <Divider sx={{ my: 2 }} />\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Lý do</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: 'red',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {TransactionWithdrawDetail?.reportMessage}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tổng số tiền</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        mb: '0.5rem',\r\n                        p: 1\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Số tiền thanh toán</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong> {fCurrency(TransactionWithdrawDetail?.amount ?? '')}</strong>\r\n                      </Typography>\r\n                    </Box>\r\n                    <Divider sx={{ my: 2 }} />\r\n\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Giao dịch</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {/* {resDate} */}\r\n                        Rút tiền khỏi ví\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tên người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.accountName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Ngân hàng thụ hưởng</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankName}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box\r\n                      sx={{\r\n                        display: 'flex',\r\n                        p: 1,\r\n                        justifyContent: 'space-between'\r\n                      }}\r\n                    >\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18',\r\n                          marginBottom: '0.2rem'\r\n                        }}\r\n                      >\r\n                        <strong>Tài khoản người nhận</strong>\r\n                      </Typography>\r\n                      <Typography\r\n                        paragraph\r\n                        sx={{\r\n                          color: '#251E18'\r\n                        }}\r\n                      >\r\n                        {TransactionWithdrawDetail?.bankAccount}\r\n                      </Typography>\r\n                    </Box>\r\n                  </Container>\r\n                </Stack>\r\n                <Box>\r\n                  <Button fullWidth color=\"error\" variant=\"contained\" onClick={() => handleClose()}>\r\n                    Đóng\r\n                  </Button>\r\n                </Box>\r\n                <Box p={3}>\r\n                  <Typography variant=\"body2\">\r\n                    Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với\r\n                    bộ phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n                  </Typography>\r\n                </Box>\r\n              </DialogContent>\r\n            )}\r\n          </Dialog>\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\table\\AccounTransactionTable.tsx",["3042","3043"],"import { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from '../../redux/store';\r\nimport { DATA_TYPE, KrowdTable, RowData } from './krowd-table/KrowdTable';\r\nimport { getTransactionList } from 'redux/slices/krowd_slices/transaction';\r\nconst TABLE_HEAD = [\r\n  { id: 'idx', label: 'STT', align: 'center' },\r\n  { id: 'orderType', label: 'NGUỒN TIỀN', align: 'center' },\r\n  { id: 'transId', label: 'MÃ GIAO DỊCH', align: 'center' },\r\n  { id: 'type', label: 'LOẠI GIAO DỊCH', align: 'center' },\r\n  { id: 'type', label: 'PHƯƠNG THỨC THANH TOÁN', align: 'center' },\r\n  { id: 'message', label: 'TRẠNG THÁI', align: 'center' },\r\n  { id: 'amount', label: 'SỐ TIỀN', align: 'center' },\r\n  { id: 'createDate', label: 'NGÀY THỰC HIỆN', align: 'center' }\r\n];\r\nconst note = [\r\n  {\r\n    name: 'Lưu ý:'\r\n  },\r\n  {\r\n    name: 'Khi giao dịch thành công số tiền của bạn sẽ được chuyển vào VÍ ĐẦU TƯ CHUNG'\r\n  },\r\n  {\r\n    name: 'Nếu có bất kỳ thắc mắc xin vui lòng liên lạc với bộ phận hỗ trợ của KROWD tại 19007777'\r\n  }\r\n];\r\nexport default function AccounTransactionTable() {\r\n  const { transactionState } = useSelector((state: RootState) => state.transactionKrowd);\r\n  const { isLoading, listOfAccountTransaction: list, numOfAccountTransaction } = transactionState;\r\n\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  useEffect(() => {\r\n    dispatch(getTransactionList(pageIndex, pageSize));\r\n  }, [dispatch, pageIndex]);\r\n\r\n  const getData = (): RowData[] => {\r\n    if (!list) return [];\r\n    return list.map<RowData>((_item, _idx) => {\r\n      return {\r\n        id: _item.id,\r\n        items: [\r\n          {\r\n            name: 'idx',\r\n            value: _idx + 1,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n\r\n          {\r\n            name: 'orderType',\r\n            value: '',\r\n            type: _item.orderType === 'momo_wallet' ? DATA_TYPE.ICONS : DATA_TYPE.ICONSKROWD\r\n          },\r\n          {\r\n            name: 'transId',\r\n            value: _item.transId === '0' ? 'Hệ thống' : _item.transId,\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n          {\r\n            name: 'type',\r\n            value:\r\n              (_item.type === 'Top-up' && 'Nạp tiền vào ví') ||\r\n              (_item.type === 'WITHDRAW' && 'Rút tiền') ||\r\n              (_item.type === 'TOP-UP' && 'Nạp tiền vào ví') ||\r\n              (_item.type === 'WAITING' && 'Chờ xử lý'),\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n\r\n          {\r\n            name: 'payType',\r\n            value:\r\n              (_item.payType === 'app' && 'Hệ thống') ||\r\n              (_item.payType === '' && 'Quét mã Momo') ||\r\n              (_item.payType === 'qr' && 'Quét mã Momo'),\r\n            type: DATA_TYPE.NUMBER\r\n          },\r\n\r\n          {\r\n            name: 'message',\r\n            value: _item.message,\r\n            type: DATA_TYPE.NUMBER,\r\n            textColor:\r\n              (_item.message === 'Giao dịch thành công.' && 'rgb(102, 187, 106)') ||\r\n              (_item.message === 'Giao dịch thành công.' ? 'rgb(102, 187, 106)' : 'red')\r\n          },\r\n          {\r\n            name: 'amount',\r\n            value:\r\n              _item.message === 'Giao dịch thành công.' ? `${_item.amount}` : `${_item.amount}`,\r\n            type: DATA_TYPE.NUMBER_FORMAT,\r\n            textColor: _item.message === 'Giao dịch thành công.' ? 'rgb(102, 187, 106)' : 'red'\r\n          },\r\n\r\n          {\r\n            name: 'createDate',\r\n            value: _item.createDate.toString().substring(0, 11),\r\n            type: DATA_TYPE.NUMBER\r\n          }\r\n        ]\r\n      };\r\n    });\r\n  };\r\n  return (\r\n    <KrowdTable\r\n      headingTitle=\"GIAO DỊCH\"\r\n      header={TABLE_HEAD}\r\n      getData={getData}\r\n      isLoading={isLoading}\r\n      noteTable={note}\r\n      paging={{\r\n        pageIndex,\r\n        pageSize: pageSize,\r\n        numberSize: numOfAccountTransaction,\r\n\r\n        handleNext() {\r\n          setPageIndex(pageIndex + 1);\r\n        },\r\n        handlePrevious() {\r\n          setPageIndex(pageIndex - 1);\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\cards\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatWindow.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatSidebar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatSearchResults.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomGroupParticipant.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomOneParticipant.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomAttachment.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoom.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatMessageInput.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatMessageItem.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatMessageList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatHeaderDetail.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatHeaderCompose.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatConversationList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-list\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatConversationItem.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatContactSearch.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatAccount.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailSidebarItem.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailSidebar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailToolbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\AuthLayout.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailItemAction.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailItem.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetailsReplyInput.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetailsToolbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetailsAttachments.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailDetails.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\mail\\MailCompose.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutTestimonials.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutVision.tsx",["3044","3045"],"// material\r\nimport { Box, Container, Typography, Grid } from '@mui/material';\r\n//\r\nimport { varFadeInUp, varFadeIn, MotionInView } from '../../animate';\r\nimport { useTranslation } from 'react-i18next';\r\nimport cookies from 'js-cookie';\r\n//\r\nconst Language = [\r\n  {\r\n    code: 'en',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nexport default function AboutVision() {\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ mt: 10 }}>\r\n      <Box\r\n        sx={{\r\n          mb: 10,\r\n          position: 'relative',\r\n          borderRadius: 2,\r\n          overflow: 'hidden'\r\n        }}\r\n      >\r\n        <img src=\"/static/about/vision.jpg\" alt=\"about-vision\" />\r\n\r\n        <Box\r\n          sx={{\r\n            bottom: { xs: 24, md: 80 },\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n            alignItems: 'center',\r\n            position: 'absolute',\r\n            justifyContent: 'center'\r\n          }}\r\n        >\r\n          {['logo_amazon', 'logo_hbo', 'logo_ibm', 'logo_lya', 'logo_spotify', 'logo_netflix'].map(\r\n            (logo) => (\r\n              <MotionInView key={logo} variants={varFadeIn}>\r\n                <Box\r\n                  component=\"img\"\r\n                  src={`/static/about/${logo}.svg`}\r\n                  sx={{\r\n                    m: { xs: 1.5, md: 3 },\r\n                    height: { xs: 24, md: 32 }\r\n                  }}\r\n                />\r\n              </MotionInView>\r\n            )\r\n          )}\r\n        </Box>\r\n      </Box>\r\n\r\n      <Grid container justifyContent=\"center\">\r\n        <Grid item xs={12} sm={8}>\r\n          <MotionInView variants={varFadeInUp}>\r\n            <Typography variant=\"h3\" sx={{ textAlign: 'center', color: 'rgb(20, 183, 204)' }}>\r\n              {t('aboutus_krowd_vision_title_1')}\r\n            </Typography>\r\n            <Typography variant=\"h4\" sx={{ textAlign: 'center', paddingBottom: '2rem' }}>\r\n              {t('aboutus_krowd_vision_title')}\r\n            </Typography>\r\n            <img src=\"/static/about/halo.jpg\" />\r\n            <Typography sx={{ textAlign: 'left', paddingTop: '2rem' }}>\r\n              {t('aboutus_krowd_vision_description')}\r\n            </Typography>\r\n            <Typography sx={{ textAlign: 'left', paddingTop: '2rem' }}>\r\n              {t('aboutus_krowd_vision_description_2')}\r\n            </Typography>\r\n          </MotionInView>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\index.tsx",["3046","3047"],"import useAuth from 'hooks/useAuth';\r\nimport { Outlet } from 'react-router-dom';\r\n// components\r\n//\r\nimport MainFooter from './MainFooter';\r\nimport MainNavbar from './MainNavbar';\r\nimport MainNavbarLogin from './MainNavbarLogin';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MainLayout() {\r\n  const { user } = useAuth();\r\n  // if (user?.idToken === null) {\r\n  //   return (\r\n  //     <>\r\n  //       <MainNavbar />\r\n  //       <div>\r\n  //         <Outlet />\r\n  //       </div>\r\n  //       <MainFooter />\r\n  //     </>\r\n  //   );\r\n  // } else {\r\n  return (\r\n    <>\r\n      <MainNavbar />\r\n      <div>\r\n        <Outlet />\r\n      </div>\r\n      <MainFooter />\r\n    </>\r\n  );\r\n  // }\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainNavbar.tsx",["3048","3049","3050","3051","3052","3053","3054","3055","3056","3057"],"import { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  Container,\r\n  Typography,\r\n  Link,\r\n  Select,\r\n  FormControl,\r\n  MenuItem,\r\n  Menu\r\n} from '@mui/material';\r\n// hooks\r\nimport useOffSetTop from '../../hooks/useOffSetTop';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport Label from '../../components/Label';\r\nimport { MHidden, MIconButton } from '../../components/@material-extend';\r\n//\r\nimport MenuDesktop from './MenuDesktop';\r\nimport MenuMobile from './MenuMobile';\r\nimport navConfig from './MenuConfig';\r\nimport i18next from 'i18next';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport classNames from 'classnames';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useIsMountedRef from 'hooks/useIsMountedRef';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PATH_AUTH, PATH_DASHBOARD, PATH_PAGE } from 'routes/paths';\r\nimport useLocales from 'hooks/useLocales';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst APP_BAR_MOBILE = 64;\r\nconst APP_BAR_DESKTOP = 88;\r\n\r\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: APP_BAR_MOBILE,\r\n  transition: theme.transitions.create(['height', 'background-color'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  [theme.breakpoints.up('md')]: {\r\n    height: APP_BAR_DESKTOP\r\n  }\r\n}));\r\n// const GlobeIcon = ({ width = 24, height = 24 }) => (\r\n//   <svg\r\n//     xmlns=\"http://www.w3.org/2000/svg\"\r\n//     width={width}\r\n//     height={height}\r\n//     fill=\"currentColor\"\r\n//     className=\"bi bi-globe\"\r\n//     viewBox=\"0 0 16 16\"\r\n//     color=\"#14b7cc\"\r\n//     style={{ marginRight: '3px' }}\r\n//   >\r\n//     <path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z\" />\r\n//   </svg>\r\n// );\r\nconst ToolbarShadowStyle = styled('div')(({ theme }) => ({\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  height: 24,\r\n  zIndex: -1,\r\n  margin: 'auto',\r\n  borderRadius: '50%',\r\n  position: 'absolute',\r\n  width: `calc(100% - 48px)`,\r\n  boxShadow: theme.customShadows.z8\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type MenuItemProps = {\r\n  title: string;\r\n  path: string;\r\n  icon?: JSX.Element;\r\n  to?: string;\r\n  children?: {\r\n    subheader: string;\r\n    items: {\r\n      title: string;\r\n      path: string;\r\n    }[];\r\n  }[];\r\n};\r\n\r\nexport type MenuProps = {\r\n  isOffset: boolean;\r\n  isHome: boolean;\r\n  navConfig: MenuItemProps[];\r\n};\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\nexport default function MainNavbar() {\r\n  const isOffset = useOffSetTop(-1);\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const { user, logout } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout?.();\r\n      if (isMountedRef.current) {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\r\n    }\r\n  };\r\n  const isHome = pathname === '/';\r\n  const initialLanguage = cookies.get('i18next') || 'vi';\r\n  const [currentLanguage, setCurrentLanguage] = useState('');\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setCurrentLanguage(initialLanguage);\r\n    localStorage.setItem('i18nextLng', initialLanguage);\r\n  });\r\n\r\n  // const setLanguage = (newLang: string) => {\r\n  //   localStorage.setItem('i18nextLng', newLang);\r\n  //   const current = localStorage.getItem('i18nextLng')!;\r\n  //   i18next.changeLanguage(current);\r\n  //   setCurrentLanguage(current);\r\n  //   console.log(currentLanguage);\r\n  // };\r\n\r\n  return (\r\n    <AppBar\r\n      sx={{\r\n        boxShadow: 0,\r\n        bgcolor: '#FFFFFF',\r\n        position: 'absolute'\r\n      }}\r\n    >\r\n      <ToolbarStyle\r\n        disableGutters\r\n        sx={{\r\n          ...(isOffset && {\r\n            bgcolor: 'background.default',\r\n            height: { md: APP_BAR_DESKTOP - 16 }\r\n          })\r\n        }}\r\n      >\r\n        <Container\r\n          maxWidth=\"lg\"\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <RouterLink to=\"/\">\r\n            <Logo />\r\n          </RouterLink>\r\n          <Label\r\n            sx={{\r\n              ml: 1,\r\n              color: '#14b7cc',\r\n              backgroundColor: '#fff',\r\n              textTransform: 'uppercase',\r\n              fontSize: '1.25rem'\r\n            }}\r\n          >\r\n            Krowd\r\n          </Label>\r\n          <Box sx={{ flexGrow: 1.4 }} />\r\n\r\n          <MHidden width=\"mdDown\">\r\n            <MenuDesktop\r\n              isOffset={isOffset}\r\n              isHome={isHome}\r\n              navConfig={currentLanguage === 'vi' ? navConfig.vi : navConfig.en}\r\n            />\r\n\r\n            {(user && (\r\n              <>\r\n                <Button\r\n                  sx={{ marginRight: '23px' }}\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? 'basic-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? 'true' : undefined}\r\n                  onClick={handleClick}\r\n                  variant=\"contained\"\r\n                >\r\n                  {user?.fullName}{' '}\r\n                </Button>\r\n                <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                    'aria-labelledby': 'basic-button'\r\n                  }}\r\n                >\r\n                  <MenuItem component={Link} href={'/'}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_landing`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_DASHBOARD.user.account}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_profile`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_DASHBOARD.general.banking}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_console`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_PAGE.pageTopUp}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_wallet`)}\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleLogout}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_logout`)}\r\n                  </MenuItem>\r\n                </Menu>\r\n              </>\r\n            )) || (\r\n              <Button\r\n                sx={{\r\n                  bgcolor: 'rgb(255, 127, 80)',\r\n                  '&:hover': {\r\n                    bgcolor: 'rgb(255, 127, 80)',\r\n                    color: '#ffffff'\r\n                  }\r\n                }}\r\n                size={'medium'}\r\n                variant=\"contained\"\r\n                href={PATH_AUTH.login}\r\n              >\r\n                {t('Navbar_login')}\r\n              </Button>\r\n            )}\r\n            {/* <div className=\"language-select\">\r\n              <div className=\"d-flex justify-content-end align-items-center language-select-root\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    className=\"btn btn-link dropdown-toggle\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenuButton1\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                    style={{\r\n                      color: '#14b7cc',\r\n                      textDecoration: 'solid',\r\n                      paddingRight: '1rem'\r\n                    }}\r\n                  >\r\n                    <GlobeIcon />\r\n                    {t('language')}\r\n                  </button>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                    {Language.map(({ code, name, countryCode }) => {\r\n                      return (\r\n                        <li key={countryCode}>\r\n                          <Link\r\n                            underline=\"none\"\r\n                            sx={{ cursor: 'pointer' }}\r\n                            className={classNames('dropdown-item', {\r\n                              disabled: currentLanguage === code\r\n                            })}\r\n                            onClick={() => setLanguage(code)}\r\n                          >\r\n                            <span\r\n                              className={`/static/icons/ic_flag_${countryCode}.svg`}\r\n                              style={{\r\n                                opacity: currentLanguage === code ? 0.5 : 1\r\n                              }}\r\n                            >\r\n                              <img src={`/static/icons/ic_flag_${countryCode}.svg`} />\r\n                            </span>\r\n                            {name}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n          </MHidden>\r\n          <MHidden width=\"mdUp\">\r\n            <MenuMobile\r\n              isOffset={isOffset}\r\n              isHome={isHome}\r\n              navConfig={currentLanguage === 'vi' ? navConfig.vi : navConfig.en}\r\n            />\r\n          </MHidden>\r\n        </Container>\r\n      </ToolbarStyle>\r\n\r\n      {isOffset && <ToolbarShadowStyle />}\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutWhat.tsx",["3058","3059","3060"],"// material\r\nimport { alpha, useTheme, styled } from '@mui/material/styles';\r\nimport { Box, Grid, Container, Typography } from '@mui/material';\r\n// utils\r\n// import { fPercent } from '../../../utils/formatNumber';\r\n// import mockData from '../../../utils/mock-data';\r\n//\r\nimport { MHidden } from '../../@material-extend';\r\nimport { varFadeInUp, varFadeInRight, MotionInView } from '../../animate';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport cookies from 'js-cookie';\r\n// ----------------------------------------------------------------------\r\n\r\n// const LABEL = ['Development', 'Design', 'Marketing'];\r\n\r\n// const MOCK_SKILLS = [...Array(3)].map((_, index) => ({\r\n//   label: LABEL[index],\r\n//   value: mockData.number.percent(index)\r\n// }));\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  textAlign: 'center',\r\n  paddingTop: theme.spacing(20),\r\n  paddingBottom: theme.spacing(10),\r\n  [theme.breakpoints.up('md')]: {\r\n    textAlign: 'left'\r\n  }\r\n}));\r\nconst Language = [\r\n  {\r\n    code: 'en',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n// ----------------------------------------------------------------------\r\n\r\n// type ProgressItemProps = {\r\n//   progress: {\r\n//     label: string;\r\n//     value: number;\r\n//   };\r\n// };\r\n\r\n// function ProgressItem({ progress }: ProgressItemProps) {\r\n//   const { label, value } = progress;\r\n//   return (\r\n//     <Box sx={{ mt: 3 }}>\r\n//       <Box sx={{ mb: 1.5, display: 'flex', alignItems: 'center' }}>\r\n//         <Typography variant=\"subtitle2\">{label}&nbsp;-&nbsp;</Typography>\r\n//         <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n//           {fPercent(value)}\r\n//         </Typography>\r\n//       </Box>\r\n//       <LinearProgress\r\n//         variant=\"determinate\"\r\n//         value={value}\r\n//         sx={{\r\n//           '& .MuiLinearProgress-bar': { bgcolor: 'grey.700' },\r\n//           '&.MuiLinearProgress-determinate': { bgcolor: 'divider' }\r\n//         }}\r\n//       />\r\n//     </Box>\r\n//   );\r\n// }\r\n\r\nexport default function AboutWhat() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  const shadow = `-40px 40px 80px ${alpha(\r\n    isLight ? theme.palette.grey[500] : theme.palette.common.black,\r\n    0.48\r\n  )}`;\r\n  return (\r\n    <RootStyle>\r\n      <Container maxWidth=\"lg\">\r\n        <Grid container spacing={3}>\r\n          <MHidden width=\"mdDown\">\r\n            <Grid item xs={12} md={6} lg={7} sx={{ pr: { md: 7 } }}>\r\n              <Grid container spacing={3} alignItems=\"flex-end\">\r\n                <Grid item xs={6}>\r\n                  <MotionInView variants={varFadeInUp}>\r\n                    <Box\r\n                      component=\"img\"\r\n                      src=\"/static/about/what-1.jpg\"\r\n                      sx={{\r\n                        borderRadius: 2,\r\n                        boxShadow: shadow\r\n                      }}\r\n                    />\r\n                  </MotionInView>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <MotionInView variants={varFadeInUp}>\r\n                    <Box component=\"img\" src=\"/static/about/what-2.jpg\" sx={{ borderRadius: 2 }} />\r\n                  </MotionInView>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </MHidden>\r\n\r\n          <Grid item xs={12} md={6} lg={5}>\r\n            <MotionInView variants={varFadeInRight}>\r\n              <Typography variant=\"h2\" sx={{ mb: 3 }}>\r\n                {t('aboutus_krowd_title')}\r\n              </Typography>\r\n            </MotionInView>\r\n\r\n            <MotionInView variants={varFadeInRight}>\r\n              <Typography\r\n                sx={{\r\n                  color: (theme) =>\r\n                    theme.palette.mode === 'light' ? 'text.secondary' : 'common.white'\r\n                }}\r\n              >\r\n                {t('aboutus_krowd_1')}\r\n                <br />\r\n                {t('aboutus_krowd_2')}\r\n                {/* Đầu tư cho vay vốn là một hình thức đầu tư trong đó các cá nhân và tổ chức cùng đầu\r\n                tư và tài trợ cho các doanh nghiệp vừa và nhỏ và thu lợi nhuận dưới hình thức lãi\r\n                xuất hàng tháng. Doanh nghiệp sẽ trích một phần doanh thu hàng tháng theo tỉ lệ thỏa\r\n                thuận để hoàn trả vốn và lãi suất cho nhà đầu tư. */}\r\n              </Typography>\r\n            </MotionInView>\r\n\r\n            {/* <Box sx={{ my: 5 }}>\r\n              {MOCK_SKILLS.map((progress) => (\r\n                <MotionInView key={progress.label} variants={varFadeInRight}>\r\n                  <ProgressItem progress={progress} />\r\n                </MotionInView>\r\n              ))}\r\n            </Box>\r\n\r\n            <MotionInView variants={varFadeInRight}>\r\n              <Button\r\n                variant=\"outlined\"\r\n                color=\"inherit\"\r\n                size=\"large\"\r\n                endIcon={<Icon icon={roundArrowRightAlt} width={24} height={24} />}\r\n              >\r\n                Check out our work\r\n              </Button>\r\n            </MotionInView> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutTeam.tsx",["3061","3062","3063","3064","3065"],"import { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport { Icon } from '@iconify/react';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport roundArrowRightAlt from '@iconify/icons-ic/round-arrow-right-alt';\r\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\r\n// material\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { Box, Card, Button, Container, Typography, IconButton } from '@mui/material';\r\n// utils\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport { varFadeIn, varFadeInUp, MotionInView, varFadeInDown } from '../../animate';\r\nimport { CarouselControlsArrowsBasic2 } from '../../carousel';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useEffect } from 'react';\r\nimport classNames from 'classnames';\r\nimport cookies from 'js-cookie';\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_MEMBERS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  name: mockData.name.fullName(index),\r\n  role: mockData.role(index),\r\n  avatar: mockData.image.avatar(index)\r\n}));\r\n\r\n//\r\nconst Language = [\r\n  {\r\n    code: 'en',\r\n    countryCode: 'vn',\r\n    name: 'Tiếng Việt'\r\n  },\r\n  {\r\n    code: 'am',\r\n    countryCode: 'en',\r\n    name: 'English'\r\n  }\r\n];\r\n//----------------------------------------------------------------\r\n\r\ntype MemberCardProps = {\r\n  member: {\r\n    id: string;\r\n    name: string;\r\n    role: string | undefined;\r\n    avatar: string;\r\n  };\r\n};\r\n\r\nfunction MemberCard({ member }: MemberCardProps) {\r\n  const { name, role, avatar } = member;\r\n  return (\r\n    <Card key={name} sx={{ p: 1, mx: 1.5 }}>\r\n      <Typography variant=\"subtitle1\" sx={{ mt: 2, mb: 0.5 }}>\r\n        {name}\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ mb: 2, color: 'text.secondary' }}>\r\n        {role}\r\n      </Typography>\r\n      <Box component=\"img\" src={avatar} sx={{ borderRadius: 1.5 }} />\r\n      <Box sx={{ mt: 2, mb: 1 }}>\r\n        {[facebookFill, instagramFilled, linkedinFill, twitterFill].map((social, index) => (\r\n          <IconButton key={index}>\r\n            <Icon icon={social} width={20} height={20} />\r\n          </IconButton>\r\n        ))}\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\nexport default function AboutTeam() {\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  const carouselRef = useRef<Slider>(null);\r\n  const theme = useTheme();\r\n\r\n  const settings = {\r\n    slidesToShow: 5,\r\n    centerMode: true,\r\n    centerPadding: '0 80px',\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    responsive: [\r\n      {\r\n        breakpoint: 1279,\r\n        settings: { slidesToShow: 4 },\r\n        transForm: 'translateY(-30px)'\r\n      },\r\n      {\r\n        breakpoint: 959,\r\n        settings: { slidesToShow: 2 },\r\n        transForm: 'translateY(-20px)'\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: { slidesToShow: 1 },\r\n        transForm: 'translateY(-40px)'\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current?.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current?.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\" sx={{ pb: 10, textAlign: 'center' }}>\r\n      <MotionInView variants={varFadeInDown}>\r\n        <Typography component=\"p\" variant=\"overline\" sx={{ mb: 2, color: 'text.secondary' }}>\r\n          KROWD TEAM\r\n        </Typography>\r\n      </MotionInView>\r\n\r\n      {/* <MotionInView variants={varFadeInUp}>\r\n        <Typography variant=\"h2\" sx={{ mb: 3 }}>\r\n          Great team is the key\r\n        </Typography>\r\n      </MotionInView> */}\r\n\r\n      <MotionInView variants={varFadeInUp}>\r\n        <Typography\r\n          sx={{\r\n            mb: 10,\r\n            mx: 'auto',\r\n            maxWidth: 630,\r\n            color: (theme) => (theme.palette.mode === 'light' ? 'text.secondary' : 'common.white')\r\n          }}\r\n        >\r\n          {t('aboutus_krowd_sologan_1')}\r\n        </Typography>\r\n      </MotionInView>\r\n\r\n      <Box sx={{ position: 'relative' }}>\r\n        <Slider ref={carouselRef} {...settings}>\r\n          {MOCK_MEMBERS.map((member) => (\r\n            <MotionInView key={member.id} variants={varFadeIn}>\r\n              <MemberCard member={member} />\r\n            </MotionInView>\r\n          ))}\r\n        </Slider>\r\n        <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n      </Box>\r\n      {/* <Button\r\n        variant=\"outlined\"\r\n        color=\"inherit\"\r\n        size=\"large\"\r\n        endIcon={<Icon icon={roundArrowRightAlt} width={24} height={24} />}\r\n        sx={{ mx: 'auto' }}\r\n      >\r\n        View all team members\r\n      </Button> */}\r\n    </Container>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\about-krowd\\AboutHero.tsx",["3066","3067"],"import { motion } from 'framer-motion';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Container, Typography } from '@mui/material';\r\n//\r\nimport { varWrapEnter, varFadeInRight, TextAnimate } from '../../animate';\r\n// import cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport cookies from 'js-cookie';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(motion.div)(({ theme }) => ({\r\n  backgroundSize: 'cover',\r\n  backgroundPosition: 'center',\r\n  // backgroundImage: 'url(/static/overlay.svg), url(/static/about/hero.jpg)',\r\n  backgroundImage: 'url(/static/overlay.svg), url(/static/media/overlay.cb8ff19f.svg)',\r\n  padding: theme.spacing(10, 0),\r\n  [theme.breakpoints.up('md')]: {\r\n    height: 560,\r\n    padding: 0\r\n  }\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  textAlign: 'center',\r\n  [theme.breakpoints.up('md')]: {\r\n    textAlign: 'left',\r\n    position: 'absolute',\r\n    bottom: theme.spacing(10)\r\n  }\r\n}));\r\nconst Language = [\r\n  {\r\n    code: 'en',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AboutHero() {\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  return (\r\n    <RootStyle initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      <Container maxWidth=\"lg\" sx={{ position: 'relative', height: '100%' }}>\r\n        <ContentStyle sx={{ mb: 7 }}>\r\n          <TextAnimate\r\n            text={t('Who')}\r\n            sx={{ color: 'primary.main', mr: 2, gap: 1 }}\r\n            variants={varFadeInRight}\r\n          />\r\n          <TextAnimate\r\n            sx={{ display: 'inline-flex', color: 'common.white', mr: 2 }}\r\n            text={t('Are')}\r\n          />\r\n          <TextAnimate\r\n            text={t('we')}\r\n            sx={{ display: 'inline-flex', color: 'common.white', mr: 2 }}\r\n          />\r\n          <motion.div variants={varFadeInRight}>\r\n            <Typography\r\n              variant=\"h4\"\r\n              sx={{\r\n                mt: 5,\r\n                color: 'common.white',\r\n                fontWeight: 'fontWeightMedium'\r\n              }}\r\n            >\r\n              {t('aboutus_hero')}\r\n              <br /> {t('aboutus_hero_1')}\r\n            </Typography>\r\n          </motion.div>\r\n        </ContentStyle>\r\n      </Container>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\learnInvest\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\UserMoreMenu.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\UserListToolbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\list\\UserListHead.tsx",["3068"],"// material\r\nimport { visuallyHidden } from '@mui/utils';\r\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype UserListHeadProps = {\r\n  order: 'asc' | 'desc';\r\n  orderBy: string;\r\n  rowCount: number;\r\n  headLabel: any[];\r\n  numSelected: number;\r\n  onRequestSort: (id: string) => void;\r\n};\r\n\r\nexport default function UserListHead({\r\n  order,\r\n  orderBy,\r\n  rowCount,\r\n  headLabel,\r\n  numSelected,\r\n  onRequestSort\r\n}: UserListHeadProps) {\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headLabel.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.align}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              hideSortIcon\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={() => onRequestSort(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box sx={{ ...visuallyHidden }}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountBillingInvoiceHistory.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountGeneral.tsx",["3069","3070","3071","3072","3073","3074","3075","3076","3077","3078","3079","3080"],"import * as Yup from 'yup';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  FormControlLabel,\r\n  Typography,\r\n  FormHelperText,\r\n  Button\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// hooks\r\nimport useAuth from '../../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../../hooks/useIsMountedRef';\r\nimport { UploadAvatar } from '../../../upload';\r\n// @types\r\nimport { User } from '../../../../@types/account';\r\nimport { useSelector } from 'react-redux';\r\nimport { dispatch, RootState } from 'redux/store';\r\nimport { getUserKrowdDetail } from 'redux/slices/krowd_slices/investor';\r\nimport { InvestorAPI } from '_apis_/krowd_apis/investor';\r\nimport { User_Investor } from '../../../../@types/krowd/investor';\r\n//\r\n\r\n// ----------------------------------------------------------------------\r\ntype UserAccountProps = {\r\n  investor: User_Investor;\r\n};\r\nexport default function AccountGeneral({ investor }: UserAccountProps) {\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [fileUpload, setFileUpload] = useState<File | null>(null);\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    phoneNum,\r\n    email,\r\n    gender,\r\n    dateOfBirth,\r\n    role,\r\n    status,\r\n    address,\r\n    bankName,\r\n    bankAccount,\r\n    taxIdentificationNumber,\r\n    city,\r\n    district,\r\n    idCard\r\n  } = investor;\r\n  const formikImage = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      photoURL: investor.image\r\n    },\r\n    onSubmit: async (values, { setSubmitting }) => {\r\n      try {\r\n        setSubmitting(true);\r\n        await InvestorAPI.postImage({ investorId: investor.id, files: fileUpload })\r\n          .then(() => {\r\n            enqueueSnackbar('Cập nhật ảnh thành công', {\r\n              variant: 'success'\r\n            });\r\n            dispatch(getUserKrowdDetail(investor.id));\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Cập nhật ảnh thất bại', {\r\n              variant: 'error'\r\n            });\r\n            setFileUpload(null);\r\n            setFieldValueImage('photoURL', null);\r\n          });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n  const {\r\n    errors: errorsImage,\r\n    values: valuesImage,\r\n    touched: touchedImage,\r\n    handleSubmit: handleSubmitImage,\r\n    isSubmitting: isSubmittingImage,\r\n    setFieldValue: setFieldValueImage\r\n  } = formikImage;\r\n\r\n  const handleDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n      if (file) {\r\n        setFieldValueImage('photoURL', {\r\n          ...file,\r\n          preview: URL.createObjectURL(file)\r\n        });\r\n        setFileUpload(file);\r\n      }\r\n    },\r\n    [setFieldValueImage]\r\n  );\r\n  return (\r\n    <FormikProvider value={formikImage}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmitImage}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={4}>\r\n            <Box my={3}>\r\n              <UploadAvatar\r\n                accept=\"image/*\"\r\n                file={valuesImage.photoURL}\r\n                maxSize={3145728}\r\n                onDrop={handleDrop}\r\n                error={Boolean(touchedImage.photoURL && errorsImage.photoURL)}\r\n              />\r\n              {fileUpload && (\r\n                <Box display=\"flex\" my={3} justifyContent=\"space-evenly\">\r\n                  <LoadingButton\r\n                    color=\"warning\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    loading={isSubmittingImage}\r\n                  >\r\n                    Lưu\r\n                  </LoadingButton>\r\n                  <Button\r\n                    color=\"error\"\r\n                    variant=\"contained\"\r\n                    onClick={() => {\r\n                      setFileUpload(null);\r\n                      setFieldValueImage('photoURL', investor.image);\r\n                    }}\r\n                  >\r\n                    Hủy\r\n                  </Button>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={{ xs: 2, md: 3 }}>\r\n                <Typography sx={{ fontWeight: '700' }}>Thông tin cá nhân</Typography>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Họ và tên\"\r\n                    value={`${firstName} ${lastName}`}\r\n                  />\r\n                  <TextField fullWidth disabled label=\"Email\" value={email} />\r\n                </Stack>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Ngày sinh\"\r\n                    value={dateOfBirth ?? '<Chưa cập nhật>'}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Giới tính\"\r\n                    value={gender ?? '<Chưa cập nhật>'}\r\n                  />\r\n                  <TextField fullWidth disabled label=\"SĐT\" value={phoneNum ?? '<Chưa cập nhật>'} />\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"CMND/CCCD\"\r\n                    value={idCard ?? '<Chưa cập nhật>'}\r\n                  />\r\n                </Stack>\r\n                <Typography sx={{ fontWeight: '700' }}>Địa chỉ</Typography>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Số nhà, tên đường\"\r\n                    value={address ?? '<Chưa cập nhật>'}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Thành phố\"\r\n                    value={city ?? '<Chưa cập nhật>'}\r\n                  />\r\n                  <TextField\r\n                    sx={{ width: '500px' }}\r\n                    disabled\r\n                    label=\"Quận\"\r\n                    value={district ?? '<Chưa cập nhật>'}\r\n                  />\r\n                </Stack>\r\n                <Typography sx={{ fontWeight: '700' }}>Ngân hàng</Typography>\r\n                <Stack direction={{ xs: 'column', md: 'row' }} spacing={2}>\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Tên ngân hàng\"\r\n                    value={bankName ?? '<Chưa cập nhật>'}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"Số tài khoản\"\r\n                    value={bankAccount ?? '<Chưa cập nhật>'}\r\n                  />\r\n                  <TextField\r\n                    fullWidth\r\n                    disabled\r\n                    label=\"MST\"\r\n                    value={taxIdentificationNumber ?? '<Chưa cập nhật>'}\r\n                  />\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\cards\\UserCard.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\chat\\ChatRoomPopup.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\ProjectEntitytForm.tsx",["3081","3082","3083","3084","3085","3086"],"import * as Yup from 'yup';\r\nimport React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Stack,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  Autocomplete\r\n} from '@mui/material';\r\n// utils\r\nimport { useNavigate } from 'react-router-dom';\r\n// @types\r\nimport { NewProjectEntityFormValues } from '../../../../@types/krowd/project';\r\n//\r\nimport { QuillEditor } from '../../../editor';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { PATH_DASHBOARD } from 'routes/paths';\r\nimport { RootState } from 'redux/store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype ProjectEntityNewFormProps = {\r\n  isEdit: boolean;\r\n  currentField?: NewProjectEntityFormValues;\r\n};\r\n// export default function ProjectEntitytForm({ isEdit, currentField }: ProjectEntityNewFormProps) {\r\nexport default function ProjectEntitytForm() {\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { detailOfProject } = useSelector((state: RootState) => state.project);\r\n  const { detailOfProjectID: projectID } = detailOfProject;\r\n\r\n  const handleOpenPreview = () => {\r\n    navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessDetails);\r\n  };\r\n\r\n  // const handleClosePreview = () => {\r\n  //   navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessKrowd);\r\n  // };\r\n\r\n  const NewProjectSchema = Yup.object().shape({\r\n    projectId: Yup.string().required('Yêu cầu nhập dự án'),\r\n    type: Yup.string().required('Yêu cầu nhập thể loại'),\r\n    title: Yup.string().required('Yêu cầu nhập tên'),\r\n    content: Yup.string().min(10).required('Yêu cầu nhập nội dung chi tiết')\r\n  });\r\n\r\n  const formik = useFormik<NewProjectEntityFormValues>({\r\n    // initialValues: {\r\n    //   projectId: projectID!.id,\r\n    //   type: currentField?.type || '',\r\n    //   title: currentField?.title || '',\r\n    //   link: currentField?.link || '',\r\n    //   content: currentField?.content || '',\r\n    //   description: currentField?.description || ''\r\n    // },\r\n    initialValues: {\r\n      projectId: projectID!.id,\r\n      type: 'PITCH',\r\n      title: '',\r\n      link: '',\r\n      content: '',\r\n      description: ''\r\n    },\r\n    validationSchema: NewProjectSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('projectId', projectID!.id);\r\n        formData.append('type', 'PITCH');\r\n        formData.append('title', values.title);\r\n        formData.append('content', values.content);\r\n        await fetch(\r\n          `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/project_entities`,\r\n          { method: 'POST', mode: 'cors', body: formData }\r\n        );\r\n        resetForm();\r\n        setSubmitting(true);\r\n        enqueueSnackbar('Tạo mới thành công', {\r\n          variant: 'success'\r\n        });\r\n        navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessDetails);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n  //     if (!isEdit) {\r\n  //       try {\r\n  //         const formData = new FormData();\r\n  //         formData.append('projectId', projectID!.id);\r\n  //         formData.append('type', values.type);\r\n  //         formData.append('title', values.title);\r\n  //         formData.append('link', values.link);\r\n  //         formData.append('content', values.content);\r\n  //         formData.append('description', values.description);\r\n  //         await fetch(\r\n  //           `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/project_entities`,\r\n  //           { method: 'POST', mode: 'cors', body: formData }\r\n  //         );\r\n  //         resetForm();\r\n  //         setSubmitting(true);\r\n  //         enqueueSnackbar('Tạo mới thành công', {\r\n  //           variant: 'success'\r\n  //         });\r\n  //         navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessDetails);\r\n  //       } catch (error) {\r\n  //         console.error(error);\r\n  //         setSubmitting(false);\r\n  //       }\r\n  //     } else {\r\n  //       try {\r\n  //         const formData = new FormData();\r\n  //         formData.append('projectId', projectID!.id);\r\n  //         formData.append('type', values.type);\r\n  //         formData.append('title', values.title);\r\n  //         formData.append('link', values.link);\r\n  //         formData.append('content', values.content);\r\n  //         formData.append('description', values.description);\r\n  //         await fetch(\r\n  //           `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/project_entities/${currentField?.projectId}`,\r\n  //           { method: 'PUT', mode: 'cors', body: formData }\r\n  //         );\r\n  //         resetForm();\r\n  //         setSubmitting(true);\r\n  //         enqueueSnackbar('Tạo mới thành công', {\r\n  //           variant: 'success'\r\n  //         });\r\n  //         navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessDetails);\r\n  //       } catch (error) {\r\n  //         console.error(error);\r\n  //         setSubmitting(false);\r\n  //       }\r\n  //     }\r\n  //   }\r\n  // });\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } =\r\n    formik;\r\n  console.log(formik);\r\n\r\n  return (\r\n    <>\r\n      <FormikProvider value={formik}>\r\n        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Stack spacing={3}>\r\n              <LabelStyle>Nổi bật</LabelStyle>\r\n\r\n              <TextField\r\n                sx={{ legend: { span: { mt: 1 } } }}\r\n                label=\"Tên\"\r\n                {...getFieldProps('title')}\r\n                error={Boolean(touched.title && errors.title)}\r\n                helperText={touched.title && errors.title}\r\n                variant=\"outlined\"\r\n              />\r\n              {/* <Stack spacing={3}>\r\n                <Autocomplete\r\n                  freeSolo\r\n                  onChange={(event, newValue) => {\r\n                    setFieldValue('type', newValue);\r\n                  }}\r\n                  options={projectID!.projectEntity.map((option) => option.type)}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Thể loại\"\r\n                      inputProps={{\r\n                        ...params.inputProps\r\n                      }}\r\n                    />\r\n                  )}\r\n                />\r\n              </Stack> */}\r\n\r\n              {/* <TextField\r\n                fullWidth\r\n                label=\"Đường dẫn\"\r\n                {...getFieldProps('link')}\r\n                error={Boolean(touched.link && errors.link)}\r\n                helperText={touched.link && errors.link}\r\n              /> */}\r\n              {/* <Stack spacing={3}>\r\n                    <Autocomplete\r\n                      freeSolo\r\n                      onChange={(event, newValue) => {\r\n                        setFieldValue('areaId', newValue);\r\n                      }}\r\n                      options={areaList.map((option) => option.id)}\r\n                      renderInput={(params) => <TextField {...params} label=\"Khu vực\" />}\r\n                    />\r\n                  </Stack> */}\r\n              {/* <TextField\r\n                fullWidth\r\n                label=\"Mô tả thông tin\"\r\n                {...getFieldProps('description')}\r\n                error={Boolean(touched.description && errors.description)}\r\n                helperText={touched.description && errors.description}\r\n              /> */}\r\n            </Stack>\r\n          </Card>\r\n          <div>\r\n            <LabelStyle sx={{ py: 4 }}>Mô tả thông tin</LabelStyle>\r\n            <QuillEditor\r\n              id=\"post-content\"\r\n              value={values.content}\r\n              onChange={(val) => setFieldValue('content', val)}\r\n              error={Boolean(touched.content && errors.content)}\r\n            />\r\n            {touched.content && errors.content && (\r\n              <FormHelperText error sx={{ px: 2, textTransform: 'capitalize' }}>\r\n                {touched.content && errors.content}\r\n              </FormHelperText>\r\n            )}\r\n          </div>\r\n\r\n          <Stack direction=\"row\" justifyContent=\"flex-end\" sx={{ mt: 3 }}>\r\n            <Button\r\n              fullWidth\r\n              type=\"button\"\r\n              color=\"inherit\"\r\n              variant=\"outlined\"\r\n              size=\"large\"\r\n              onClick={handleOpenPreview}\r\n              sx={{ mr: 1.5 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <LoadingButton\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              loading={isSubmitting}\r\n            >\r\n              Tạo mới\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n\r\n      {/* <BlogNewPostPreview\r\n        formik={formik}\r\n        isOpenPreview={open}\r\n        onClosePreview={handleClosePreview}\r\n      /> */}\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\ProjectEntitytMediaForm.tsx",["3087","3088","3089","3090","3091","3092","3093","3094","3095"],"import * as Yup from 'yup';\r\nimport React from 'react';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Stack,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  Autocomplete\r\n} from '@mui/material';\r\n// utils\r\nimport { useNavigate } from 'react-router-dom';\r\n// @types\r\nimport { NewProjectEntityFormValues } from '../../../../@types/krowd/project';\r\n//\r\nimport { QuillEditor } from '../../../editor';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { PATH_DASHBOARD } from 'routes/paths';\r\nimport { RootState } from 'redux/store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LabelStyle = styled(Typography)(({ theme }) => ({\r\n  ...theme.typography.subtitle2,\r\n  color: theme.palette.text.secondary,\r\n  marginBottom: theme.spacing(1)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProjectEntitytDocumentForm() {\r\n  const [open, setOpen] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const { detailOfProject } = useSelector((state: RootState) => state.project);\r\n  const { detailOfProjectID: projectID } = detailOfProject;\r\n  const handleOpenPreview = () => {\r\n    navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessDetails);\r\n  };\r\n\r\n  const NewProjectSchema = Yup.object().shape({\r\n    projectId: Yup.string().required('Yêu cầu nhập dự án'),\r\n    title: Yup.string().required('Yêu cầu nhập tên'),\r\n    description: Yup.string().required('Yêu cầu nhập mô tả'),\r\n    link: Yup.string().required('Yêu cầu nhập đường dẫn')\r\n  });\r\n\r\n  const formik = useFormik<NewProjectEntityFormValues>({\r\n    initialValues: {\r\n      projectId: projectID!.id,\r\n      type: 'MEDIA',\r\n      title: '',\r\n      link: '',\r\n      content: '',\r\n      description: ''\r\n    },\r\n    validationSchema: NewProjectSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append('projectId', projectID!.id);\r\n        formData.append('type', 'MEDIA');\r\n        formData.append('title', values.title);\r\n        formData.append('link', values.link);\r\n        formData.append('description', values.description);\r\n        await fetch(\r\n          `https://ec2-13-215-197-250.ap-southeast-1.compute.amazonaws.com/api/v1.0/project_entities`,\r\n          { method: 'POST', mode: 'cors', body: formData }\r\n        );\r\n        resetForm();\r\n        setSubmitting(true);\r\n        enqueueSnackbar('Tạo mới thành công', {\r\n          variant: 'success'\r\n        });\r\n        navigate(PATH_DASHBOARD.projectsBusiness.projectBusinessDetails);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } =\r\n    formik;\r\n  console.log(formik);\r\n\r\n  return (\r\n    <>\r\n      <FormikProvider value={formik}>\r\n        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n          <Card sx={{ p: 3 }}>\r\n            <Stack spacing={3}>\r\n              <LabelStyle>Truyền thông</LabelStyle>\r\n\r\n              <TextField\r\n                sx={{ legend: { span: { mt: 1 } } }}\r\n                label=\"Tên\"\r\n                {...getFieldProps('title')}\r\n                error={Boolean(touched.title && errors.title)}\r\n                helperText={touched.title && errors.title}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Đường dẫn\"\r\n                {...getFieldProps('link')}\r\n                error={Boolean(touched.link && errors.link)}\r\n                helperText={touched.link && errors.link}\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Mô tả thông tin\"\r\n                {...getFieldProps('description')}\r\n                error={Boolean(touched.description && errors.description)}\r\n                helperText={touched.description && errors.description}\r\n              />\r\n            </Stack>\r\n          </Card>\r\n\r\n          <Stack direction=\"row\" justifyContent=\"flex-end\" sx={{ mt: 3 }}>\r\n            <Button\r\n              fullWidth\r\n              type=\"button\"\r\n              color=\"inherit\"\r\n              variant=\"outlined\"\r\n              size=\"large\"\r\n              onClick={handleOpenPreview}\r\n              sx={{ mr: 1.5 }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <LoadingButton\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              size=\"large\"\r\n              loading={isSubmitting}\r\n            >\r\n              Tạo mới\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Form>\r\n      </FormikProvider>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\project\\projectEntity\\KrowdNewProjectOwnerForm.tsx",["3096","3097","3098","3099"],"import * as Yup from 'yup';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// material\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Stack, TextField, Typography, Alert, InputAdornment, IconButton } from '@mui/material';\r\n// @types\r\nimport { NewProjectEntityFormValues } from '../../../../@types/krowd/project';\r\nimport { MIconButton } from 'components/@material-extend';\r\nimport { Icon } from '@iconify/react';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useIsMountedRef from 'hooks/useIsMountedRef';\r\nimport { PATH_DASHBOARD } from 'routes/paths';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ProjectEntitytForm() {\r\n  type InitialValues = {\r\n    email: string;\r\n    password: string;\r\n    firstName: string;\r\n    lastName: string;\r\n    afterSubmit?: string;\r\n  };\r\n\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const navigate = useNavigate();\r\n  const handleOpenPreview = () => {\r\n    navigate(PATH_DASHBOARD.userKrowd.list);\r\n  };\r\n  const RegisterSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(2, 'Quá ngắn!')\r\n      .max(50, 'Quá dài!')\r\n      .required('Yêu cầu nhập tên của bạn'),\r\n    lastName: Yup.string()\r\n      .min(2, 'Quá ngắn')\r\n      .max(50, 'Quá dài!')\r\n      .required('Yêu cầu nhập họ của bạn'),\r\n    email: Yup.string().email('Email phải đúng định dạng').required('Yêu cầu nhập Phone'),\r\n    password: Yup.string().required('Yêu cầu nhập mật khẩu')\r\n  });\r\n\r\n  const formik = useFormik<InitialValues>({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n      password: ''\r\n    },\r\n    validationSchema: RegisterSchema,\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        enqueueSnackbar('Đăng ký thành công', {\r\n          variant: 'success',\r\n          action: (key) => (\r\n            <MIconButton size=\"small\" onClick={() => closeSnackbar(key)}>\r\n              <Icon icon={closeFill} />\r\n            </MIconButton>\r\n          )\r\n        });\r\n        navigate(PATH_DASHBOARD.userKrowd.list);\r\n      } catch (error) {\r\n        console.error(error);\r\n        if (isMountedRef.current) {\r\n          setSubmitting(false);\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, touched, handleSubmit, isSubmitting, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Stack spacing={3}>\r\n          {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\r\n\r\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Tên của bạn\"\r\n              {...getFieldProps('firstName')}\r\n              error={Boolean(touched.firstName && errors.firstName)}\r\n              helperText={touched.firstName && errors.firstName}\r\n            />\r\n\r\n            <TextField\r\n              fullWidth\r\n              label=\"Họ của bạn\"\r\n              {...getFieldProps('lastName')}\r\n              error={Boolean(touched.lastName && errors.lastName)}\r\n              helperText={touched.lastName && errors.lastName}\r\n            />\r\n          </Stack>\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"username\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            {...getFieldProps('email')}\r\n            error={Boolean(touched.email && errors.email)}\r\n            helperText={touched.email && errors.email}\r\n          />\r\n\r\n          <TextField\r\n            fullWidth\r\n            autoComplete=\"current-password\"\r\n            type={showPassword ? 'text' : 'password'}\r\n            label=\"Mật khẩu\"\r\n            {...getFieldProps('password')}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton edge=\"end\" onClick={() => setShowPassword((prev) => !prev)}>\r\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            error={Boolean(touched.password && errors.password)}\r\n            helperText={touched.password && errors.password}\r\n          />\r\n          <Stack direction=\"row\" justifyContent=\"flex-end\" sx={{ mt: 3 }}>\r\n            <LoadingButton\r\n              fullWidth\r\n              type=\"button\"\r\n              color=\"error\"\r\n              variant=\"outlined\"\r\n              size=\"large\"\r\n              onClick={handleOpenPreview}\r\n              sx={{ mr: 1.5 }}\r\n            >\r\n              Cancel\r\n            </LoadingButton>\r\n            <LoadingButton\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              loading={isSubmitting}\r\n            >\r\n              Đăng ký\r\n            </LoadingButton>\r\n          </Stack>\r\n        </Stack>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\getFileFormat.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfilePostInput.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\EmojiPicker.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileSocialInfo.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\BadgeStatus.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileFollowInfo.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileFollowers.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileAbout.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfilePostCard.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileGallery.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileFriends.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\verify-code\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\ProfileCover.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\createAvatar.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceCurrentBalance.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceLatestProducts.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceSalesOverview.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceSaleByGender.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceYearlySales.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceTotalBalance.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceProductSold.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceSalesProfit.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceBestSalesman.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceNewProducts.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-ecommerce\\EcommerceWelcome.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingExpensesCategories.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\EmptyContent.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\UploadAvatar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\login\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\UploadSingleFile.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\upload\\UploadMultiFile.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopProductSort.tsx",["3100"],"import { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport chevronUpFill from '@iconify/icons-eva/chevron-up-fill';\r\nimport chevronDownFill from '@iconify/icons-eva/chevron-down-fill';\r\n// material\r\nimport { Menu, Button, MenuItem, Typography } from '@mui/material';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../../redux/store';\r\nimport { sortByProducts } from '../../../../redux/slices/product';\r\n// @types\r\nimport { ProductState } from '../../../../@types/products';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\n// ----------------------------------------------------------------------\r\nconst SORT_BY_OPTIONS_CONFIG = {\r\n  vi: [\r\n    {\r\n      value: 'featured',\r\n      label: 'Ngày tạo dự án'\r\n    },\r\n    {\r\n      value: 'newest',\r\n      label: 'Dự án mới nhất'\r\n    },\r\n    {\r\n      value: 'Desc',\r\n      label: 'Từ Z - A'\r\n    },\r\n    {\r\n      value: 'Asc',\r\n      label: 'Từ A - Z'\r\n    }\r\n  ],\r\n\r\n  en: [\r\n    {\r\n      value: 'featured',\r\n      label: 'Featured'\r\n    },\r\n    {\r\n      value: 'newest',\r\n      label: 'Newest'\r\n    },\r\n    {\r\n      value: 'Desc',\r\n      label: 'Z - A'\r\n    },\r\n    {\r\n      value: 'Asc',\r\n      label: 'A - Z'\r\n    }\r\n  ]\r\n};\r\n\r\nfunction renderLabel(label: string | null) {\r\n  if (label === 'featured') {\r\n    return 'Featured';\r\n  }\r\n  if (label === 'newest') {\r\n    return 'Newest';\r\n  }\r\n  if (label === 'Desc') {\r\n    return 'Z - A';\r\n  }\r\n  return 'A - Z';\r\n}\r\nfunction renderLabelEng(label: string | null) {\r\n  if (label === 'featured') {\r\n    return 'Ngày tạo dự án';\r\n  }\r\n  if (label === 'newest') {\r\n    return 'Dự án mới nhất';\r\n  }\r\n\r\n  if (label === 'Desc') {\r\n    return 'từ Z - A';\r\n  }\r\n\r\n  return 'Từ A - Z';\r\n}\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'English',\r\n    countryCode: 'vi'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'Vietnamese',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n\r\nexport default function ShopProductSort() {\r\n  const dispatch = useDispatch();\r\n  const currentLanguageCode = cookies.get('i18next') || 'en';\r\n  const currentLanguage = Language.find((l) => l.code === currentLanguageCode);\r\n  const { t } = useTranslation();\r\n  const [open, setOpen] = useState<HTMLButtonElement | null>(null);\r\n  const { sortBy } = useSelector((state: { product: ProductState }) => state.product);\r\n\r\n  const handleOpen = (currentTarget: HTMLButtonElement) => {\r\n    setOpen(currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(null);\r\n  };\r\n\r\n  const handleSortBy = (value: string) => {\r\n    handleClose();\r\n    dispatch(sortByProducts(value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        color=\"inherit\"\r\n        disableRipple\r\n        onClick={(event) => handleOpen(event.currentTarget)}\r\n        endIcon={<Icon icon={open ? chevronUpFill : chevronDownFill} />}\r\n      >\r\n        {t(`sortByLabel`)}&nbsp;&nbsp;&nbsp;\r\n        <Typography component=\"span\" variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          {currentLanguageCode === 'vi' ? renderLabelEng(sortBy) : renderLabel(sortBy)}\r\n        </Typography>\r\n      </Button>\r\n      <Menu\r\n        keepMounted\r\n        anchorEl={open}\r\n        open={Boolean(open)}\r\n        onClose={handleClose}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        {(currentLanguageCode === 'vi' ? SORT_BY_OPTIONS_CONFIG.vi : SORT_BY_OPTIONS_CONFIG.en).map(\r\n          (option) => (\r\n            <MenuItem\r\n              key={option.value}\r\n              selected={option.value === sortBy}\r\n              onClick={() => handleSortBy(option.value)}\r\n              sx={{ typography: 'body2' }}\r\n            >\r\n              {option.label}\r\n            </MenuItem>\r\n          )\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\hooks\\useCollapseDrawer.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MenuDesktop.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopProductList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopProductCard.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopFilterSidebar.tsx",["3101","3102","3103","3104","3105","3106"],"import { Icon } from '@iconify/react';\r\nimport { Form, FormikProvider } from 'formik';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport roundClearAll from '@iconify/icons-ic/round-clear-all';\r\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\r\n// material\r\nimport {\r\n  Box,\r\n  Radio,\r\n  Stack,\r\n  Button,\r\n  Drawer,\r\n  Rating,\r\n  Divider,\r\n  Checkbox,\r\n  FormGroup,\r\n  Typography,\r\n  RadioGroup,\r\n  FormControlLabel\r\n} from '@mui/material';\r\n// @types\r\nimport { FormikPropsShopView } from '../../../../@types/products';\r\n//\r\nimport { MIconButton } from '../../../@material-extend';\r\nimport Scrollbar from '../../../Scrollbar';\r\nimport ColorManyPicker from '../../../ColorManyPicker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport const SORT_BY_OPTIONS = [\r\n  { value: 'featured', label: 'Featured' },\r\n  { value: 'newest', label: 'Newest' },\r\n  { value: 'priceDesc', label: 'Price: High-Low' },\r\n  { value: 'priceAsc', label: 'Price: Low-High' }\r\n];\r\n// export const FILTER_GENDER_OPTIONS = ['a', 'b', 'c'];\r\nexport const FILTER_AREA_OPTIONS = ['All', 'HCM', 'VT', 'Soc Trang'];\r\n// export const FILTER_RATING_OPTIONS = ['up4Star', 'up3Star', 'up2Star', 'up1Star'];\r\nexport const FILTER_STATUS_OPTIONS = [\r\n  { value: 'between', label: 'Đang hoạt động' },\r\n  { value: 'above', label: 'Đang kêu gọi đầu tư' }\r\n];\r\n// export const FILTER_COLOR_OPTIONS = [\r\n//   '#14B7CC',\r\n//   '#000000',\r\n//   '#FFFFFF',\r\n//   '#FFC0CB',\r\n//   '#FF4842',\r\n//   '#1890FF',\r\n//   '#94D82D',\r\n//   '#FFC107'\r\n// ];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype ShopFilterSidebarProps = {\r\n  onResetFilter: VoidFunction;\r\n  onOpenFilter: VoidFunction;\r\n  onCloseFilter: VoidFunction;\r\n  isOpenFilter: boolean;\r\n  formik: FormikPropsShopView;\r\n};\r\n\r\nexport default function ShopFilterSidebar({\r\n  isOpenFilter,\r\n  onResetFilter,\r\n  onOpenFilter,\r\n  onCloseFilter,\r\n  formik\r\n}: ShopFilterSidebarProps) {\r\n  const { values, getFieldProps, handleChange } = formik;\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        disableRipple\r\n        color=\"inherit\"\r\n        endIcon={<Icon icon={roundFilterList} />}\r\n        onClick={onOpenFilter}\r\n      >\r\n        Lọc danh sách&nbsp;\r\n      </Button>\r\n\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate>\r\n          <Drawer\r\n            anchor=\"right\"\r\n            open={isOpenFilter}\r\n            onClose={onCloseFilter}\r\n            PaperProps={{\r\n              sx: { width: 280, border: 'none', overflow: 'hidden' }\r\n            }}\r\n          >\r\n            <Stack\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-between\"\r\n              sx={{ px: 1, py: 2 }}\r\n            >\r\n              <Typography variant=\"subtitle1\" sx={{ ml: 1 }}>\r\n                Lọc danh sách\r\n              </Typography>\r\n              <MIconButton onClick={onCloseFilter}>\r\n                <Icon icon={closeFill} width={20} height={20} />\r\n              </MIconButton>\r\n            </Stack>\r\n\r\n            <Divider />\r\n\r\n            <Scrollbar>\r\n              <Stack spacing={3} sx={{ p: 3 }}>\r\n                {/* <div>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Doanh nghiệp\r\n                  </Typography>\r\n                  <FormGroup>\r\n                    {FILTER_GENDER_OPTIONS.map((item) => (\r\n                      <FormControlLabel\r\n                        key={item}\r\n                        control={\r\n                          <Checkbox\r\n                            {...getFieldProps('gender')}\r\n                            value={item}\r\n                            checked={values.gender.includes(item)}\r\n                          />\r\n                        }\r\n                        label={item}\r\n                      />\r\n                    ))}\r\n                  </FormGroup>\r\n                </div> */}\r\n\r\n                <div>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Thuộc loại\r\n                  </Typography>\r\n                  <RadioGroup {...getFieldProps('category')}>\r\n                    {FILTER_AREA_OPTIONS.map((item) => (\r\n                      <FormControlLabel key={item} value={item} control={<Radio />} label={item} />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                <div>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Khu vực\r\n                  </Typography>\r\n                  {/* <ColorManyPicker\r\n                    name=\"colors\"\r\n                    colors={FILTER_COLOR_OPTIONS}\r\n                    onChange={handleChange}\r\n                    onChecked={(color) => values.colors.includes(color)}\r\n                    sx={{ maxWidth: 36 * 4 }}\r\n                  /> */}\r\n                </div>\r\n\r\n                <div>\r\n                  <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Trạng thái\r\n                  </Typography>\r\n                  <RadioGroup {...getFieldProps('priceRange')}>\r\n                    {FILTER_STATUS_OPTIONS.map((item) => (\r\n                      <FormControlLabel\r\n                        key={item.value}\r\n                        value={item.value}\r\n                        control={<Radio />}\r\n                        label={item.label}\r\n                      />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </div>\r\n\r\n                <div>\r\n                  {/* <Typography variant=\"subtitle1\" gutterBottom>\r\n                    Rating\r\n                  </Typography>\r\n                  <RadioGroup {...getFieldProps('rating')}>\r\n                    {FILTER_RATING_OPTIONS.map((item, index) => (\r\n                      <FormControlLabel\r\n                        key={item}\r\n                        value={item}\r\n                        control={\r\n                          <Radio\r\n                            disableRipple\r\n                            color=\"default\"\r\n                            icon={<Rating readOnly value={4 - index} />}\r\n                            checkedIcon={<Rating readOnly value={4 - index} />}\r\n                            sx={{\r\n                              '&:hover': { bgcolor: 'transparent' }\r\n                            }}\r\n                          />\r\n                        }\r\n                        label=\"& Up\"\r\n                        sx={{\r\n                          my: 0.5,\r\n                          borderRadius: 1,\r\n                          '&:hover': { opacity: 0.48 },\r\n                          ...(values.rating.includes(item) && {\r\n                            bgcolor: 'action.selected'\r\n                          })\r\n                        }}\r\n                      />\r\n                    ))}\r\n                  </RadioGroup> */}\r\n                </div>\r\n              </Stack>\r\n            </Scrollbar>\r\n\r\n            <Box sx={{ p: 3 }}>\r\n              <Button\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                color=\"inherit\"\r\n                variant=\"outlined\"\r\n                onClick={onResetFilter}\r\n                startIcon={<Icon icon={roundClearAll} />}\r\n              >\r\n                Xóa tìm kiếm\r\n              </Button>\r\n            </Box>\r\n          </Drawer>\r\n        </Form>\r\n      </FormikProvider>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\DashboardSidebar.tsx",["3107","3108","3109","3110"],"import { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Link,\r\n  Stack,\r\n  Button,\r\n  Drawer,\r\n  Tooltip,\r\n  Typography,\r\n  CardActionArea\r\n} from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useCollapseDrawer from '../../hooks/useCollapseDrawer';\r\n// routes\r\nimport { PATH_DASHBOARD, PATH_DOCS } from '../../routes/paths';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport MyAvatar from '../../components/MyAvatar';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport NavSection from '../../components/NavSection';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\n\r\nimport sidebarConfig from './SidebarConfig';\r\nimport { DocIllustration } from '../../assets';\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 280;\r\nconst COLLAPSE_WIDTH = 102;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('lg')]: {\r\n    flexShrink: 0,\r\n    transition: theme.transitions.create('width', {\r\n      duration: theme.transitions.duration.complex\r\n    })\r\n  }\r\n}));\r\n\r\nconst AccountStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  backgroundColor: theme.palette.grey[500_12]\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype IconCollapseProps = {\r\n  onToggleCollapse: VoidFunction;\r\n  collapseClick: boolean;\r\n};\r\n\r\nfunction IconCollapse({ onToggleCollapse, collapseClick }: IconCollapseProps) {\r\n  return (\r\n    <Tooltip title=\"Thu nhỏ bảng\">\r\n      <>\r\n        {collapseClick && collapseClick ? (\r\n          <Typography>\r\n            <Button onClick={onToggleCollapse}>Mở rộng thanh</Button>\r\n          </Typography>\r\n        ) : (\r\n          <Button onClick={onToggleCollapse}>Thu hẹp</Button>\r\n        )}\r\n      </>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\ntype DashboardSidebarProps = {\r\n  isOpenSidebar: boolean;\r\n  onCloseSidebar: VoidFunction;\r\n};\r\n\r\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }: DashboardSidebarProps) {\r\n  const { pathname } = useLocation();\r\n  const { user } = useAuth();\r\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\r\n    useCollapseDrawer();\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': {\r\n          height: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }\r\n      }}\r\n    >\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          px: 2.5,\r\n          pt: 3,\r\n          pb: 2,\r\n          ...(isCollapse && {\r\n            alignItems: 'center'\r\n          })\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\r\n            <Logo />\r\n          </Box>\r\n\r\n          <MHidden width=\"lgDown\">\r\n            {!isCollapse && (\r\n              <IconCollapse onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />\r\n            )}\r\n          </MHidden>\r\n        </Stack>\r\n\r\n        {isCollapse ? (\r\n          <MyAvatar sx={{ mx: 'auto', mb: 2 }} />\r\n        ) : (\r\n          <Link underline=\"none\" component={RouterLink} to={PATH_DASHBOARD.user.account}>\r\n            <AccountStyle>\r\n              <MyAvatar />\r\n              <Box sx={{ ml: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\r\n                  {user?.fullName}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                  {user?.role === 'INVESTOR' && 'Nhà đầu tư'}\r\n                </Typography>\r\n              </Box>\r\n            </AccountStyle>\r\n          </Link>\r\n        )}\r\n      </Stack>\r\n\r\n      <NavSection navConfig={sidebarConfig} isShow={!isCollapse} />\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      {!isCollapse && (\r\n        <Stack\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n          sx={{ px: 5, pb: 5, mt: 10, width: 1, textAlign: 'center' }}\r\n        >\r\n          <DocIllustration sx={{ width: 1 }} />\r\n\r\n          <div>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Xin chào, {user?.fullName}\r\n            </Typography>\r\n          </div>\r\n        </Stack>\r\n      )}\r\n    </Scrollbar>\r\n  );\r\n  const renderBusinessContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': {\r\n          height: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }\r\n      }}\r\n    >\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          px: 2.5,\r\n          pt: 3,\r\n          pb: 2,\r\n          ...(isCollapse && {\r\n            alignItems: 'center'\r\n          })\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\r\n            <Logo />\r\n          </Box>\r\n\r\n          <MHidden width=\"lgDown\">\r\n            {!isCollapse && (\r\n              <IconCollapse onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />\r\n            )}\r\n          </MHidden>\r\n        </Stack>\r\n\r\n        {isCollapse ? (\r\n          <MyAvatar sx={{ mx: 'auto', mb: 2 }} />\r\n        ) : (\r\n          <Link underline=\"none\" component={RouterLink} to={PATH_DASHBOARD.user.account}>\r\n            <AccountStyle>\r\n              <MyAvatar />\r\n              <Box sx={{ ml: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\r\n                  {user?.fullName}{' '}\r\n                </Typography>\r\n                <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                  {user?.role}\r\n                </Typography>\r\n              </Box>\r\n            </AccountStyle>\r\n          </Link>\r\n        )}\r\n      </Stack>\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      {!isCollapse && (\r\n        <Stack\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n          sx={{ px: 5, pb: 5, mt: 10, width: 1, textAlign: 'center' }}\r\n        >\r\n          <DocIllustration sx={{ width: 1 }} />\r\n\r\n          <div>\r\n            <Typography gutterBottom variant=\"subtitle1\">\r\n              Hi, {user?.fullName}\r\n            </Typography>\r\n          </div>\r\n        </Stack>\r\n      )}\r\n    </Scrollbar>\r\n  );\r\n  if (user?.role === 'business') {\r\n    return (\r\n      <RootStyle\r\n        sx={{\r\n          width: {\r\n            lg: isCollapse ? COLLAPSE_WIDTH : DRAWER_WIDTH\r\n          },\r\n          ...(collapseClick && {\r\n            position: 'absolute'\r\n          })\r\n        }}\r\n      >\r\n        <MHidden width=\"lgUp\">\r\n          <Drawer\r\n            open={isOpenSidebar}\r\n            onClose={onCloseSidebar}\r\n            PaperProps={{\r\n              sx: { width: DRAWER_WIDTH }\r\n            }}\r\n          >\r\n            {renderBusinessContent}\r\n          </Drawer>\r\n        </MHidden>\r\n\r\n        <MHidden width=\"lgDown\">\r\n          <Drawer\r\n            open\r\n            variant=\"persistent\"\r\n            onMouseEnter={onHoverEnter}\r\n            onMouseLeave={onHoverLeave}\r\n            PaperProps={{\r\n              sx: {\r\n                width: DRAWER_WIDTH,\r\n                bgcolor: 'background.default',\r\n                ...(isCollapse && {\r\n                  width: COLLAPSE_WIDTH\r\n                }),\r\n                ...(collapseHover && {\r\n                  borderRight: 0,\r\n                  backdropFilter: 'blur(6px)',\r\n                  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n                  boxShadow: (theme) => theme.customShadows.z20,\r\n                  bgcolor: (theme) => alpha(theme.palette.background.default, 0.88)\r\n                })\r\n              }\r\n            }}\r\n          >\r\n            {renderBusinessContent}\r\n          </Drawer>\r\n        </MHidden>\r\n      </RootStyle>\r\n    );\r\n  } else {\r\n    return (\r\n      <RootStyle\r\n        sx={{\r\n          width: {\r\n            lg: isCollapse ? COLLAPSE_WIDTH : DRAWER_WIDTH\r\n          },\r\n          ...(collapseClick && {\r\n            position: 'absolute'\r\n          })\r\n        }}\r\n      >\r\n        <MHidden width=\"lgUp\">\r\n          <Drawer\r\n            open={isOpenSidebar}\r\n            onClose={onCloseSidebar}\r\n            PaperProps={{\r\n              sx: { width: DRAWER_WIDTH }\r\n            }}\r\n          >\r\n            {renderContent}\r\n          </Drawer>\r\n        </MHidden>\r\n\r\n        <MHidden width=\"lgDown\">\r\n          <Drawer\r\n            open\r\n            variant=\"persistent\"\r\n            onMouseEnter={onHoverEnter}\r\n            onMouseLeave={onHoverLeave}\r\n            PaperProps={{\r\n              sx: {\r\n                width: DRAWER_WIDTH,\r\n                bgcolor: 'background.default',\r\n                ...(isCollapse && {\r\n                  width: COLLAPSE_WIDTH\r\n                }),\r\n                ...(collapseHover && {\r\n                  borderRight: 0,\r\n                  backdropFilter: 'blur(6px)',\r\n                  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n                  boxShadow: (theme) => theme.customShadows.z20,\r\n                  bgcolor: (theme) => alpha(theme.palette.background.default, 0.88)\r\n                })\r\n              }\r\n            }}\r\n          >\r\n            {renderContent}\r\n          </Drawer>\r\n        </MHidden>\r\n      </RootStyle>\r\n    );\r\n  }\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\DashboardNavbar.tsx",["3111"],"import { Icon } from '@iconify/react';\r\nimport menu2Fill from '@iconify/icons-eva/menu-2-fill';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Stack, AppBar, Toolbar, IconButton } from '@mui/material';\r\n// hooks\r\nimport useCollapseDrawer from '../../hooks/useCollapseDrawer';\r\n// components\r\nimport { MHidden } from '../../components/@material-extend';\r\nimport AccountPopover from './AccountPopover';\r\nimport ContactsPopover from './ContactsPopover';\r\nimport NotificationsPopover from './NotificationsPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 280;\r\nconst COLLAPSE_WIDTH = 102;\r\n\r\nconst APPBAR_MOBILE = 64;\r\nconst APPBAR_DESKTOP = 92;\r\n\r\nconst RootStyle = styled(AppBar)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  backdropFilter: 'blur(6px)',\r\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n  backgroundColor: alpha(theme.palette.background.default, 0.72),\r\n  [theme.breakpoints.up('lg')]: {\r\n    width: `calc(100% - ${DRAWER_WIDTH + 1}px)`\r\n  }\r\n}));\r\n\r\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\r\n  minHeight: APPBAR_MOBILE,\r\n  [theme.breakpoints.up('lg')]: {\r\n    minHeight: APPBAR_DESKTOP,\r\n    padding: theme.spacing(0, 5)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype DashboardNavbarProps = {\r\n  onOpenSidebar: VoidFunction;\r\n};\r\n\r\nexport default function DashboardNavbar({ onOpenSidebar }: DashboardNavbarProps) {\r\n  const { isCollapse } = useCollapseDrawer();\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(isCollapse && {\r\n          width: { lg: `calc(100% - ${COLLAPSE_WIDTH}px)` }\r\n        })\r\n      }}\r\n    >\r\n      <ToolbarStyle>\r\n        <MHidden width=\"lgUp\">\r\n          <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\r\n            <Icon icon={menu2Fill} />\r\n          </IconButton>\r\n        </MHidden>\r\n\r\n        <Box sx={{ flexGrow: 1 }} />\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" spacing={{ xs: 0.5, sm: 1.5 }}>\r\n          {/* <LanguagePopover /> */}\r\n          <NotificationsPopover />\r\n          {/* <ContactsPopover /> */}\r\n          <AccountPopover />\r\n        </Stack>\r\n      </ToolbarStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\learnInvest\\DashboardSidebarLearn.tsx",["3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127"],"import { useEffect, useState } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Link,\r\n  Stack,\r\n  Button,\r\n  Drawer,\r\n  Tooltip,\r\n  Typography,\r\n  CardActionArea\r\n} from '@mui/material';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useCollapseDrawer from '../../hooks/useCollapseDrawer';\r\n// routes\r\nimport { PATH_DASHBOARD, PATH_DOCS } from '../../routes/paths';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport MyAvatar from '../../components/MyAvatar';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport NavSection from '../../components/NavSection';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\nimport React from 'react';\r\n\r\nimport sidebarConfig from './SidebarConfigLearn';\r\nimport { DocIllustration } from '../../assets';\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 300;\r\nconst COLLAPSE_WIDTH = 102;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('lg')]: {\r\n    flexShrink: 0,\r\n    transition: theme.transitions.create('width', {\r\n      duration: theme.transitions.duration.complex\r\n    })\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype IconCollapseProps = {\r\n  onToggleCollapse: VoidFunction;\r\n  collapseClick: boolean;\r\n};\r\n\r\ntype DashboardSidebarProps = {\r\n  isOpenSidebar: boolean;\r\n  onCloseSidebar: VoidFunction;\r\n};\r\n\r\nexport default function DashboardSidebarLearn({\r\n  isOpenSidebar,\r\n  onCloseSidebar\r\n}: DashboardSidebarProps) {\r\n  const { pathname } = useLocation();\r\n  const { user } = useAuth();\r\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\r\n    useCollapseDrawer();\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': {\r\n          height: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }\r\n      }}\r\n    >\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          px: 2.5,\r\n          pt: 3,\r\n          pb: 2,\r\n          ...(isCollapse && {\r\n            alignItems: 'center'\r\n          })\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          {/* <Box component={RouterLink} to=\"/\" sx={{ display: 'inline-flex' }}>\r\n            <Logo />\r\n          </Box> */}\r\n        </Stack>\r\n      </Stack>\r\n\r\n      <NavSection navConfig={sidebarConfig} isShow={!isCollapse} />\r\n      <Box sx={{ flexGrow: 1 }} />\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        width: {\r\n          lg: isCollapse ? COLLAPSE_WIDTH : DRAWER_WIDTH\r\n        },\r\n        ...(collapseClick && {\r\n          position: 'absolute'\r\n        })\r\n      }}\r\n    >\r\n      <MHidden width=\"lgUp\">\r\n        <Drawer\r\n          open={isOpenSidebar}\r\n          onClose={onCloseSidebar}\r\n          PaperProps={{\r\n            sx: { width: DRAWER_WIDTH }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n\r\n      <MHidden width=\"lgDown\">\r\n        <Drawer\r\n          open\r\n          variant=\"persistent\"\r\n          onMouseEnter={onHoverEnter}\r\n          onMouseLeave={onHoverLeave}\r\n          PaperProps={{\r\n            sx: {\r\n              width: DRAWER_WIDTH,\r\n              bgcolor: 'background.default',\r\n              ...(isCollapse && {\r\n                width: COLLAPSE_WIDTH\r\n              }),\r\n              ...(collapseHover && {\r\n                borderRight: 0,\r\n                backdropFilter: 'blur(6px)',\r\n                WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n                bgcolor: (theme) => alpha(theme.palette.background.default, 0.88)\r\n              })\r\n            }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\shop\\ShopTagFiltered.tsx",["3128","3129","3130","3131","3132","3133"],"import { filter } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { sentenceCase } from 'change-case';\r\nimport roundClearAll from '@iconify/icons-ic/round-clear-all';\r\n// material\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport { Chip, Typography, Stack, Button } from '@mui/material';\r\n// utils\r\nimport getColorName from '../../../../utils/getColorName';\r\n//\r\nimport { ProductFilter, FormikPropsShopView } from '../../../../@types/products';\r\nimport { ProjectFilter } from '../../../../@types/krowd/project';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')({\r\n  flexGrow: 1,\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center'\r\n});\r\n\r\nconst WrapperStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  alignItems: 'stretch',\r\n  margin: theme.spacing(0.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  border: `solid 1px ${theme.palette.divider}`\r\n}));\r\n\r\nconst LabelStyle = styled((props) => (\r\n  <Typography component=\"span\" variant=\"subtitle2\" {...props} />\r\n))(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 1),\r\n  color: theme.palette.text.secondary,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  borderRight: `solid 1px ${theme.palette.divider}`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction labelPriceRange(range: string) {\r\n  if (range === 'below') {\r\n    return 'Đang hoạt động';\r\n  }\r\n  if (range === 'between') {\r\n    return 'Đang đầu tư';\r\n  }\r\n  return 'Đang hoạt động';\r\n}\r\n\r\ntype ShopTagFilteredProps = {\r\n  formik: FormikPropsShopView;\r\n  filters: ProjectFilter;\r\n  isShowReset: boolean;\r\n  isDefault: boolean;\r\n  onResetFilter: VoidFunction;\r\n};\r\n\r\nexport default function ShopTagFiltered({\r\n  formik,\r\n  filters,\r\n  isShowReset,\r\n  onResetFilter,\r\n  isDefault\r\n}: ShopTagFilteredProps) {\r\n  const theme = useTheme();\r\n  const { values, handleSubmit, setFieldValue, initialValues } = formik;\r\n  const { areaId, status } = filters;\r\n  const isShow = values !== initialValues && !isShowReset;\r\n\r\n  const handleRemoveCategory = () => {\r\n    handleSubmit();\r\n    setFieldValue('area', 'All');\r\n  };\r\n\r\n  const handleRemovePrice = () => {\r\n    handleSubmit();\r\n    setFieldValue('priceRange', '');\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      {/* {gender.length > 0 && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Doanh nghiệp:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            {gender.map((_gender) => (\r\n              <Chip\r\n                key={_gender}\r\n                label={_gender}\r\n                size=\"small\"\r\n                onDelete={() => handleRemoveGender(_gender)}\r\n                sx={{ m: 0.5 }}\r\n              />\r\n            ))}\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )} */}\r\n\r\n      {areaId !== 'All' && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Thuộc loại:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            <Chip size=\"small\" label={areaId} onDelete={handleRemoveCategory} sx={{ m: 0.5 }} />\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n      {/* \r\n      {colors.length > 0 && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Khu vực:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            {colors.map((color) => (\r\n              <Chip\r\n                key={color}\r\n                label={getColorName(color)}\r\n                size=\"small\"\r\n                onDelete={() => handleRemoveColor(color)}\r\n                sx={{\r\n                  m: 0.5,\r\n                  bgcolor: color,\r\n                  color: theme.palette.getContrastText(color),\r\n                  ...((color === '#FFFFFF' || color === '#000000') && {\r\n                    border: `solid 1px ${theme.palette.grey[500_32]}`,\r\n                    '& .MuiChip-deleteIcon': {\r\n                      color: 'text.disabled'\r\n                    }\r\n                  })\r\n                }}\r\n              />\r\n            ))}\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )} */}\r\n      {status && (\r\n        <WrapperStyle>\r\n          <LabelStyle>Trạng thái:</LabelStyle>\r\n          <Stack direction=\"row\" flexWrap=\"wrap\" sx={{ p: 0.75 }}>\r\n            <Chip size=\"small\" label={status} onDelete={handleRemovePrice} sx={{ m: 0.5 }} />\r\n          </Stack>\r\n        </WrapperStyle>\r\n      )}\r\n      {isShow && !isDefault && (\r\n        <Button\r\n          color=\"error\"\r\n          size=\"small\"\r\n          type=\"button\"\r\n          onClick={onResetFilter}\r\n          startIcon={<Icon icon={roundClearAll} />}\r\n        >\r\n          Xóa tìm kiếm\r\n        </Button>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\MyAvatar.tsx",["3134"],"// hooks\r\nimport useAuth from '../hooks/useAuth';\r\n//\r\nimport { MAvatar } from './@material-extend';\r\nimport { MAvatarProps } from './@material-extend/MAvatar';\r\nimport createAvatar from '../utils/createAvatar';\r\nimport { Avatar } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function MyAvatar({ ...other }: MAvatarProps) {\r\n  const { user } = useAuth();\r\n\r\n  return (\r\n    <Avatar\r\n      src={user?.image}\r\n      alt={user?.fullName}\r\n      color={user?.photoURL ? 'default' : createAvatar(user?.fullName).color}\r\n      {...other}\r\n    >\r\n      {createAvatar(user?.fullName).name}\r\n    </Avatar>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingRecentTransitions.tsx",["3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3147","3148","3149","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159"],"import { useEffect, useRef, useState } from 'react';\r\nimport { format } from 'date-fns';\r\nimport { sentenceCase } from 'change-case';\r\nimport { Icon, IconifyIcon } from '@iconify/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport bookFill from '@iconify/icons-eva/book-fill';\r\nimport heartFill from '@iconify/icons-eva/heart-fill';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport printerFill from '@iconify/icons-eva/printer-fill';\r\nimport downloadFill from '@iconify/icons-eva/download-fill';\r\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport diagonalArrowRightUpFill from '@iconify/icons-eva/diagonal-arrow-right-up-fill';\r\nimport diagonalArrowLeftDownFill from '@iconify/icons-eva/diagonal-arrow-left-down-fill';\r\n// material\r\nimport { useTheme } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Menu,\r\n  Table,\r\n  Avatar,\r\n  Button,\r\n  Divider,\r\n  MenuItem,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  CardHeader,\r\n  Typography,\r\n  TableContainer\r\n} from '@mui/material';\r\n// utils\r\nimport { fCurrency } from '../../../utils/formatNumber';\r\n//\r\nimport Label from '../../Label';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport { MIconButton } from '../../@material-extend';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { getTransactionList } from 'redux/slices/krowd_slices/transaction';\r\nimport { PATH_DASHBOARD } from 'routes/paths';\r\nimport { DATA_TYPE } from 'components/table/krowd-table/KrowdTable';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype AvatarIconProps = {\r\n  icon: IconifyIcon;\r\n};\r\n\r\nfunction AvatarIcon({ icon }: AvatarIconProps) {\r\n  return (\r\n    <Avatar\r\n      sx={{\r\n        width: 48,\r\n        height: 48,\r\n        color: 'text.secondary',\r\n        bgcolor: 'background.neutral'\r\n      }}\r\n    >\r\n      <Icon icon={icon} width={24} height={24} />\r\n    </Avatar>\r\n  );\r\n}\r\n\r\nexport default function BankingRecentTransitions() {\r\n  const theme = useTheme();\r\n  const isLight = theme.palette.mode === 'light';\r\n  const { transactionState } = useSelector((state: RootState) => state.transactionKrowd);\r\n  const { isLoading, listOfAccountTransaction: list, numOfAccountTransaction } = transactionState;\r\n\r\n  const [pageIndex, setPageIndex] = useState(1);\r\n  const [pageSize, setPageSize] = useState(5);\r\n  useEffect(() => {\r\n    dispatch(getTransactionList(pageIndex, pageSize));\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardHeader title=\"Giao dịch gần đây\" sx={{ mb: 3 }} />\r\n        <Scrollbar>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Mô tả giao dịch</TableCell>\r\n                <TableCell>Ngày gửi</TableCell>\r\n                <TableCell sx={{ textAlign: 'right' }}>Số tiền</TableCell>\r\n                <TableCell></TableCell>\r\n                <TableCell></TableCell>\r\n\r\n                <TableCell>Trạng thái</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {list.slice(0, 5).map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                      <Box sx={{ position: 'relative' }}>\r\n                        <img style={{ width: 40 }} src={`/static/icons/navbar/ic_momo.png`} />{' '}\r\n                      </Box>\r\n                      <Box sx={{ ml: 2 }}>\r\n                        <Typography>Ví momo</Typography>\r\n                      </Box>\r\n                    </Box>\r\n                  </TableCell>\r\n\r\n                  <TableCell>\r\n                    <Typography variant=\"subtitle2\">\r\n                      {row.createDate.toString().substring(0, 10)}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle2\">\r\n                      {row.createDate.toString().substring(10, 20)}\r\n                    </Typography>\r\n                  </TableCell>\r\n                  <TableCell\r\n                    sx={{\r\n                      textAlign: 'right'\r\n                    }}\r\n                  >\r\n                    {fCurrency(row.amount)}\r\n                  </TableCell>\r\n                  <TableCell sx={{ textAlign: 'right' }}></TableCell>\r\n                  <TableCell sx={{ textAlign: 'right' }}></TableCell>\r\n                  <TableCell>\r\n                    <Label\r\n                      variant={isLight ? 'ghost' : 'filled'}\r\n                      color={(row.message === 'Giao dịch thành công.' && 'success') || 'error'}\r\n                    >\r\n                      {row.message}\r\n                    </Label>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Scrollbar>\r\n\r\n        <Divider />\r\n\r\n        <Box sx={{ p: 2, textAlign: 'right' }}>\r\n          <Button\r\n            href={PATH_DASHBOARD.transaction.list}\r\n            size=\"small\"\r\n            color=\"inherit\"\r\n            endIcon={<Icon icon={arrowIosForwardFill} />}\r\n          >\r\n            Xem tất cả giao dịch\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingBalanceStatistics.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingCurrentBalance.tsx",["3160","3161"],"import { useState, useRef } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport Slider from 'react-slick';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\r\n// material\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport { Box, Typography, Stack, MenuItem } from '@mui/material';\r\n// utils\r\nimport { fCurrency } from '../../../utils/formatNumber';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport { CarouselControlsPaging1 } from '../../carousel';\r\nimport MenuPopover from '../../MenuPopover';\r\nimport { RootState, useSelector } from 'redux/store';\r\nimport { WalletType } from '../../../@types/krowd/wallet';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HEIGHT = 276;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  height: HEIGHT,\r\n  '& .slick-list': {\r\n    borderRadius: theme.shape.borderRadiusMd\r\n  }\r\n}));\r\n\r\nconst CardItemStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  height: HEIGHT - 16,\r\n  backgroundSize: 'cover',\r\n  padding: theme.spacing(3),\r\n  backgroundRepeat: 'no-repeat',\r\n  color: theme.palette.common.white,\r\n  backgroundImage: 'url(\"/static/bg_card.png\")',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\n\r\nconst shadowStyle = {\r\n  mx: 'auto',\r\n  width: 'calc(100% - 16px)',\r\n  borderRadius: 2,\r\n  position: 'absolute',\r\n  height: 200,\r\n  zIndex: 8,\r\n  bottom: 8,\r\n  left: 0,\r\n  right: 0,\r\n  bgcolor: 'grey.500',\r\n  opacity: 0.32\r\n} as const;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MoreMenuButton() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        size=\"large\"\r\n        color=\"inherit\"\r\n        sx={{ opacity: 0.48 }}\r\n        onClick={handleOpen}\r\n      >\r\n        <Icon icon={moreVerticalFill} width={20} height={20} />\r\n      </MIconButton>\r\n\r\n      <MenuPopover\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorEl={anchorRef.current}\r\n        sx={{ p: 1, mt: -1, width: 'auto' }}\r\n      >\r\n        <MenuItem onClick={handleClose} sx={{ py: 0.75, px: 1.5, borderRadius: 0.75 }}>\r\n          <Box\r\n            component={Icon}\r\n            icon={editFill}\r\n            sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }}\r\n          />\r\n          <Typography variant=\"body2\">Xem chi tiết</Typography>\r\n        </MenuItem>\r\n        {/* <MenuItem\r\n          onClick={handleClose}\r\n          sx={{ py: 0.75, px: 1.5, borderRadius: 0.75, color: 'error.main' }}\r\n        >\r\n          <Box\r\n            component={Icon}\r\n            icon={trash2Outline}\r\n            sx={{ width: 20, height: 20, flexShrink: 0, mr: 1 }}\r\n          />\r\n          <Typography variant=\"body2\">Delete card</Typography>\r\n        </MenuItem> */}\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n\r\ntype CardItemProps = {\r\n  card: {\r\n    walletType: WalletType;\r\n    id: string;\r\n    investorId: string;\r\n    balance: number;\r\n    createDate: string;\r\n    createBy: string;\r\n    updateDate: string;\r\n    updateBy: string;\r\n    isDeleted: boolean;\r\n  };\r\n};\r\n\r\nfunction CardItem({ card }: CardItemProps) {\r\n  const { walletType, balance } = card;\r\n  const [showCurrency, setShowCurrency] = useState(true);\r\n\r\n  const onToggleShowCurrency = () => {\r\n    setShowCurrency((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CardItemStyle>\r\n        <Box sx={{ position: 'absolute', top: 16, right: 16, zIndex: 9 }}>\r\n          <MoreMenuButton />\r\n        </Box>\r\n\r\n        <div>\r\n          <Typography sx={{ mb: 2, typography: 'subtitle2', opacity: 0.72 }}>\r\n            {walletType.name}\r\n          </Typography>\r\n          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\r\n            <Typography sx={{ typography: 'h3' }}>\r\n              {showCurrency ? '********' : fCurrency(balance)}\r\n            </Typography>\r\n            <MIconButton color=\"inherit\" onClick={onToggleShowCurrency} sx={{ opacity: 0.48 }}>\r\n              <Icon icon={showCurrency ? eyeFill : eyeOffFill} />\r\n            </MIconButton>\r\n          </Stack>\r\n        </div>\r\n\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"flex-end\" spacing={1}>\r\n          <Box\r\n            component=\"img\"\r\n            // src={`/static/icons/ic_${cardType === 'mastercard' ? 'mastercard' : 'visa'}.svg`}\r\n            src={`/static/icons/ic_mastercard.svg`}\r\n            sx={{ height: 24 }}\r\n          />\r\n          <Typography sx={{ typography: 'subtitle1', textAlign: 'right' }}>...</Typography>\r\n        </Stack>\r\n\r\n        <Stack direction=\"row\" spacing={5}>\r\n          <div>\r\n            <Typography sx={{ mb: 1, typography: 'caption', opacity: 0.48 }}>Cập nhật</Typography>\r\n            <Typography sx={{ typography: 'subtitle1' }}>Chi tiết</Typography>\r\n          </div>\r\n          <div>\r\n            <Typography sx={{ mb: 1, typography: 'caption', opacity: 0.48 }}>Cập nhật</Typography>\r\n            <Typography sx={{ typography: 'subtitle1' }}>Cập nhật</Typography>\r\n          </div>\r\n        </Stack>\r\n      </CardItemStyle>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function BankingCurrentBalance() {\r\n  const theme = useTheme();\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n  const settings = {\r\n    dots: true,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    ...CarouselControlsPaging1({\r\n      color: 'primary.main',\r\n      bottom: '16px !important',\r\n      right: '16px !important'\r\n    })\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box sx={{ position: 'relative', zIndex: 9 }}>\r\n        <Slider {...settings}>\r\n          {listOfInvestorWallet.slice(2, 5).map((card) => (\r\n            <CardItem key={card.id} card={card} />\r\n          ))}\r\n        </Slider>\r\n      </Box>\r\n\r\n      <Box sx={{ ...shadowStyle }} />\r\n      <Box\r\n        sx={{\r\n          ...shadowStyle,\r\n          opacity: 0.16,\r\n          bottom: 0,\r\n          zIndex: 7,\r\n          width: 'calc(100% - 40px)'\r\n        }}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingInviteFriends.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingQuickTransfer.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\BankingContacts.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\ProjectPaymentWallet.tsx",["3162","3163","3164","3165","3166"],"import { Icon } from '@iconify/react';\r\nimport question from '@iconify/icons-bi/question-circle';\r\n\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Stack,\r\n  Divider,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Dialog,\r\n  DialogContent,\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Tooltip,\r\n  TextField,\r\n  FormHelperText\r\n} from '@mui/material';\r\n// utils\r\nimport { fCurrency, fPercent } from '../../../utils/formatNumber';\r\n//\r\nimport { useEffect, useState } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { Wallet } from '../../../@types/krowd/wallet';\r\nimport { getWalletByID, getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport { motion } from 'framer-motion';\r\nimport { TextAnimate, varBounceInUp, varWrapEnter } from 'components/animate';\r\nimport walletDetails from '@iconify/icons-ant-design/wallet-outlined';\r\nimport moneyBillTransfer from '@iconify/icons-fa6-solid/money-bill-transfer';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport axios from 'axios';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { useSnackbar } from 'notistack';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport dolarMoney from '@iconify/icons-ant-design/dollar-circle-outlined';\r\nimport InfoRecieve from '@iconify/icons-ant-design/solution-outline';\r\nimport secureInfo from '@iconify/icons-ant-design/security-scan-outlined';\r\nimport * as Yup from 'yup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n  padding: theme.spacing(3),\r\n  backgroundColor: '#d29f6370',\r\n  display: 'flex',\r\n  color: 'white',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyleContainer = styled(motion.div)(({ theme }) => ({\r\n  backgroundPosition: 'center',\r\n  width: '100%',\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: '#ff8900bf'\r\n}));\r\ntype Package = {\r\n  id: string;\r\n};\r\nexport default function ProjectPaymentWallet({ wallet }: { wallet: Wallet }) {\r\n  useEffect(() => {\r\n    dispatch(getWalletList());\r\n  }, [dispatch]);\r\n  const { investorKrowdDetail: mainInvestor } = useSelector(\r\n    (state: RootState) => state.user_InvestorStateKrowd\r\n  );\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [openModalShareInvest, setOpenModalShareInvest] = useState(false);\r\n  const [openModalTransfer, setOpenModalTransfer] = useState(false);\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n  const [walletIDTranferFrom, setWalletIDTranferFrom] = useState('');\r\n\r\n  const ToWalletId = listOfInvestorWallet\r\n    .slice(4, 5)\r\n    .find((e: any) => e.walletType.name === 'Ví thu tiền');\r\n\r\n  const handleClickRefeshBalance = async (v: Package) => {\r\n    dispatch(getWalletByID(v.id));\r\n    setOpenModalShareInvest(true);\r\n  };\r\n  const handleClickTranferMoney = async (v: Package) => {\r\n    dispatch(getWalletByID(v.id));\r\n    setWalletIDTranferFrom(v.id);\r\n    setOpenModalTransfer(true);\r\n  };\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n  const TransferSchema = Yup.object().shape({\r\n    amount: Yup.number()\r\n      .required('Vui lòng nhập số tiền bạn cần rút')\r\n      .min(100000, 'Yêu cầu tối thiểu mỗi lần rút là 100,000đ')\r\n      .max(500000000, 'Yêu cầu tối đa mỗi lần rút là 500,000,000đ')\r\n  });\r\n  const formikTranfer = useFormik({\r\n    initialValues: {\r\n      fromWalletId: walletIDTranferFrom,\r\n      toWalletId: ToWalletId?.id ?? '',\r\n      amount: 0\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: TransferSchema,\r\n\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const headers = getHeaderFormData();\r\n        await axios\r\n          .put(REACT_APP_API_URL + `/wallets`, values, {\r\n            headers: headers\r\n          })\r\n          .then((res) => {\r\n            enqueueSnackbar('Chuyển tiền thành công', {\r\n              variant: 'success'\r\n            });\r\n            resetForm();\r\n            setOpenModalTransfer(false);\r\n            dispatch(getWalletList());\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Chuyển tiền thất bại vui lòng kiểm tra lại số dư của bạn', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(true);\r\n          });\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const {\r\n    errors: errorsTranfer,\r\n    values: valuesTranfer,\r\n    touched: touchedTranfer,\r\n    isSubmitting: isSubmittingTranfer,\r\n    handleSubmit: handleSubmitTranfer,\r\n    getFieldProps: getFieldPropsTranfer,\r\n    setFieldValue: setFieldValueTranfer\r\n  } = formikTranfer;\r\n  return (\r\n    <RootStyleContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      {listOfInvestorWallet &&\r\n        listOfInvestorWallet.length > 0 &&\r\n        listOfInvestorWallet.slice(3, 4).map((e, i) => (\r\n          <RootStyle key={i}>\r\n            <Stack spacing={1} sx={{ p: 3 }}>\r\n              <Grid container>\r\n                <Grid lg={6}>\r\n                  <Typography sx={{ typography: 'h6' }}>{e.walletType.name}</Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <Button\r\n                    sx={{\r\n                      display: 'flex',\r\n                      border: '1px solid white',\r\n                      color: 'white'\r\n                    }}\r\n                    onClick={() => handleClickRefeshBalance(e)}\r\n                  >\r\n                    {/* <Icon icon={refresh} /> */}\r\n                    <Typography sx={{ typography: 'subtitle2', gap: 1, pl: 1 }}>\r\n                      Chi tiết tài khoản ví\r\n                    </Typography>\r\n                  </Button>\r\n                  <Dialog fullWidth maxWidth=\"sm\" open={openModalShareInvest}>\r\n                    <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                      <Icon color=\"#14b7cc\" height={60} width={60} icon={walletDetails} />\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <Box mt={1}>\r\n                        <DialogContentText\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                            fontWeight: 900,\r\n                            fontSize: 20,\r\n                            color: 'black'\r\n                          }}\r\n                        >\r\n                          Chi tiết tài khoản ví\r\n                        </DialogContentText>\r\n                      </Box>\r\n                      <Stack spacing={{ xs: 2, md: 1 }}>\r\n                        <Container sx={{ p: 2 }}>\r\n                          <Divider sx={{ my: 2 }} />\r\n                          <Card sx={{ p: 2, mb: 2 }}>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                mb: '0.5rem',\r\n                                p: 1\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Số dư khả dụng: <br />\r\n                                <strong style={{ color: 'green' }}>{fCurrency(e.balance)}</strong>\r\n                              </Typography>\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Tổng số dư <br />\r\n                                <strong>{fCurrency(e.balance)}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n\r\n                          <Card sx={{ p: 2 }}>\r\n                            <Typography sx={{ mb: 2 }}>THÔNG TIN CHI TIẾT</Typography>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Loại tài khoản <br />\r\n                                <strong>{e.walletType.name}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Divider />\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Tài khoản số điện thoại\r\n                                <br />\r\n                                <strong>{mainInvestor?.phoneNum}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Divider />\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Ngày mở tài khoản <br />\r\n                                <strong>{e.createDate}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n                          {/* <Box my={2} p={2}>\r\n                            <Typography>Chưa cập nhật</Typography>\r\n                          </Box> */}\r\n                        </Container>\r\n                      </Stack>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }}>\r\n                        <Box>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => setOpenModalShareInvest(false)}\r\n                          >\r\n                            Đóng\r\n                          </Button>\r\n                        </Box>\r\n                        {/* <Button\r\n                          href={PATH_PAGE.pageTopUp}\r\n                          target=\"_blank\"\r\n                          sx={{\r\n                            display: 'flex',\r\n                            border: '1px solid white'\r\n                          }}\r\n                          variant=\"contained\"\r\n                        >\r\n                          + Nạp tiền\r\n                        </Button> */}\r\n                      </Box>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container alignItems={'flex-start'}>\r\n                <Grid lg={6}>\r\n                  <TextAnimate\r\n                    text={fCurrency(e.balance)}\r\n                    sx={{ typography: 'h4' }}\r\n                    variants={varBounceInUp}\r\n                  />\r\n                </Grid>\r\n                <Grid sx={{ display: 'flex', gap: 1 }}>\r\n                  <Button\r\n                    sx={{ mt: 1, display: 'flex', border: '1px solid white', color: 'white' }}\r\n                    onClick={() => handleClickTranferMoney(e)}\r\n                  >\r\n                    + Chuyển tiền\r\n                  </Button>\r\n                  <Dialog fullWidth maxWidth=\"sm\" open={openModalTransfer}>\r\n                    <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                      <Box mt={1} display={'flex'} justifyContent={'flex-end'}>\r\n                        <Box>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => setOpenModalTransfer(false)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </Box>\r\n                      </Box>\r\n                      <Icon color=\"#14b7cc\" height={60} width={60} icon={moneyBillTransfer} />\r\n                      <Box mt={1}>\r\n                        <DialogContentText\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                            fontWeight: 900,\r\n                            fontSize: 20,\r\n                            color: 'black'\r\n                          }}\r\n                        >\r\n                          Tạo lệnh chuyển tiền\r\n                        </DialogContentText>\r\n                      </Box>\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <Typography>\r\n                        Số dư ví: <strong>{fCurrency(e.balance)}</strong>\r\n                      </Typography>\r\n                      <FormikProvider value={formikTranfer}>\r\n                        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmitTranfer}>\r\n                          <Tooltip\r\n                            title=\"Giao dịch từ 100,000đ - 500,000,000đ\"\r\n                            placement=\"bottom-end\"\r\n                          >\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              type={'number'}\r\n                              label=\"Số tiền VND\"\r\n                              {...getFieldPropsTranfer('amount')}\r\n                              sx={{ my: 2 }}\r\n                              InputProps={{\r\n                                endAdornment: <Icon color=\"#ff9b26e0\" icon={question} />\r\n                              }}\r\n                            />\r\n                          </Tooltip>\r\n                          {touchedTranfer.amount && errorsTranfer.amount && (\r\n                            <FormHelperText error sx={{ px: 2 }}>\r\n                              {touchedTranfer.amount && errorsTranfer.amount}\r\n                            </FormHelperText>\r\n                          )}\r\n                          <Box sx={{ color: '#d58311' }}>\r\n                            <Typography sx={{ my: 1, fontWeight: 500 }}>Lưu ý:</Typography>\r\n\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={InfoRecieve} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Số tiền trong ví dự án thanh toán của bạn sẽ được chuyển vào ví\r\n                                  thu tiền.\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={dolarMoney} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Số tiền bạn chuyển không vượt quá số dư trong ví hiện tại.\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={secureInfo} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Bạn cần giao dịch chuyển tiền tối thiểu là 100,000đ\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                          {e.balance > 0 ? (\r\n                            <LoadingButton\r\n                              fullWidth\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              loading={isSubmittingTranfer}\r\n                            >\r\n                              Chuyển tiền\r\n                            </LoadingButton>\r\n                          ) : (\r\n                            <LoadingButton\r\n                              disabled\r\n                              fullWidth\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              loading={isSubmittingTranfer}\r\n                            >\r\n                              Chuyển tiền\r\n                            </LoadingButton>\r\n                          )}\r\n                        </Form>\r\n                      </FormikProvider>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Grid>\r\n              </Grid>\r\n              <Typography variant=\"body2\" component=\"span\" sx={{ opacity: 0.72, pt: 2 }}>\r\n                Ví dùng để chứa số dư từ các khoản thanh toán bạn đã đầu tư trên Krowd\r\n              </Typography>\r\n            </Stack>\r\n          </RootStyle>\r\n        ))}\r\n    </RootStyleContainer>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\CollectionWallet.tsx",["3167","3168","3169","3170","3171"],"import { Icon } from '@iconify/react';\r\nimport calendar from '@iconify/icons-bi/calendar-date';\r\nimport dolarMoney from '@iconify/icons-ant-design/dollar-circle-outlined';\r\nimport InfoRecieve from '@iconify/icons-ant-design/solution-outline';\r\nimport secureInfo from '@iconify/icons-ant-design/security-scan-outlined';\r\nimport shieldCheck from '@iconify/icons-bi/shield-check';\r\nimport question from '@iconify/icons-bi/question-circle';\r\n// material\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// ----------------------------------------------------------------------\r\nimport moneyBillTransfer from '@iconify/icons-fa6-solid/money-bill-transfer';\r\n\r\nimport check2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\r\nimport { MIconButton } from 'components/@material-extend';\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Stack,\r\n  Grid,\r\n  Button,\r\n  Divider,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Dialog,\r\n  DialogContent,\r\n  Container,\r\n  Box,\r\n  Tooltip,\r\n  TextField,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Checkbox,\r\n  FormHelperText\r\n} from '@mui/material';\r\n// utils\r\nimport { fCurrency } from '../../../utils/formatNumber';\r\n//\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { Wallet } from '../../../@types/krowd/wallet';\r\nimport { getWalletByID, getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport { animate, motion } from 'framer-motion';\r\nimport React, { useState } from 'react';\r\nimport walletDetails from '@iconify/icons-ant-design/wallet-outlined';\r\n\r\nimport { TextAnimate, varBounceInUp, varWrapEnter } from 'components/animate';\r\nimport { getUserKrowdDetail } from 'redux/slices/krowd_slices/investor';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport axios from 'axios';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PATH_DASHBOARD } from 'routes/paths';\r\nimport * as Yup from 'yup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n  padding: theme.spacing(3),\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: '#d29f6370',\r\n  display: 'flex',\r\n  color: 'white',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\nconst RootStyleContainer = styled(motion.div)(({ theme }) => ({\r\n  backgroundPosition: 'center',\r\n  width: '100%',\r\n  backgroundColor: '#ff8900bf'\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\ntype Package = {\r\n  id: string;\r\n};\r\nexport default function CollectionWallet({ wallet }: { wallet: Wallet }) {\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n  const { investorKrowdDetail: mainInvestor } = useSelector(\r\n    (state: RootState) => state.user_InvestorStateKrowd\r\n  );\r\n  const { user } = useAuth();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [walletIDWithDraw, setWalletIDWithDraw] = useState('');\r\n\r\n  const [openModalShareInvest, setOpenModalShareInvest] = useState(false);\r\n\r\n  const [openModalWithDraw, setOpenModalWithDraw] = useState(false);\r\n\r\n  const [check, setCheck] = useState(false);\r\n  const [accountNameResponse, setAccountNameResponse] = useState('');\r\n  const [bankNameResponse, setBankNameResponse] = useState('');\r\n  const [bankAccountResponse, setBankAccountResponse] = useState('');\r\n  const [IDResponse, setIDResponse] = useState('');\r\n  const [amountResponse, setAmoutResponse] = useState(0);\r\n  const [openModalWithdrawRequestSuccess, setOpenModalWithdrawRequestSuccess] = useState(false);\r\n  const [showIDPayment, setShowIDPayment] = useState(true);\r\n\r\n  const [walletIDTranferFrom, setWalletIDTranferFrom] = useState('');\r\n  const [openModalTransfer, setOpenModalTransfer] = useState(false);\r\n\r\n  const ToWalletId =\r\n    listOfInvestorWallet &&\r\n    listOfInvestorWallet.slice(1, 2).find((e: any) => e.walletType.name === 'Ví đầu tư chung');\r\n\r\n  const handleClickRefeshBalance = async (v: Package) => {\r\n    dispatch(getWalletByID(v.id));\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n    setOpenModalShareInvest(true);\r\n  };\r\n  const handleClickWithDraw = async (v: Package) => {\r\n    setOpenModalWithDraw(true);\r\n    setWalletIDWithDraw(v.id);\r\n\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n  };\r\n  const onToggleShowIDPayment = () => {\r\n    setShowIDPayment((prev) => !prev);\r\n  };\r\n  const handleCheckBox = async () => {\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n    if (check === false) {\r\n      setCheck(true);\r\n      setFieldValueWithDraw('bankName', mainInvestor?.bankName);\r\n      setFieldValueWithDraw('bankAccount', mainInvestor?.bankAccount);\r\n      setFieldValueWithDraw('accountName', `${mainInvestor?.firstName} ${mainInvestor?.lastName}`);\r\n    } else {\r\n      setCheck(false);\r\n      setFieldValueWithDraw('bankName', '');\r\n      setFieldValueWithDraw('bankAccount', '');\r\n      setFieldValueWithDraw('accountName', '');\r\n    }\r\n  };\r\n  const handleClickTranferMoney = async (v: Package) => {\r\n    dispatch(getWalletByID(v.id));\r\n    setWalletIDTranferFrom(v.id);\r\n    setOpenModalTransfer(true);\r\n  };\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n  function getHeaderFormData2() {\r\n    const token = getToken();\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n  // CHuyển tiền\r\n  const TransferSchema = Yup.object().shape({\r\n    amount: Yup.number()\r\n      .required('Vui lòng nhập số tiền bạn cần rút')\r\n      .min(100000, 'Yêu cầu tối thiểu mỗi lần rút là 100,000đ')\r\n      .max(500000000, 'Yêu cầu tối đa mỗi lần rút là 500,000,000đ')\r\n  });\r\n  const formikTranfer = useFormik({\r\n    initialValues: {\r\n      fromWalletId: walletIDTranferFrom,\r\n      toWalletId: ToWalletId?.id ?? '',\r\n      amount: 0\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: TransferSchema,\r\n\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const headers = getHeaderFormData();\r\n        await axios\r\n          .put(REACT_APP_API_URL + `/wallets`, values, {\r\n            headers: headers\r\n          })\r\n          .then((res) => {\r\n            enqueueSnackbar('Chuyển tiền thành công', {\r\n              variant: 'success'\r\n            });\r\n            resetForm();\r\n            setOpenModalTransfer(false);\r\n            dispatch(getWalletList());\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Chuyển tiền thất bại vui lòng kiểm tra lại số dư của bạn', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(true);\r\n          });\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const {\r\n    errors: errorsTranfer,\r\n    values: valuesTranfer,\r\n    touched: touchedTranfer,\r\n    isSubmitting: isSubmittingTranfer,\r\n    handleSubmit: handleSubmitTranfer,\r\n    getFieldProps: getFieldPropsTranfer,\r\n    setFieldValue: setFieldValueTranfer\r\n  } = formikTranfer;\r\n\r\n  //Rút tiền\r\n  const WithDrawSchema = Yup.object().shape({\r\n    bankName: Yup.string().required('Yêu cầu nhập tên ngân hàng'),\r\n    bankAccount: Yup.string().required('Yêu cầu nhập tài khoản ngân hàng'),\r\n    accountName: Yup.string().required('Yêu cầu nhập tên chủ khoản'),\r\n    amount: Yup.number()\r\n      .required('Vui lòng nhập số tiền bạn cần rút')\r\n      .min(100000, 'Yêu cầu tối thiểu mỗi lần rút là 100,000đ')\r\n      .max(500000000, 'Yêu cầu tối đa mỗi lần rút là 500,000,000đ')\r\n  });\r\n  const formikWithDraw = useFormik({\r\n    initialValues: {\r\n      fromWalletId: walletIDWithDraw,\r\n      bankName: '',\r\n      accountName: '',\r\n      bankAccount: '',\r\n      amount: 0\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: WithDrawSchema,\r\n\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const headers = getHeaderFormData2();\r\n        await axios\r\n          .post(REACT_APP_API_URL + `/withdraw_requests`, values, {\r\n            headers: headers\r\n          })\r\n          .then((res) => {\r\n            enqueueSnackbar('Gửi yêu cầu rút tiền thành công', {\r\n              variant: 'success'\r\n            });\r\n            setOpenModalWithdrawRequestSuccess(true);\r\n            setAccountNameResponse(res.data.accountName);\r\n            setBankAccountResponse(res.data.bankAccount);\r\n            setBankNameResponse(res.data.bankName);\r\n            setAmoutResponse(res.data.amount);\r\n            setIDResponse(res.data.id);\r\n            dispatch(getWalletByID(walletIDWithDraw));\r\n            resetForm();\r\n            setOpenModalWithDraw(false);\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Gửi yêu cầu rút tiền thất bại vui lòng kiểm tra thông tin bạn nhập', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(true);\r\n          });\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const {\r\n    errors: errorsWithDraw,\r\n    values: valuesWithDraw,\r\n    touched: touchedWithDraw,\r\n    isSubmitting: isSubmittingWithDraw,\r\n    handleSubmit: handleSubmitWithDraw,\r\n    getFieldProps: getFieldPropsWithDraw,\r\n    setFieldValue: setFieldValueWithDraw\r\n  } = formikWithDraw;\r\n\r\n  return (\r\n    <RootStyleContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      {listOfInvestorWallet &&\r\n        listOfInvestorWallet.length > 0 &&\r\n        listOfInvestorWallet.slice(4, 5).map((e, i) => (\r\n          <RootStyle key={i}>\r\n            <Stack spacing={1} sx={{ p: 3 }}>\r\n              <Grid container>\r\n                <Grid lg={5}>\r\n                  <Typography sx={{ typography: 'h6' }}>{e.walletType.name}</Typography>\r\n                  <Typography>\r\n                    <TextAnimate\r\n                      sx={{ typography: 'h4' }}\r\n                      text={fCurrency(e.balance)}\r\n                      variants={varBounceInUp}\r\n                    />\r\n\r\n                    {/* {fCurrency(e.balance)} */}\r\n                  </Typography>{' '}\r\n                </Grid>\r\n\r\n                <Grid lg={7}>\r\n                  <Button\r\n                    sx={{\r\n                      display: 'flex',\r\n                      border: '1px solid white',\r\n                      color: 'white',\r\n                      mb: 1\r\n                    }}\r\n                    onClick={() => handleClickRefeshBalance(e)}\r\n                  >\r\n                    <Typography sx={{ typography: 'subtitle2', gap: 1, pl: 1 }}>\r\n                      Chi tiết tài khoản ví\r\n                    </Typography>\r\n                  </Button>\r\n                  <Dialog fullWidth maxWidth=\"sm\" open={openModalShareInvest}>\r\n                    <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                      <Icon color=\"#14b7cc\" height={60} width={60} icon={walletDetails} />\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <Box mt={1}>\r\n                        <DialogContentText\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                            fontWeight: 900,\r\n                            fontSize: 20,\r\n                            color: 'black'\r\n                          }}\r\n                        >\r\n                          Chi tiết tài khoản ví\r\n                        </DialogContentText>\r\n                      </Box>\r\n                      <Stack spacing={{ xs: 2, md: 1 }}>\r\n                        <Container sx={{ p: 2 }}>\r\n                          <Divider sx={{ my: 2 }} />\r\n                          <Card sx={{ p: 2, mb: 2 }}>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                mb: '0.5rem',\r\n                                p: 1\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Số dư khả dụng: <br />\r\n                                <strong style={{ color: 'green' }}>{fCurrency(e.balance)}</strong>\r\n                              </Typography>\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Tổng số dư <br />\r\n                                <strong>{fCurrency(e.balance)}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n\r\n                          <Card sx={{ p: 2 }}>\r\n                            <Typography sx={{ mb: 2 }}>THÔNG TIN CHI TIẾT</Typography>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Loại tài khoản <br />\r\n                                <strong>{e.walletType.name}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Divider />\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Tài khoản số điện thoại\r\n                                <br />\r\n                                <strong>{mainInvestor?.phoneNum}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Divider />\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Ngày mở tài khoản <br />\r\n                                <strong>{e.createDate}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n                          <Box my={2} p={2}>\r\n                            <Typography></Typography>\r\n                            <Button href={PATH_DASHBOARD.transaction.walletTransaction}>\r\n                              Xem lịch sử giao dịch ví{' '}\r\n                            </Button>\r\n                          </Box>\r\n                        </Container>\r\n                      </Stack>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }}>\r\n                        <Box>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => setOpenModalShareInvest(false)}\r\n                          >\r\n                            Đóng\r\n                          </Button>\r\n                        </Box>\r\n                      </Box>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n\r\n                  <Grid sx={{ display: 'flex', gap: 1 }}>\r\n                    <Button\r\n                      sx={{ mt: 1, display: 'flex', border: '1px solid white', color: 'white' }}\r\n                      onClick={() => handleClickTranferMoney(e)}\r\n                    >\r\n                      + Chuyển tiền\r\n                    </Button>\r\n                    <Dialog fullWidth maxWidth=\"sm\" open={openModalTransfer}>\r\n                      <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                        <Box mt={1} display={'flex'} justifyContent={'flex-end'}>\r\n                          <Box>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"error\"\r\n                              onClick={() => setOpenModalTransfer(false)}\r\n                            >\r\n                              X\r\n                            </Button>\r\n                          </Box>\r\n                        </Box>\r\n                        <Icon color=\"#14b7cc\" height={60} width={60} icon={moneyBillTransfer} />\r\n                        <Box mt={1}>\r\n                          <DialogContentText\r\n                            sx={{\r\n                              textAlign: 'center',\r\n                              fontWeight: 900,\r\n                              fontSize: 20,\r\n                              color: 'black'\r\n                            }}\r\n                          >\r\n                            Tạo lệnh chuyển tiền\r\n                          </DialogContentText>\r\n                        </Box>\r\n                      </DialogTitle>\r\n                      <DialogContent>\r\n                        <Typography>\r\n                          Số dư ví: <strong>{fCurrency(e.balance)}</strong>\r\n                        </Typography>\r\n                        <FormikProvider value={formikTranfer}>\r\n                          <Form noValidate autoComplete=\"off\" onSubmit={handleSubmitTranfer}>\r\n                            <Tooltip\r\n                              title=\"Giao dịch từ 100,000đ - 500,000,000đ\"\r\n                              placement=\"bottom-end\"\r\n                            >\r\n                              <TextField\r\n                                required\r\n                                fullWidth\r\n                                type={'number'}\r\n                                label=\"Số tiền VND\"\r\n                                {...getFieldPropsTranfer('amount')}\r\n                                sx={{ my: 2 }}\r\n                                InputProps={{\r\n                                  endAdornment: <Icon color=\"#ff9b26e0\" icon={question} />\r\n                                }}\r\n                              />\r\n                            </Tooltip>\r\n                            {touchedTranfer.amount && errorsTranfer.amount && (\r\n                              <FormHelperText error sx={{ px: 2 }}>\r\n                                {touchedTranfer.amount && errorsTranfer.amount}\r\n                              </FormHelperText>\r\n                            )}\r\n\r\n                            <Box sx={{ color: '#d58311' }}>\r\n                              <Typography sx={{ my: 1, fontWeight: 500 }}>Lưu ý:</Typography>\r\n\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={InfoRecieve} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Số tiền trong ví thu tiền của bạn sẽ được chuyển vào ví đầu tư\r\n                                    chung.\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={dolarMoney} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Số tiền bạn chuyển không vượt quá số dư trong ví hiện tại.\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={secureInfo} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Bạn cần giao dịch chuyển tiền tối thiểu là 100,000đ\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                            </Box>\r\n                            {e.balance > 0 ? (\r\n                              <LoadingButton\r\n                                fullWidth\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                loading={isSubmittingTranfer}\r\n                              >\r\n                                Chuyển tiền\r\n                              </LoadingButton>\r\n                            ) : (\r\n                              <LoadingButton\r\n                                disabled\r\n                                fullWidth\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                loading={isSubmittingTranfer}\r\n                              >\r\n                                Chuyển tiền\r\n                              </LoadingButton>\r\n                            )}\r\n                          </Form>\r\n                        </FormikProvider>\r\n                      </DialogContent>\r\n                    </Dialog>\r\n                    <Button\r\n                      sx={{ mt: 1, display: 'flex', border: '1px solid white', color: 'white' }}\r\n                      onClick={() => handleClickWithDraw(e)}\r\n                    >\r\n                      - Rút tiền\r\n                    </Button>\r\n                    <Dialog fullWidth maxWidth=\"sm\" open={openModalWithDraw}>\r\n                      <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                        <Box mt={1} display={'flex'} justifyContent={'flex-end'}>\r\n                          <Box>\r\n                            <Button\r\n                              variant=\"contained\"\r\n                              color=\"error\"\r\n                              onClick={() => setOpenModalWithDraw(false)}\r\n                            >\r\n                              X\r\n                            </Button>\r\n                          </Box>\r\n                        </Box>\r\n                        <Icon color=\"#14b7cc\" height={60} width={60} icon={walletDetails} />\r\n                        <Box mt={1}>\r\n                          <DialogContentText\r\n                            sx={{\r\n                              textAlign: 'center',\r\n                              fontWeight: 900,\r\n                              fontSize: 20,\r\n                              color: 'black'\r\n                            }}\r\n                          >\r\n                            Tạo lệnh rút tiền\r\n                          </DialogContentText>\r\n                        </Box>\r\n                      </DialogTitle>\r\n                      <DialogContent>\r\n                        <Typography>\r\n                          Số dư ví: <strong>{fCurrency(e.balance)}</strong>\r\n                        </Typography>\r\n                        <FormikProvider value={formikWithDraw}>\r\n                          <Form noValidate autoComplete=\"off\" onSubmit={handleSubmitWithDraw}>\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              label=\"Tên ngân hàng\"\r\n                              {...getFieldPropsWithDraw('bankName')}\r\n                              sx={{ mt: 2 }}\r\n                            />\r\n                            {touchedWithDraw.bankName && errorsWithDraw.bankName && (\r\n                              <FormHelperText error sx={{ px: 2 }}>\r\n                                {touchedWithDraw.bankName && errorsWithDraw.bankName}\r\n                              </FormHelperText>\r\n                            )}\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              label=\"Tài khoản ngân hàng\"\r\n                              {...getFieldPropsWithDraw('bankAccount')}\r\n                              sx={{ mt: 2 }}\r\n                            />\r\n                            {touchedWithDraw.bankAccount && errorsWithDraw.bankAccount && (\r\n                              <FormHelperText error sx={{ px: 2 }}>\r\n                                {touchedWithDraw.bankAccount && errorsWithDraw.bankAccount}\r\n                              </FormHelperText>\r\n                            )}\r\n                            <TextField\r\n                              required\r\n                              fullWidth\r\n                              label=\"Tên chủ tài khoản\"\r\n                              {...getFieldPropsWithDraw('accountName')}\r\n                              sx={{ mt: 2 }}\r\n                            />\r\n                            {touchedWithDraw.accountName && errorsWithDraw.accountName && (\r\n                              <FormHelperText error sx={{ px: 2 }}>\r\n                                {touchedWithDraw.accountName && errorsWithDraw.accountName}\r\n                              </FormHelperText>\r\n                            )}\r\n                            <Tooltip\r\n                              title=\"Giao dịch từ 100,000đ - 500,000,000đ\"\r\n                              placement=\"bottom-end\"\r\n                            >\r\n                              <TextField\r\n                                required\r\n                                fullWidth\r\n                                type={'number'}\r\n                                label=\"Số tiền VND\"\r\n                                {...getFieldPropsWithDraw('amount')}\r\n                                sx={{ mt: 2 }}\r\n                                InputProps={{\r\n                                  endAdornment: <Icon color=\"#ff9b26e0\" icon={question} />\r\n                                }}\r\n                              />\r\n                            </Tooltip>\r\n                            {touchedWithDraw.amount && errorsWithDraw.amount && (\r\n                              <FormHelperText error sx={{ px: 2 }}>\r\n                                {touchedWithDraw.amount && errorsWithDraw.amount}\r\n                              </FormHelperText>\r\n                            )}\r\n\r\n                            <Box display={'flex'} alignItems={'center'}>\r\n                              <Checkbox onClick={handleCheckBox} />\r\n                              <Typography>Sử dụng thông tin hiện có</Typography>\r\n                            </Box>\r\n                            <RadioGroup row sx={{ my: 2 }} {...getFieldPropsWithDraw('amount')}>\r\n                              <FormControlLabel\r\n                                value=\"300000\"\r\n                                control={<Radio />}\r\n                                label=\"300,000đ\"\r\n                                sx={{ px: 2 }}\r\n                              />\r\n                              <FormControlLabel\r\n                                value=\"500000\"\r\n                                control={<Radio />}\r\n                                label=\"500,000đ\"\r\n                                sx={{ px: 2.7 }}\r\n                              />\r\n                              <FormControlLabel\r\n                                value=\"1000000\"\r\n                                control={<Radio />}\r\n                                label=\"1,000,000đ\"\r\n                                sx={{ px: 2 }}\r\n                              />\r\n                              <FormControlLabel\r\n                                value=\"3000000\"\r\n                                control={<Radio />}\r\n                                label=\"3,000,000đ\"\r\n                                sx={{ px: 2 }}\r\n                              />\r\n                              <FormControlLabel\r\n                                value=\"5000000\"\r\n                                control={<Radio />}\r\n                                label=\"5,000,000đ\"\r\n                                sx={{ px: 1 }}\r\n                              />\r\n                              <FormControlLabel\r\n                                value=\"10000000\"\r\n                                control={<Radio />}\r\n                                label=\"10,000,000đ\"\r\n                                sx={{ px: 2.3 }}\r\n                              />\r\n                            </RadioGroup>\r\n                            <Box sx={{ color: '#d58311' }}>\r\n                              <Typography sx={{ my: 1, fontWeight: 500 }}>Lưu ý:</Typography>\r\n\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={calendar} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Số tiền bạn rút sẽ được chuyển vào tài khoản của bạn chậm nhất\r\n                                    là 24h sau khi tạo lệnh rút tiền.\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={dolarMoney} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Số tiền bạn rút không vượt quá số dư trong ví hiện tại.\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={InfoRecieve} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Thông tin rút tiền là thông tin tài khoản của bạn hoặc thông tin\r\n                                    người mà bạn quen biết (Mọi thông tin đều phải trùng khớp với\r\n                                    thông tin đã đăng ký bên ngân hàng đó).\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                              <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                                <Box>\r\n                                  <Icon color=\"#d58311\" width={20} height={20} icon={secureInfo} />\r\n                                </Box>\r\n                                <Box>\r\n                                  <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                    Vui lòng kiểm tra thông tin trước khi gửi lệnh rút tiền.\r\n                                  </Typography>\r\n                                </Box>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n                              <Box>\r\n                                <Icon color=\"green\" width={20} height={20} icon={shieldCheck} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Mọi thông tin khách hàng đều được mã hóa để bảo mật thông tin\r\n                                  khách hàng.\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            {e.balance > 0 ? (\r\n                              <LoadingButton\r\n                                fullWidth\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                loading={isSubmittingWithDraw}\r\n                              >\r\n                                Rút tiền\r\n                              </LoadingButton>\r\n                            ) : (\r\n                              <LoadingButton\r\n                                disabled\r\n                                fullWidth\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                size=\"large\"\r\n                                loading={isSubmittingWithDraw}\r\n                              >\r\n                                Rút tiền\r\n                              </LoadingButton>\r\n                            )}\r\n                          </Form>\r\n                        </FormikProvider>\r\n                      </DialogContent>\r\n                    </Dialog>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                <Typography variant=\"body2\" component=\"span\" sx={{ opacity: 0.72, pt: 2 }}>\r\n                  Ví dùng để chứa số dư nhận từ ví Dự án thanh toán\r\n                </Typography>\r\n              </Stack>\r\n            </Stack>\r\n          </RootStyle>\r\n        ))}\r\n      <Dialog fullWidth maxWidth=\"sm\" open={openModalWithdrawRequestSuccess}>\r\n        <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n          <Icon color=\"#14b7cc\" height={60} width={60} icon={check2Fill} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box mt={1}>\r\n            <DialogContentText\r\n              sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n            >\r\n              Gửi yêu cầu thành công\r\n            </DialogContentText>\r\n          </Box>\r\n          <Stack spacing={{ xs: 2, md: 1 }}>\r\n            <Container sx={{ p: 2 }}>\r\n              <Box>\r\n                <Typography sx={{ textAlign: 'center' }}>Yêu cầu đã hoàn thành</Typography>\r\n              </Box>\r\n              {/* <Box>\r\n                <Typography sx={{ textAlign: 'center', color: '#14b7cc', fontSize: 35 }}>\r\n                  {fCurrency(`${dataInvestedSuccess}`)}\r\n                </Typography>\r\n              </Box> */}\r\n              <Divider sx={{ my: 2 }} />\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: '0.5rem',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Tổng số tiền</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong> {fCurrency(amountResponse)}</strong>\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: '0.5rem',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Số tiền thanh toán</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong> {fCurrency(amountResponse)}</strong>\r\n                </Typography>\r\n              </Box>\r\n              <Divider sx={{ my: 2 }} />\r\n\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Giao dịch</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {/* {resDate} */}\r\n                  Rút tiền khỏi ví\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Tên người nhận</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {accountNameResponse}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Ngân hàng thụ hưởng</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {bankNameResponse}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Tài khoản người nhận</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {bankAccountResponse}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Mã yêu cầu</strong>\r\n                </Typography>\r\n\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <MIconButton\r\n                      color=\"inherit\"\r\n                      onClick={onToggleShowIDPayment}\r\n                      sx={{ opacity: 0.48 }}\r\n                    >\r\n                      <Icon icon={showIDPayment ? eyeFill : eyeOffFill} />\r\n                    </MIconButton>\r\n                    <Typography sx={{ typography: 'body2' }}>\r\n                      {showIDPayment ? '********' : IDResponse}\r\n                    </Typography>\r\n                  </Stack>\r\n                </Typography>\r\n              </Box>\r\n            </Container>\r\n          </Stack>\r\n          <Box>\r\n            <Button\r\n              fullWidth\r\n              color=\"error\"\r\n              variant=\"contained\"\r\n              onClick={() => setOpenModalWithdrawRequestSuccess(false)}\r\n            >\r\n              Đóng\r\n            </Button>\r\n          </Box>\r\n          <Box p={3}>\r\n            <Typography variant=\"body2\">\r\n              Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với bộ\r\n              phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </RootStyleContainer>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\AdvanceWallet.tsx",["3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182"],"import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport { Icon } from '@iconify/react';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\nimport diagonalArrowLeftDownFill from '@iconify/icons-eva/diagonal-arrow-left-down-fill';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, Typography, Stack } from '@mui/material';\r\n// utils\r\nimport { fCurrency, fPercent } from '../../../utils/formatNumber';\r\n//\r\nimport BaseOptionChart from '../../charts/BaseOptionChart';\r\nimport { useEffect } from 'react';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { Wallet } from '../../../@types/krowd/wallet';\r\nimport { getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport { TextAnimate, varBounceInUp, varWrapEnter } from 'components/animate';\r\nimport { motion } from 'framer-motion';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// const RootStyle = styled(Card)(({ theme }) => ({\r\n//   width: '100%',\r\n//   boxShadow: 'none',\r\n//   position: 'relative',\r\n//   backgroundColor: '#ff9b26e0',\r\n//   color: 'white',\r\n//   padding: theme.spacing(3),\r\n//   marginTop: theme.spacing(2)\r\n// }));\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n  padding: theme.spacing(3),\r\n  backgroundColor: '#d29f6370',\r\n  display: 'flex',\r\n  color: 'white',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyleContainer = styled(motion.div)(({ theme }) => ({\r\n  backgroundPosition: 'center',\r\n  width: '100%',\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: '#ff8900bf'\r\n}));\r\n\r\nexport default function AdvanceWallet({ wallet }: { wallet: Wallet }) {\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    chart: { sparkline: { enabled: true } },\r\n    xaxis: { labels: { show: false } },\r\n    yaxis: { labels: { show: false } },\r\n    stroke: { width: 4 },\r\n    legend: { show: false },\r\n    grid: { show: false },\r\n    tooltip: {\r\n      marker: { show: false },\r\n      y: {\r\n        formatter: (seriesName: string) => fCurrency(seriesName),\r\n        title: {\r\n          formatter: () => ''\r\n        }\r\n      }\r\n    },\r\n    fill: { gradient: { opacityFrom: 0.56, opacityTo: 0.56 } }\r\n  });\r\n\r\n  return (\r\n    <RootStyleContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      {/* {walletList.listOfInvestorWallet\r\n        .filter((IS) => IS.type === 'I1')\r\n        .map((e, i) => { */}\r\n      {listOfInvestorWallet &&\r\n        listOfInvestorWallet.length > 0 &&\r\n        listOfInvestorWallet.slice(2, 3).map((e, i) => (\r\n          <RootStyle key={i}>\r\n            {/* <IconWrapperStyle>\r\n              <Icon icon={diagonalArrowLeftDownFill} width={24} height={24} />\r\n            </IconWrapperStyle> */}\r\n\r\n            <Stack spacing={1} sx={{ p: 3 }}>\r\n              <Typography sx={{ typography: 'h6' }}>{e.walletType.name}</Typography>\r\n              <TextAnimate\r\n                sx={{ typography: 'h4' }}\r\n                text={fCurrency(e.balance)}\r\n                variants={varBounceInUp}\r\n              />{' '}\r\n              <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                <Typography variant=\"body2\" component=\"span\" sx={{ opacity: 0.72, pt: 4 }}>\r\n                  Ví dùng để chứa số dư bạn đã đầu tư vào các dự án\r\n                </Typography>\r\n              </Stack>\r\n            </Stack>\r\n          </RootStyle>\r\n        ))}\r\n    </RootStyleContainer>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppWidgets2.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppWidgets1.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppWelcome.tsx",["3183","3184","3185","3186","3187","3188","3189"],"import { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { motion, useAnimation, MotionProps } from 'framer-motion';\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography, Button, Card, CardContent, CardProps } from '@mui/material';\r\nimport { SeoIllustration } from '../../../assets';\r\nimport { User_Investor } from '../../../@types/krowd/investor';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  backgroundColor: '#14b7cc',\r\n  [theme.breakpoints.up('md')]: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    textAlign: 'left',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface AppWelcomeProps extends CardProps {\r\n  investor?: User_Investor | null;\r\n  user?: any;\r\n}\r\n\r\nexport default function AppWelcome({ user, investor }: AppWelcomeProps) {\r\n  return (\r\n    <RootStyle>\r\n      <CardContent\r\n        sx={{\r\n          p: { md: 0 },\r\n          pl: { md: 5 }\r\n        }}\r\n      >\r\n        <Typography gutterBottom variant=\"h4\" sx={{ color: '#FFFFFf' }}>\r\n          Bảng tổng quan hệ thống\r\n        </Typography>\r\n        <Typography gutterBottom variant=\"h4\" sx={{ color: '#FFFFFf' }}>\r\n          Chào mừng bạn trở lại,\r\n          <br /> {user.fullName}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <img\r\n        style={{\r\n          padding: 3,\r\n          width: 460\r\n          // margin: { xs: 'auto', md: 'inherit' }\r\n        }}\r\n        src={'/static/illustrations/AppIllustation.png'}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTotalDownloads.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\WalletWelcome.tsx",["3190","3191","3192","3193","3194","3195","3196","3197"],"// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Typography, Button, Card, CardContent, CardProps, Container } from '@mui/material';\r\nimport { CheckOutIllustration, OrderCompleteIllustration, SeoIllustration } from '../../../assets';\r\nimport { User_Investor } from '../../../@types/krowd/investor';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  backgroundColor: '#14b7cc',\r\n  [theme.breakpoints.up('md')]: {\r\n    height: '70%',\r\n    display: 'center',\r\n    textAlign: 'left',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    height: '70%',\r\n    textAlign: 'center',\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface AppWelcomeProps extends CardProps {\r\n  investor?: User_Investor | null;\r\n  user?: any;\r\n}\r\n\r\nexport default function AppWelcome({ user, investor }: AppWelcomeProps) {\r\n  return (\r\n    <RootStyle>\r\n      <img\r\n        style={{\r\n          padding: 3,\r\n          width: 460\r\n        }}\r\n        src={'/static/icons/navbar/bankingIllustration.jpg'}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTotalInstalled.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTotalActiveUsers.tsx",["3198","3199","3200","3201"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppTopRelated.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppNewInvoice.tsx",["3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225"],"import { Icon } from '@iconify/react';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport printerFill from '@iconify/icons-eva/printer-fill';\r\nimport archiveFill from '@iconify/icons-eva/archive-fill';\r\nimport downloadFill from '@iconify/icons-eva/download-fill';\r\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\n// material\r\nimport { useTheme } from '@mui/material/styles';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport {\r\n  Box,\r\n  Menu,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Divider,\r\n  MenuItem,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Typography,\r\n  CardHeader,\r\n  TableContainer\r\n} from '@mui/material';\r\n// utils\r\nimport { fCurrency } from '../../../utils/formatNumber';\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport Label from '../../Label';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport { MIconButton } from '../../@material-extend';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { getProjectListInvestedById } from 'redux/slices/krowd_slices/project';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AppNewInvoice() {\r\n  const theme = useTheme();\r\n  const { InvestedProjectDetails } = useSelector((state: RootState) => state.project);\r\n  const { listOfProject } = InvestedProjectDetails;\r\n  // useEffect(() => {\r\n  //   dispatch(getProjectListInvestedById(localStorage.getItem('projectId') ?? ''));\r\n  // }, [dispatch]);\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Gói bạn đã đầu tư\" sx={{ mb: 3 }} />\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 620 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Gói đã mua</TableCell>\r\n                <TableCell>Số lượng</TableCell>\r\n                <TableCell sx={{ textAlign: 'center' }}>Tổng tiền </TableCell>\r\n                <TableCell sx={{ textAlign: 'right' }}>Ngày mua</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {listOfProject &&\r\n                listOfProject?.investmentRecords.map((row, index) => (\r\n                  <TableRow key={index}>\r\n                    <TableCell>{`${row.packageName}`}</TableCell>\r\n                    <TableCell>Bạn đã mua {row.quantity} gói</TableCell>\r\n                    <TableCell sx={{ textAlign: 'right' }}>{fCurrency(row.totalPrice)}</TableCell>\r\n                    <TableCell sx={{ textAlign: 'right' }}>{row.createDate}</TableCell>\r\n\r\n                    {/* <TableCell>\r\n                      <Label\r\n                        variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                        color={\r\n                          (row.status === 'in_progress' && 'warning') ||\r\n                          (row.status === 'out_of_date' && 'error') ||\r\n                          'success'\r\n                        }\r\n                      >\r\n                        {sentenceCase(row.status)}\r\n                      </Label>\r\n                    </TableCell> */}\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n      <Divider />\r\n    </Card>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppFeatured.tsx",["3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236"],"import Slider from 'react-slick';\r\nimport { motion } from 'framer-motion';\r\nimport { useState, useRef } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { alpha, useTheme, styled } from '@mui/material/styles';\r\nimport { CardContent, Box, Card, Typography } from '@mui/material';\r\n// utils\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport { varFadeInRight, MotionContainer } from '../../animate';\r\nimport { RootState, useSelector } from 'redux/store';\r\n\r\n// ----------------------------------------------------------------------\r\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\r\n  height: 280,\r\n  width: '100%',\r\n  objectFit: 'cover',\r\n  [theme.breakpoints.up('xl')]: {\r\n    height: 320\r\n  }\r\n}));\r\nexport default function AppFeatured() {\r\n  const { InvestedProjectDetails } = useSelector((state: RootState) => state.project);\r\n  const { listOfProject } = InvestedProjectDetails;\r\n  return (\r\n    <Card>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <CarouselImgStyle alt={'aaa'} src={listOfProject?.projectImage ?? ''} />\r\n        <Box my={2}>\r\n          <Typography sx={{ textAlign: 'center', color: 'green' }} variant=\"h5\" gutterBottom noWrap>\r\n            {listOfProject?.projectName}\r\n          </Typography>\r\n          {/* <Typography sx={{ textAlign: 'end' }} variant=\"body2\" noWrap>\r\n            {listOfProject?.projectStatus}\r\n          </Typography> */}\r\n        </Box>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppCurrentDownload.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-app\\AppAreaInstalled.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\TempWallet.tsx",["3237","3238","3239","3240","3241"],"// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Card, Typography, Stack, Grid, Button } from '@mui/material';\r\n// utils\r\nimport { fCurrency, fPercent } from '../../../utils/formatNumber';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { Wallet } from '../../../@types/krowd/wallet';\r\n\r\nimport { TextAnimate, varBounceInUp, varWrapEnter } from 'components/animate';\r\nimport { motion } from 'framer-motion';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n  padding: theme.spacing(3),\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: theme.palette.primary.main,\r\n  display: 'flex',\r\n  color: 'white',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyleContainer = styled(motion.div)(({ theme }) => ({\r\n  backgroundPosition: 'center',\r\n  width: '100%',\r\n  backgroundSize: 'cover',\r\n  position: 'relative',\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: theme.palette.primary.main,\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\nexport default function TempWallet({ wallet }: { wallet: Wallet }) {\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { listOfInvestorWallet } = walletList;\r\n\r\n  return (\r\n    <RootStyleContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      {listOfInvestorWallet &&\r\n        listOfInvestorWallet.length > 0 &&\r\n        listOfInvestorWallet.slice(0, 1).map((e, i) => (\r\n          <RootStyle key={i}>\r\n            <Stack spacing={1} sx={{ p: 3 }}>\r\n              <Typography sx={{ typography: 'h6' }}>{e.walletType.name}</Typography>\r\n              <Typography>\r\n                <TextAnimate\r\n                  text={fCurrency(e.balance)}\r\n                  sx={{ typography: 'h3' }}\r\n                  variants={varBounceInUp}\r\n                />\r\n              </Typography>\r\n              <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                <Typography variant=\"body2\" component=\"span\" sx={{ opacity: 0.72 }}>\r\n                  {/* &nbsp;Chưa cập nhật */}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"span\" sx={{ opacity: 0.72 }}>\r\n                  &nbsp; Ví dùng để lưu số dư nạp và rút tiền của bạn trong Krowd\r\n                </Typography>\r\n              </Stack>\r\n            </Stack>\r\n          </RootStyle>\r\n        ))}\r\n    </RootStyleContainer>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-banking\\SharedInvestmentWallet.tsx",["3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3253","3254","3255"],"import { Icon } from '@iconify/react';\r\n\r\n// material\r\nimport { styled, useTheme } from '@mui/material/styles';\r\nimport {\r\n  Card,\r\n  Typography,\r\n  Stack,\r\n  Button,\r\n  Box,\r\n  Grid,\r\n  Divider,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Dialog,\r\n  DialogContent,\r\n  Tooltip,\r\n  TextField,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Checkbox,\r\n  FormHelperText\r\n} from '@mui/material';\r\n// utils\r\nimport { fCurrency, fPercent } from '../../../utils/formatNumber';\r\n//\r\nimport { useEffect, useState } from 'react';\r\nimport { getWalletByID, getWalletList } from 'redux/slices/krowd_slices/wallet';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { Wallet } from '../../../@types/krowd/wallet';\r\nimport { PATH_PAGE } from 'routes/paths';\r\nimport walletDetails from '@iconify/icons-ant-design/wallet-outlined';\r\nimport { TextAnimate, varBounceInUp, varFadeInRight, varWrapEnter } from 'components/animate';\r\nimport { motion } from 'framer-motion';\r\nimport { Container } from '@mui/system';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\nimport { getUserKrowdDetail } from 'redux/slices/krowd_slices/investor';\r\nimport useAuth from 'hooks/useAuth';\r\nimport { REACT_APP_API_URL } from 'config';\r\nimport axios from 'axios';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport shieldCheck from '@iconify/icons-bi/shield-check';\r\nimport question from '@iconify/icons-bi/question-circle';\r\nimport { useSnackbar } from 'notistack';\r\nimport calendar from '@iconify/icons-bi/calendar-date';\r\nimport dolarMoney from '@iconify/icons-ant-design/dollar-circle-outlined';\r\nimport InfoRecieve from '@iconify/icons-ant-design/solution-outline';\r\nimport secureInfo from '@iconify/icons-ant-design/security-scan-outlined';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// ----------------------------------------------------------------------\r\nimport check2Fill from '@iconify/icons-eva/checkmark-circle-2-fill';\r\nimport { MIconButton } from 'components/@material-extend';\r\nimport * as Yup from 'yup';\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  width: '100%',\r\n  position: 'relative',\r\n  backgroundSize: 'cover',\r\n  padding: theme.spacing(3),\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: theme.palette.primary.main,\r\n  display: 'flex',\r\n  color: 'white',\r\n  marginBottom: theme.spacing(3),\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\nconst RootStyleContainer = styled(motion.div)(({ theme }) => ({\r\n  backgroundPosition: 'center',\r\n  width: '100%',\r\n  backgroundSize: 'cover',\r\n  position: 'relative',\r\n  backgroundRepeat: 'no-repeat',\r\n  backgroundColor: theme.palette.primary.main,\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between'\r\n}));\r\n// ----------------------------------------------------------------------\r\n\r\ntype Package = {\r\n  id: string;\r\n};\r\nexport default function SharedInvestmentWallet({ wallet }: { wallet: Wallet }) {\r\n  const { isLoading, walletList } = useSelector((state: RootState) => state.walletKrowd);\r\n  const { investorKrowdDetail: mainInvestor } = useSelector(\r\n    (state: RootState) => state.user_InvestorStateKrowd\r\n  );\r\n  const [walletIDWithDraw, setWalletIDWithDraw] = useState('');\r\n  const [accountNameResponse, setAccountNameResponse] = useState('');\r\n  const [bankNameResponse, setBankNameResponse] = useState('');\r\n  const [bankAccountResponse, setBankAccountResponse] = useState('');\r\n  const [IDResponse, setIDResponse] = useState('');\r\n  const [amountResponse, setAmoutResponse] = useState(0);\r\n  const [openModalWithdrawRequestSuccess, setOpenModalWithdrawRequestSuccess] = useState(false);\r\n  const [showIDPayment, setShowIDPayment] = useState(true);\r\n\r\n  const { user } = useAuth();\r\n  const { listOfInvestorWallet } = walletList;\r\n  const [openModalShareInvest, setOpenModalShareInvest] = useState(false);\r\n\r\n  const [openModalWithDraw, setOpenModalWithDraw] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const [check, setCheck] = useState(false);\r\n  const handleClickWithDraw = async (v: Package) => {\r\n    setOpenModalWithDraw(true);\r\n    setWalletIDWithDraw(v.id);\r\n\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n  };\r\n  const onToggleShowIDPayment = () => {\r\n    setShowIDPayment((prev) => !prev);\r\n  };\r\n  const handleCheckBox = async () => {\r\n    dispatch(getUserKrowdDetail(user?.id));\r\n\r\n    if (check === false) {\r\n      setCheck(true);\r\n      setFieldValueWithDraw('bankName', mainInvestor?.bankName);\r\n      setFieldValueWithDraw('bankAccount', mainInvestor?.bankAccount);\r\n      setFieldValueWithDraw('accountName', `${mainInvestor?.lastName} ${mainInvestor?.firstName}`);\r\n    } else {\r\n      setCheck(false);\r\n      setFieldValueWithDraw('bankName', '');\r\n      setFieldValueWithDraw('bankAccount', '');\r\n      setFieldValueWithDraw('accountName', '');\r\n    }\r\n  };\r\n\r\n  function getToken() {\r\n    return window.localStorage.getItem('accessToken');\r\n  }\r\n  function getHeaderFormData() {\r\n    const token = getToken();\r\n    return { 'Content-Type': 'multipart/form-data', Authorization: `Bearer ${token}` };\r\n  }\r\n  function getHeaderFormData2() {\r\n    const token = getToken();\r\n    return { Authorization: `Bearer ${token}` };\r\n  }\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      bankName: '',\r\n      bankAccount: '',\r\n      userName: '',\r\n      amount: 0\r\n    },\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const formData = new FormData();\r\n        const header = getHeaderFormData();\r\n        formData.append('amount', `${values.amount}`);\r\n        await axios({\r\n          method: 'post',\r\n          url: REACT_APP_API_URL + '/momo/request',\r\n          data: formData,\r\n          headers: header\r\n        })\r\n          .then((res) => {\r\n            window.location.replace(res.data.result.payUrl);\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Cập nhật số dư thất bại', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {});\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, isSubmitting, handleSubmit, getFieldProps, setFieldValue } =\r\n    formik;\r\n  //Rút tiền\r\n  const WithDrawSchema = Yup.object().shape({\r\n    bankName: Yup.string().required('Yêu cầu nhập tên ngân hàng'),\r\n    bankAccount: Yup.string().required('Yêu cầu nhập tài khoản ngân hàng'),\r\n    accountName: Yup.string().required('Yêu cầu nhập tên chủ khoản'),\r\n    amount: Yup.number()\r\n      .required('Vui lòng nhập số tiền bạn cần rút')\r\n      .min(100000, 'Yêu cầu tối thiểu mỗi lần rút là 100,000đ')\r\n      .max(500000000, 'Yêu cầu tối đa mỗi lần rút là 500,000,000đ')\r\n  });\r\n  const formikWithDraw = useFormik({\r\n    initialValues: {\r\n      fromWalletId: walletIDWithDraw,\r\n      bankName: '',\r\n      accountName: '',\r\n      bankAccount: '',\r\n      amount: 0\r\n    },\r\n    enableReinitialize: true,\r\n    validationSchema: WithDrawSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      try {\r\n        const headers = getHeaderFormData2();\r\n        await axios\r\n          .post(REACT_APP_API_URL + `/withdraw_requests`, values, {\r\n            headers: headers\r\n          })\r\n          .then((res) => {\r\n            enqueueSnackbar('Gửi yêu cầu rút tiền thành công', {\r\n              variant: 'success'\r\n            });\r\n            setAccountNameResponse(res.data.accountName);\r\n            setBankAccountResponse(res.data.bankAccount);\r\n            setBankNameResponse(res.data.bankName);\r\n            setAmoutResponse(res.data.amount);\r\n            setIDResponse(res.data.id);\r\n            resetForm();\r\n            setOpenModalWithDraw(false);\r\n            setOpenModalWithdrawRequestSuccess(true);\r\n          })\r\n          .catch(() => {\r\n            enqueueSnackbar('Gửi yêu cầu rút tiền thất bại vui lòng kiểm tra thông tin bạn nhập', {\r\n              variant: 'error'\r\n            });\r\n          })\r\n          .finally(() => {\r\n            setSubmitting(true);\r\n          });\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const {\r\n    errors: errorsWithDraw,\r\n    values: valuesWithDraw,\r\n    touched: touchedWithDraw,\r\n    isSubmitting: isSubmittingWithDraw,\r\n    handleSubmit: handleSubmitWithDraw,\r\n    getFieldProps: getFieldPropsWithDraw,\r\n    setFieldValue: setFieldValueWithDraw\r\n  } = formikWithDraw;\r\n  const handleClickRefeshBalance = async (v: Package) => {\r\n    dispatch(getWalletByID(v.id));\r\n    setOpenModalShareInvest(true);\r\n  };\r\n\r\n  return (\r\n    <RootStyleContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\r\n      {listOfInvestorWallet &&\r\n        listOfInvestorWallet.length > 0 &&\r\n        listOfInvestorWallet.slice(1, 2).map((e, i) => (\r\n          <RootStyle key={i}>\r\n            <Stack spacing={1} sx={{ p: 3 }}>\r\n              <Grid container display={'flex'}>\r\n                <Grid lg={8}>\r\n                  <Typography sx={{ typography: 'h6' }}>{e.walletType.name}</Typography>\r\n                </Grid>\r\n                <Grid>\r\n                  <Button\r\n                    sx={{\r\n                      display: 'flex',\r\n                      border: '1px solid white'\r\n                    }}\r\n                    variant=\"contained\"\r\n                    onClick={() => handleClickRefeshBalance(e)}\r\n                  >\r\n                    {/* <Icon icon={refresh} /> */}\r\n                    <Typography sx={{ typography: 'subtitle2', gap: 1, pl: 1 }}>\r\n                      Chi tiết tài khoản ví\r\n                    </Typography>\r\n                  </Button>\r\n                  <Dialog fullWidth maxWidth=\"sm\" open={openModalShareInvest}>\r\n                    <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                      <Icon color=\"#14b7cc\" height={60} width={60} icon={walletDetails} />\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <Box mt={1}>\r\n                        <DialogContentText\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                            fontWeight: 900,\r\n                            fontSize: 20,\r\n                            color: 'black'\r\n                          }}\r\n                        >\r\n                          Chi tiết tài khoản ví\r\n                        </DialogContentText>\r\n                      </Box>\r\n                      <Stack spacing={{ xs: 2, md: 1 }}>\r\n                        <Container sx={{ p: 2 }}>\r\n                          <Divider sx={{ my: 2 }} />\r\n                          <Card sx={{ p: 2, mb: 2 }}>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                justifyContent: 'space-between',\r\n                                mb: '0.5rem',\r\n                                p: 1\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Số dư khả dụng: <br />\r\n                                <strong style={{ color: 'green' }}>{fCurrency(e.balance)}</strong>\r\n                              </Typography>\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Tổng số dư <br />\r\n                                <strong>{fCurrency(e.balance)}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n\r\n                          <Card sx={{ p: 2 }}>\r\n                            <Typography sx={{ mb: 2 }}>THÔNG TIN CHI TIẾT</Typography>\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Loại tài khoản <br />\r\n                                <strong>{e.walletType.name}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Divider />\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Tài khoản số điện thoại\r\n                                <br />\r\n                                <strong>{mainInvestor?.phoneNum}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                            <Divider />\r\n\r\n                            <Box\r\n                              sx={{\r\n                                display: 'flex',\r\n                                p: 1,\r\n                                mb: 1,\r\n\r\n                                justifyContent: 'space-between'\r\n                              }}\r\n                            >\r\n                              <Typography\r\n                                paragraph\r\n                                sx={{\r\n                                  color: '#251E18',\r\n                                  marginBottom: '0.2rem'\r\n                                }}\r\n                              >\r\n                                Ngày mở tài khoản <br />\r\n                                <strong>{e.createDate}</strong>\r\n                              </Typography>\r\n                            </Box>\r\n                          </Card>\r\n                          <Box my={2} p={2}>\r\n                            <Typography>Ví dùng để đầu tư vào các dự án của KROWD</Typography>\r\n                          </Box>\r\n                        </Container>\r\n                      </Stack>\r\n                      <Box sx={{ display: 'flex', justifyContent: 'flex-end', p: 2 }}>\r\n                        <Box>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => setOpenModalShareInvest(false)}\r\n                          >\r\n                            Đóng\r\n                          </Button>\r\n                        </Box>\r\n                        <Button\r\n                          href={PATH_PAGE.pageTopUp}\r\n                          target=\"_blank\"\r\n                          sx={{\r\n                            display: 'flex',\r\n                            border: '1px solid white'\r\n                          }}\r\n                          variant=\"contained\"\r\n                        >\r\n                          + Nạp tiền\r\n                        </Button>\r\n                      </Box>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid container alignItems={'center'}>\r\n                <Grid lg={8}>\r\n                  <Typography>\r\n                    <TextAnimate\r\n                      text={fCurrency(e.balance)}\r\n                      sx={{ typography: 'h3' }}\r\n                      variants={varBounceInUp}\r\n                    />\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid sx={{ display: 'flex', gap: 1 }}>\r\n                  <Button\r\n                    href={PATH_PAGE.pageTopUp}\r\n                    target=\"_blank\"\r\n                    sx={{\r\n                      display: 'flex',\r\n                      border: '1px solid white'\r\n                    }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    + Nạp tiền\r\n                  </Button>\r\n                  <Button\r\n                    onClick={() => handleClickWithDraw(e)}\r\n                    sx={{ display: 'flex', border: '1px solid white' }}\r\n                    variant=\"contained\"\r\n                  >\r\n                    - Rút tiền\r\n                  </Button>\r\n                  <Dialog fullWidth maxWidth=\"sm\" open={openModalWithDraw}>\r\n                    <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n                      <Box mt={1} display={'flex'} justifyContent={'flex-end'}>\r\n                        <Box>\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"error\"\r\n                            onClick={() => setOpenModalWithDraw(false)}\r\n                          >\r\n                            X\r\n                          </Button>\r\n                        </Box>\r\n                      </Box>\r\n                      <Icon color=\"#14b7cc\" height={60} width={60} icon={walletDetails} />\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                      <Box mt={1}>\r\n                        <DialogContentText\r\n                          sx={{\r\n                            textAlign: 'center',\r\n                            fontWeight: 900,\r\n                            fontSize: 20,\r\n                            color: 'black'\r\n                          }}\r\n                        >\r\n                          Tạo lệnh rút tiền\r\n                        </DialogContentText>\r\n                      </Box>\r\n                      <Typography>\r\n                        Số dư ví: <strong>{fCurrency(e.balance)}</strong>\r\n                      </Typography>\r\n                      <FormikProvider value={formikWithDraw}>\r\n                        <Form noValidate autoComplete=\"off\" onSubmit={handleSubmitWithDraw}>\r\n                          <TextField\r\n                            required\r\n                            fullWidth\r\n                            label=\"Tên ngân hàng\"\r\n                            {...getFieldPropsWithDraw('bankName')}\r\n                            sx={{ mt: 2 }}\r\n                          />\r\n                          {touchedWithDraw.bankName && errorsWithDraw.bankName && (\r\n                            <FormHelperText error sx={{ px: 2 }}>\r\n                              {touchedWithDraw.bankName && errorsWithDraw.bankName}\r\n                            </FormHelperText>\r\n                          )}\r\n                          <TextField\r\n                            required\r\n                            fullWidth\r\n                            label=\"Tài khoản ngân hàng\"\r\n                            {...getFieldPropsWithDraw('bankAccount')}\r\n                            sx={{ mt: 2 }}\r\n                          />\r\n                          {touchedWithDraw.bankAccount && errorsWithDraw.bankAccount && (\r\n                            <FormHelperText error sx={{ px: 2 }}>\r\n                              {touchedWithDraw.bankAccount && errorsWithDraw.bankAccount}\r\n                            </FormHelperText>\r\n                          )}\r\n                          <TextField\r\n                            required\r\n                            fullWidth\r\n                            label=\"Tên chủ tài khoản\"\r\n                            {...getFieldPropsWithDraw('accountName')}\r\n                            sx={{ mt: 2 }}\r\n                          />\r\n                          {touchedWithDraw.accountName && errorsWithDraw.accountName && (\r\n                            <FormHelperText error sx={{ px: 2 }}>\r\n                              {touchedWithDraw.accountName && errorsWithDraw.accountName}\r\n                            </FormHelperText>\r\n                          )}\r\n                          <Tooltip\r\n                            title=\"Giao dịch từ 100,000đ - 500,000,000đ\"\r\n                            placement=\"bottom-end\"\r\n                          >\r\n                            <TextField\r\n                              fullWidth\r\n                              required\r\n                              label=\"Số tiền VND\"\r\n                              {...getFieldPropsWithDraw('amount')}\r\n                              sx={{ mt: 2 }}\r\n                              InputProps={{\r\n                                endAdornment: <Icon color=\"#ff9b26e0\" icon={question} />\r\n                              }}\r\n                            />\r\n                          </Tooltip>\r\n                          {touchedWithDraw.amount && errorsWithDraw.amount && (\r\n                            <FormHelperText error sx={{ px: 2 }}>\r\n                              {touchedWithDraw.amount && errorsWithDraw.amount}\r\n                            </FormHelperText>\r\n                          )}\r\n                          <Box display={'flex'} alignItems={'center'}>\r\n                            <Checkbox onClick={handleCheckBox} />\r\n                            <Typography>Sử dụng thông tin hiện có</Typography>\r\n                          </Box>\r\n                          <RadioGroup row sx={{ my: 2 }} {...getFieldPropsWithDraw('amount')}>\r\n                            <FormControlLabel\r\n                              value=\"300000\"\r\n                              control={<Radio />}\r\n                              label=\"300,000đ\"\r\n                              sx={{ px: 2 }}\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"500000\"\r\n                              control={<Radio />}\r\n                              label=\"500,000đ\"\r\n                              sx={{ px: 2.7 }}\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"1000000\"\r\n                              control={<Radio />}\r\n                              label=\"1,000,000đ\"\r\n                              sx={{ px: 2 }}\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"3000000\"\r\n                              control={<Radio />}\r\n                              label=\"3,000,000đ\"\r\n                              sx={{ px: 2 }}\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"5000000\"\r\n                              control={<Radio />}\r\n                              label=\"5,000,000đ\"\r\n                              sx={{ px: 1 }}\r\n                            />\r\n                            <FormControlLabel\r\n                              value=\"10000000\"\r\n                              control={<Radio />}\r\n                              label=\"10,000,000đ\"\r\n                              sx={{ px: 2.3 }}\r\n                            />\r\n                          </RadioGroup>\r\n                          <Box sx={{ color: '#d58311' }}>\r\n                            <Typography sx={{ my: 1, fontWeight: 500 }}>Lưu ý:</Typography>\r\n\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={calendar} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Số tiền bạn rút sẽ được chuyển vào tài khoản của bạn chậm nhất là\r\n                                  24h sau khi tạo lệnh rút tiền.\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={dolarMoney} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Số tiền bạn rút không vượt quá số dư trong ví hiện tại.\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={InfoRecieve} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Thông tin rút tiền là thông tin tài khoản của bạn hoặc thông tin\r\n                                  người mà bạn quen biết (Mọi thông tin đều phải trùng khớp với\r\n                                  thông tin đã đăng ký bên ngân hàng đó).\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\r\n                              <Box>\r\n                                <Icon color=\"#d58311\" width={20} height={20} icon={secureInfo} />\r\n                              </Box>\r\n                              <Box>\r\n                                <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                  Vui lòng kiểm tra thông tin trước khi gửi lệnh rút tiền.\r\n                                </Typography>\r\n                              </Box>\r\n                            </Box>\r\n                          </Box>\r\n                          <Box sx={{ display: 'flex', alignItems: 'center', mb: 4 }}>\r\n                            <Box>\r\n                              <Icon color=\"green\" width={20} height={20} icon={shieldCheck} />\r\n                            </Box>\r\n                            <Box>\r\n                              <Typography sx={{ textAlign: 'left', ml: 1 }}>\r\n                                Mọi thông tin khách hàng đều được mã hóa để bảo mật thông tin khách\r\n                                hàng.\r\n                              </Typography>\r\n                            </Box>\r\n                          </Box>\r\n                          {e.balance > 0 ? (\r\n                            <LoadingButton\r\n                              fullWidth\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              loading={isSubmitting}\r\n                            >\r\n                              Rút tiền\r\n                            </LoadingButton>\r\n                          ) : (\r\n                            <LoadingButton\r\n                              disabled\r\n                              fullWidth\r\n                              type=\"submit\"\r\n                              variant=\"contained\"\r\n                              size=\"large\"\r\n                              loading={isSubmitting}\r\n                            >\r\n                              Rút tiền\r\n                            </LoadingButton>\r\n                          )}\r\n                        </Form>\r\n                      </FormikProvider>\r\n                    </DialogContent>\r\n                  </Dialog>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Stack direction=\"row\" alignItems=\"center\" flexWrap=\"wrap\">\r\n                {/* <Icon\r\n                  width={20}\r\n                  height={20}\r\n                  icon={PERCENT >= 0 ? trendingUpFill : trendingDownFill}\r\n                /> */}\r\n\r\n                <Typography variant=\"body2\" component=\"span\" sx={{ opacity: 0.72 }}>\r\n                  &nbsp;Ví dùng để đầu tư vào các dự án của KROWD\r\n                </Typography>\r\n              </Stack>\r\n            </Stack>\r\n\r\n            {/* <ReactApexChart type=\"area\" series={CHART_DATA} options={chartOptions} height={120} /> */}\r\n          </RootStyle>\r\n        ))}\r\n      <Dialog fullWidth maxWidth=\"sm\" open={openModalWithdrawRequestSuccess}>\r\n        <DialogTitle sx={{ alignItems: 'center', textAlign: 'center' }}>\r\n          <Icon color=\"#14b7cc\" height={60} width={60} icon={check2Fill} />\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box mt={1}>\r\n            <DialogContentText\r\n              sx={{ textAlign: 'center', fontWeight: 900, fontSize: 20, color: 'black' }}\r\n            >\r\n              Gửi yêu cầu thành công\r\n            </DialogContentText>\r\n          </Box>\r\n          <Stack spacing={{ xs: 2, md: 1 }}>\r\n            <Container sx={{ p: 2 }}>\r\n              <Box>\r\n                <Typography sx={{ textAlign: 'center' }}>Yêu cầu đã hoàn thành</Typography>\r\n              </Box>\r\n              {/* <Box>\r\n                <Typography sx={{ textAlign: 'center', color: '#14b7cc', fontSize: 35 }}>\r\n                  {fCurrency(`${dataInvestedSuccess}`)}\r\n                </Typography>\r\n              </Box> */}\r\n              <Divider sx={{ my: 2 }} />\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: '0.5rem',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Tổng số tiền</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong> {fCurrency(amountResponse)}</strong>\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  justifyContent: 'space-between',\r\n                  mb: '0.5rem',\r\n                  p: 1\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Số tiền thanh toán</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong> {fCurrency(amountResponse)}</strong>\r\n                </Typography>\r\n              </Box>\r\n              <Divider sx={{ my: 2 }} />\r\n\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Giao dịch</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {/* {resDate} */}\r\n                  Rút tiền khỏi ví\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Tên người nhận</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {accountNameResponse}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Ngân hàng thụ hưởng</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {bankNameResponse}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Tài khoản người nhận</strong>\r\n                </Typography>\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  {bankAccountResponse}\r\n                </Typography>\r\n              </Box>\r\n              <Box\r\n                sx={{\r\n                  display: 'flex',\r\n                  p: 1,\r\n\r\n                  justifyContent: 'space-between'\r\n                }}\r\n              >\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18',\r\n\r\n                    marginBottom: '0.2rem'\r\n                  }}\r\n                >\r\n                  <strong>Mã yêu cầu</strong>\r\n                </Typography>\r\n\r\n                <Typography\r\n                  paragraph\r\n                  sx={{\r\n                    color: '#251E18'\r\n                  }}\r\n                >\r\n                  <Stack direction=\"row\" alignItems=\"center\">\r\n                    <MIconButton\r\n                      color=\"inherit\"\r\n                      onClick={onToggleShowIDPayment}\r\n                      sx={{ opacity: 0.48 }}\r\n                    >\r\n                      <Icon icon={showIDPayment ? eyeFill : eyeOffFill} />\r\n                    </MIconButton>\r\n                    <Typography sx={{ typography: 'body2' }}>\r\n                      {showIDPayment ? '********' : IDResponse}\r\n                    </Typography>\r\n                  </Stack>\r\n                </Typography>\r\n              </Box>\r\n            </Container>\r\n          </Stack>\r\n          <Box>\r\n            <Button\r\n              fullWidth\r\n              color=\"error\"\r\n              variant=\"contained\"\r\n              onClick={() => setOpenModalWithdrawRequestSuccess(false)}\r\n            >\r\n              Đóng\r\n            </Button>\r\n          </Box>\r\n          <Box p={3}>\r\n            <Typography variant=\"body2\">\r\n              Nếu có bất kỳ thắc mắc nào liên quan đến yêu cầu này, xin vui lòng liên lạc với bộ\r\n              phận hỗ trợ của Krowd tại <span style={{ color: '#14b7cc' }}>19007777</span>\r\n            </Typography>\r\n          </Box>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </RootStyleContainer>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingReservationStats.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCustomerReviews.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCheckInWidgets.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingNewestBooking.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingRoomAvailable.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingTotalIncomes.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\KrowdProjectProgress.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCheckOut.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingDetails.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingCheckIn.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\verify-code\\VerifyCodeForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-booking\\BookingTotal.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\SharedRevenue.tsx",["3256","3257","3258","3259"],"import { Icon } from '@iconify/react';\r\n// import androidFilled from '@iconify/icons-ant-design/android-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Button, Card, Stack, Typography } from '@mui/material';\r\n// utils\r\nimport { fNumber, fShortenNumber } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'left',\r\n  padding: theme.spacing(3, 3, 0),\r\n  height: '600px',\r\n  color: theme.palette.info.darker,\r\n  backgroundColor: theme.palette.info.lighter\r\n}));\r\n\r\n// const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n//   margin: 'auto',\r\n//   display: 'flex',\r\n//   borderRadius: '50%',\r\n//   alignItems: 'center',\r\n//   width: theme.spacing(8),\r\n//   height: theme.spacing(8),\r\n//   justifyContent: 'center',\r\n//   marginBottom: theme.spacing(3),\r\n//   color: theme.palette.info.dark,\r\n//   backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.info.dark, 0)} 0%, ${alpha(\r\n//     theme.palette.info.dark,\r\n//     0.24\r\n//   )} 100%)`\r\n// }));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 500000;\r\n\r\nexport default function SharedRevenue() {\r\n  return (\r\n    <RootStyle>\r\n      <Typography variant=\"h6\">Đối với sự hợp tác cơ bản</Typography>\r\n      <Typography sx={{ fontSize: '13px', paddingTop: '1rem' }}>\r\n        Khả năng hợp tác và bảo mật nâng cao cho các nhóm và công ty\r\n      </Typography>\r\n      <Typography variant=\"h2\" sx={{ paddingTop: '2rem' }}>\r\n        {fNumber(TOTAL)}đ\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" sx={{ opacity: 0.72, pt: 3, pb: 3 }}>\r\n        Mô tả thêm voucher\r\n      </Typography>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsWebsiteVisits.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsTrafficBySite.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsTasks.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsOrderTimeline.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsNewsUpdate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\MembersParticipation.tsx",["3260","3261","3262","3263","3264"],"import { Icon } from '@iconify/react';\r\nimport appleFilled from '@iconify/icons-ant-design/apple-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\n// utils\r\nimport { Box, Button, Card, Stack, Typography } from '@mui/material';\r\n// utils\r\nimport { fNumber, fShortenNumber } from '../../../utils/formatNumber';\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'left',\r\n  padding: theme.spacing(3, 3, 0),\r\n  height: '600px',\r\n  color: theme.palette.info.darker,\r\n  backgroundColor: theme.palette.info.lighter\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(8),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(3),\r\n  color: theme.palette.info.dark,\r\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.info.dark, 0)} 0%, ${alpha(\r\n    theme.palette.info.dark,\r\n    0.24\r\n  )} 100%)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 13;\r\n\r\nexport default function MembersParticipation() {\r\n  return (\r\n    <RootStyle>\r\n      <Typography variant=\"h6\">Đối với sự hợp tác cơ bản</Typography>\r\n      <Typography sx={{ fontSize: '13px', paddingTop: '1rem' }}>\r\n        Khả năng hợp tác và bảo mật nâng cao cho các nhóm và công ty\r\n      </Typography>\r\n      <Typography variant=\"h2\" sx={{ paddingTop: '2rem' }}>\r\n        {fNumber(TOTAL)}đ\r\n      </Typography>\r\n      {/* <Button\r\n        sx={{\r\n          width: '100%',\r\n          marginTop: '2rem',\r\n          pt: 2,\r\n          pb: 2,\r\n          textAlign: 'center',\r\n          backgroundColor: '#14B7CC',\r\n          opacity: 0.72\r\n        }}\r\n      >\r\n        <Typography variant=\"h3\" sx={{ color: '#ffffff' }}>\r\n          Chọn gói\r\n        </Typography>{' '}\r\n      </Button> */}\r\n      <Typography variant=\"h6\" sx={{ opacity: 0.72, pt: 3, pb: 3 }}>\r\n        Mô tả thêm voucher\r\n      </Typography>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\MultiplierProject.tsx",["3265","3266","3267","3268","3269"],"import { Icon } from '@iconify/react';\r\nimport appleFilled from '@iconify/icons-ant-design/apple-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Button, Card, Stack, Typography } from '@mui/material';\r\n// utils\r\nimport { fNumber, fShortenNumber } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'left',\r\n  padding: theme.spacing(3, 3, 0),\r\n  height: '600px',\r\n  color: theme.palette.info.darker,\r\n  backgroundColor: theme.palette.info.lighter\r\n}));\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  width: theme.spacing(8),\r\n  height: theme.spacing(8),\r\n  justifyContent: 'center',\r\n  marginBottom: theme.spacing(3),\r\n  color: theme.palette.info.dark,\r\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.info.dark, 0)} 0%, ${alpha(\r\n    theme.palette.info.dark,\r\n    0.24\r\n  )} 100%)`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 13;\r\n\r\nexport default function MultiplierProject() {\r\n  return (\r\n    <RootStyle>\r\n      <Typography variant=\"h6\">Đối với sự hợp tác cơ bản</Typography>\r\n      <Typography sx={{ fontSize: '13px', paddingTop: '1rem' }}>\r\n        Khả năng hợp tác và bảo mật nâng cao cho các nhóm và công ty\r\n      </Typography>\r\n      <Typography variant=\"h2\" sx={{ paddingTop: '2rem' }}>\r\n        {fNumber(TOTAL)}đ\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" sx={{ opacity: 0.72, pt: 3, pb: 3 }}>\r\n        Mô tả thêm voucher\r\n      </Typography>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsCurrentVisits.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\ColorPreview.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsCurrentSubject.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\AnalyticsConversionRates.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\general-analytics\\TermOfProject.tsx",["3270","3271","3272","3273"],"import { Icon } from '@iconify/react';\r\n// import androidFilled from '@iconify/icons-ant-design/android-filled';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Button, Card, Stack, Typography } from '@mui/material';\r\n// utils\r\nimport { fNumber, fShortenNumber } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'left',\r\n  padding: theme.spacing(3, 3, 0),\r\n  height: '600px',\r\n  color: theme.palette.info.darker,\r\n  backgroundColor: theme.palette.info.lighter\r\n}));\r\n\r\n// const IconWrapperStyle = styled('div')(({ theme }) => ({\r\n//   margin: 'auto',\r\n//   display: 'flex',\r\n//   borderRadius: '50%',\r\n//   alignItems: 'center',\r\n//   width: theme.spacing(8),\r\n//   height: theme.spacing(8),\r\n//   justifyContent: 'center',\r\n//   marginBottom: theme.spacing(3),\r\n//   color: theme.palette.info.dark,\r\n//   backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.info.dark, 0)} 0%, ${alpha(\r\n//     theme.palette.info.dark,\r\n//     0.24\r\n//   )} 100%)`\r\n// }));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 1500000;\r\n\r\nexport default function TermOfProject() {\r\n  return (\r\n    <RootStyle>\r\n      <Typography variant=\"h6\">Nâng cao</Typography>\r\n      <Typography sx={{ fontSize: '13px', paddingTop: '1rem' }}>\r\n        Khả năng hợp tác và bảo mật nâng cao cho các nhóm và công ty\r\n      </Typography>\r\n      <Typography variant=\"h2\" sx={{ paddingTop: '2rem' }}>\r\n        {fNumber(TOTAL)}đ\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" sx={{ opacity: 0.72, pt: 3, pb: 3 }}>\r\n        Mô tả thêm voucher\r\n      </Typography>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n      <Stack direction=\"row\" alignItems=\"center\" spacing={1} sx={{ mb: 3 }}>\r\n        <Box\r\n          sx={{\r\n            width: 12,\r\n            height: 12,\r\n            borderRadius: 0.5,\r\n            bgcolor: 'success.main'\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n          Unlimited guests Miro Smart Diagramming\r\n        </Typography>\r\n      </Stack>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProductDetailsSummary.tsx",["3274","3275","3276","3277","3278","3279","3280","3281","3282","3283"],"import { Icon } from '@iconify/react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport minusFill from '@iconify/icons-eva/minus-fill';\r\nimport twitterFill from '@iconify/icons-eva/twitter-fill';\r\nimport linkedinFill from '@iconify/icons-eva/linkedin-fill';\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport instagramFilled from '@iconify/icons-ant-design/instagram-filled';\r\n\r\nimport { useFormik, Form, FormikProvider, useField } from 'formik';\r\n\r\nimport roundAddShoppingCart from '@iconify/icons-ic/round-add-shopping-cart';\r\n// material\r\nimport { useTheme, styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Tooltip,\r\n  Divider,\r\n  Typography,\r\n  LinearProgress,\r\n  linearProgressClasses\r\n} from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n// utils\r\nimport { fCurrency } from '../../../../utils/formatNumber';\r\n//\r\nimport { MIconButton } from '../../../@material-extend';\r\nimport { Product, CartItem } from '../../../../@types/products';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SOCIALS = [\r\n  {\r\n    name: 'Facebook',\r\n    icon: <Icon icon={facebookFill} width={20} height={20} color=\"#1877F2\" />\r\n  },\r\n  {\r\n    name: 'Instagram',\r\n    icon: <Icon icon={instagramFilled} width={20} height={20} color=\"#D7336D\" />\r\n  },\r\n  {\r\n    name: 'Linkedin',\r\n    icon: <Icon icon={linkedinFill} width={20} height={20} color=\"#006097\" />\r\n  },\r\n  {\r\n    name: 'Twitter',\r\n    icon: <Icon icon={twitterFill} width={20} height={20} color=\"#1C9CEA\" />\r\n  }\r\n];\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  padding: theme.spacing(3),\r\n  [theme.breakpoints.up(1368)]: {\r\n    padding: theme.spacing(5, 8)\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\nconst BorderLinearProgress = styled(LinearProgress)(({ theme }) => ({\r\n  height: 10,\r\n  borderRadius: 5,\r\n  [`&.${linearProgressClasses.colorPrimary}`]: {\r\n    backgroundColor: theme.palette.grey[theme.palette.mode === 'light' ? 300 : 700]\r\n  },\r\n  [`& .${linearProgressClasses.bar}`]: {\r\n    borderRadius: 5,\r\n    backgroundColor: '#14B7CC'\r\n  }\r\n}));\r\n// const Incrementer = ({ name, available }: { name: string; available: number }) => {\r\n//   const [field, , helpers] = useField(name);\r\n//   const { value } = field;\r\n//   const { setValue } = helpers;\r\n\r\n//   const incrementQuantity = () => {\r\n//     setValue(value + 1);\r\n//   };\r\n//   const decrementQuantity = () => {\r\n//     setValue(value - 1);\r\n//   };\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         py: 0.5,\r\n//         px: 0.75,\r\n//         border: 1,\r\n//         lineHeight: 0,\r\n//         borderRadius: 1,\r\n//         display: 'flex',\r\n//         alignItems: 'center',\r\n//         borderColor: 'grey.50032'\r\n//       }}\r\n//     >\r\n//       <MIconButton size=\"small\" color=\"inherit\" disabled={value <= 1} onClick={decrementQuantity}>\r\n//         <Icon icon={minusFill} width={16} height={16} />\r\n//       </MIconButton>\r\n//       <Typography\r\n//         variant=\"body2\"\r\n//         component=\"span\"\r\n//         sx={{\r\n//           width: 40,\r\n//           textAlign: 'center',\r\n//           display: 'inline-block'\r\n//         }}\r\n//       >\r\n//         {value}\r\n//       </Typography>\r\n//       <MIconButton\r\n//         size=\"small\"\r\n//         color=\"inherit\"\r\n//         disabled={value >= available}\r\n//         onClick={incrementQuantity}\r\n//       >\r\n//         <Icon icon={plusFill} width={16} height={16} />\r\n//       </MIconButton>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\ntype ProductDetailsSumaryprops = {\r\n  product: Product;\r\n  cart: CartItem[];\r\n  onAddCart: (cartItem: CartItem) => void;\r\n  onGotoStep: (step: number) => void;\r\n};\r\n\r\nexport default function ProductDetailsSummary({\r\n  product,\r\n  cart,\r\n  onAddCart,\r\n  onGotoStep,\r\n  ...other\r\n}: ProductDetailsSumaryprops) {\r\n  const navigate = useNavigate();\r\n  const { id, name, sizes, price, cover, status, colors, available } = product;\r\n\r\n  const alreadyProduct = cart.map((item) => item.id).includes(id);\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      id,\r\n      name,\r\n      cover,\r\n      available,\r\n      price,\r\n      color: colors[0],\r\n      size: sizes[4],\r\n      quantity: available < 1 ? 0 : 1\r\n    },\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        if (!alreadyProduct) {\r\n          onAddCart({\r\n            ...values,\r\n            subtotal: values.price * values.quantity\r\n          });\r\n        }\r\n        setSubmitting(false);\r\n        onGotoStep(0);\r\n        navigate(PATH_DASHBOARD.eCommerce.checkout);\r\n      } catch (error) {\r\n        setSubmitting(false);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { values, touched, errors, getFieldProps, handleSubmit } = formik;\r\n\r\n  let totalBudget = Math.floor(Math.random() * 100000000);\r\n  let currentBudget = Math.floor(Math.random() * totalBudget);\r\n  let ratio = Math.floor((currentBudget / totalBudget) * 100);\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n          <Typography\r\n            variant=\"overline\"\r\n            sx={{\r\n              mb: 1,\r\n              display: 'block',\r\n              color: status === 'Đang hoạt động' ? 'error.main' : 'info.main'\r\n            }}\r\n          >\r\n            {status}\r\n          </Typography>\r\n\r\n          <Typography variant=\"h5\" paragraph>\r\n            {name}\r\n          </Typography>\r\n\r\n          <Box\r\n            sx={{\r\n              my: 3,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Thuộc doanh nghiệp\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>GS 25</Typography>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              mb: 3,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Thuộc Khu vực:\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>TP HCM</Typography>\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              mb: 3,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Địa chỉ:\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>Quận 12</Typography>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mb: 3,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Doanh thu chia sẻ (%)\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>7%</Typography>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mb: 3,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Thành viên đã tham gia\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>12</Typography>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mb: 3,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Hệ số nhân\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>1.7</Typography>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              mb: 2,\r\n              display: 'flex',\r\n              justifyContent: 'space-between'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" sx={{ mt: 0.2 }}>\r\n              Thời hạn\r\n            </Typography>\r\n            <Typography sx={{ mt: 0.2 }}>2 month</Typography>\r\n          </Box>\r\n          <Divider sx={{ borderStyle: 'dashed' }} />\r\n          <Box my={1}>\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                mt: 2\r\n              }}\r\n            >\r\n              <Typography\r\n                paragraph\r\n                sx={{\r\n                  color: '#251E18'\r\n                }}\r\n              >\r\n                <strong>Đã đầu tư</strong>\r\n              </Typography>\r\n              <Typography\r\n                paragraph\r\n                sx={{\r\n                  color: '#251E18'\r\n                }}\r\n              >\r\n                <strong>Mục tiêu</strong>\r\n              </Typography>\r\n            </Box>\r\n            <BorderLinearProgress sx={{ my: 0 }} variant=\"determinate\" value={ratio} />\r\n            <Box\r\n              sx={{\r\n                display: 'flex',\r\n                justifyContent: 'space-between',\r\n                mt: 2\r\n              }}\r\n            >\r\n              <Typography\r\n                paragraph\r\n                sx={{\r\n                  color: '#14B7CC'\r\n                }}\r\n              >\r\n                <strong>{fCurrency(currentBudget)}</strong>\r\n              </Typography>\r\n              <Typography\r\n                paragraph\r\n                sx={{\r\n                  color: '#FF7F56'\r\n                }}\r\n              >\r\n                <strong>{fCurrency(totalBudget)}</strong>\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Divider sx={{ borderStyle: 'dashed' }} />\r\n\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-evenly', my: 1, textAlign: 'center' }}>\r\n            {SOCIALS.map((social) => (\r\n              <Tooltip key={social.name} title={social.name}>\r\n                <MIconButton>{social.icon}</MIconButton>\r\n              </Tooltip>\r\n            ))}\r\n          </Box>\r\n        </Form>\r\n      </FormikProvider>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsReviewOverview.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsReviewList.tsx",["3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299"],"import { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport roundThumbUp from '@iconify/icons-ic/round-thumb-up';\r\nimport roundVerified from '@iconify/icons-ic/round-verified';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\nimport { styled } from '@mui/material/styles';\r\n\r\n// material\r\nimport {\r\n  Box,\r\n  List,\r\n  Button,\r\n  Rating,\r\n  Avatar,\r\n  ListItem,\r\n  Pagination,\r\n  Typography,\r\n  Grid\r\n} from '@mui/material';\r\n// utils\r\nimport { fDate } from '../../../../utils/formatTime';\r\nimport { fShortenNumber } from '../../../../utils/formatNumber';\r\nimport { Product, ProductReview } from '../../../../@types/products';\r\n\r\n// ----------------------------------------------------------------------\r\nfunction ReviewItem({ review }: { review: ProductReview }) {\r\n  const [isHelpful, setHelpfuls] = useState(false);\r\n  const { name, rating, comment, helpful, postedAt, avatarUrl, isPurchased } = review;\r\n\r\n  const handleClickHelpful = () => {\r\n    setHelpfuls((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItem\r\n        sx={{\r\n          mb: 5,\r\n          alignItems: 'center',\r\n          flexDirection: { xs: 'column', sm: 'row' },\r\n          justifyContent: 'space-around',\r\n          textAlign: 'center'\r\n        }}\r\n      >\r\n        <Box>\r\n          <Avatar\r\n            src={avatarUrl}\r\n            sx={{\r\n              m: '10px auto',\r\n              width: { md: 64 },\r\n              height: { md: 64 }\r\n            }}\r\n          />\r\n          <Typography variant=\"subtitle2\" noWrap>\r\n            {name}\r\n          </Typography>\r\n          <Typography variant=\"caption\" sx={{ color: 'text.secondary' }} noWrap>\r\n            {fDate(postedAt)}\r\n          </Typography>\r\n        </Box>\r\n      </ListItem>\r\n    </>\r\n  );\r\n}\r\n\r\ntype ProjectDetailsReviewListProps = {\r\n  product: Product;\r\n};\r\n\r\nexport default function ProjectDetailsReviewList({ product }: ProjectDetailsReviewListProps) {\r\n  const { reviews } = product;\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container width=\"100%\" spacing={3} mt={0} mx={0}>\r\n        {reviews.map((review, index) => (\r\n          <Grid key={index} xs={12} sm={6} md={6} lg={3}>\r\n            <ReviewItem key={review.id} review={review} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsHero.tsx",["3300","3301","3302","3303"],"import Slider from 'react-slick';\r\nimport { findIndex } from 'lodash';\r\nimport { useState, useRef, useEffect } from 'react';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box } from '@mui/material';\r\n// @types\r\nimport { Product } from '../../../../@types/products';\r\n//\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  '& .slick-slide': {\r\n    float: theme.direction === 'rtl' ? 'right' : 'left',\r\n    '&:focus': { outline: 'none' }\r\n  }\r\n}));\r\n\r\nconst LargeImgStyle = styled('img')(({ theme }) => ({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n}));\r\n\r\ntype LargeItemProps = {\r\n  item: string;\r\n  onOpenLightbox: (value: string) => void;\r\n};\r\n\r\nfunction LargeItem({ item, onOpenLightbox }: LargeItemProps) {\r\n  return (\r\n    <Box sx={{ cursor: 'zoom-in', paddingTop: '100%', position: 'relative' }}>\r\n      <LargeImgStyle alt=\"large image\" src={item} onClick={() => onOpenLightbox(item)} />\r\n    </Box>\r\n  );\r\n}\r\n\r\ntype ProductDetailsCarouselProps = {\r\n  product: Product;\r\n};\r\n\r\nexport default function ProjectDetailsHero({ product }: ProductDetailsCarouselProps) {\r\n  const [openLightbox, setOpenLightbox] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState<number>(0);\r\n\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [nav1, setNav1] = useState<Slider>();\r\n  const [nav2, setNav2] = useState<Slider>();\r\n  const slider1 = useRef<Slider | null>(null);\r\n  const slider2 = useRef<Slider | null>(null);\r\n  const imagesLightbox = product.images.map((_image) => _image);\r\n\r\n  const handleOpenLightbox = (url: string) => {\r\n    const selectedImage = findIndex(imagesLightbox, (index) => index === url);\r\n    setOpenLightbox(true);\r\n    setSelectedImage(selectedImage);\r\n  };\r\n\r\n  const settings1 = {\r\n    dots: false,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    draggable: false,\r\n    slidesToScroll: 1,\r\n    adaptiveHeight: true,\r\n    beforeChange: (current: number, next: number) => setCurrentIndex(next)\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNav1(slider1.current || undefined);\r\n    setNav2(slider2.current || undefined);\r\n  }, [currentIndex]);\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box sx={{ p: 1 }}>\r\n        <Box\r\n          sx={{\r\n            zIndex: 0,\r\n            borderRadius: 2,\r\n            overflow: 'hidden',\r\n            position: 'relative'\r\n          }}\r\n        >\r\n          <Slider {...settings1} asNavFor={nav2} ref={slider1}>\r\n            {product.images.map((item) => (\r\n              <LargeItem key={item} item={item} onOpenLightbox={handleOpenLightbox} />\r\n            ))}\r\n          </Slider>\r\n        </Box>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\main\\MainNavbarLearn.tsx",["3304","3305","3306","3307"],"import { Link as RouterLink, useLocation, useNavigate } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  Container,\r\n  Link,\r\n  MenuItem,\r\n  Menu,\r\n  IconButton\r\n} from '@mui/material';\r\n// hooks\r\nimport useOffSetTop from '../../hooks/useOffSetTop';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport Label from '../../components/Label';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\nimport i18next from 'i18next';\r\nimport cookies from 'js-cookie';\r\nimport { useTranslation } from 'react-i18next';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport useAuth from 'hooks/useAuth';\r\nimport useIsMountedRef from 'hooks/useIsMountedRef';\r\nimport { useSnackbar } from 'notistack';\r\nimport { PATH_AUTH, PATH_DASHBOARD, PATH_PAGE } from 'routes/paths';\r\nimport { Icon } from '@iconify/react';\r\nimport menu2Fill from '@iconify/icons-eva/menu-2-fill';\r\nimport MenuDesktop from './MenuDesktop';\r\nimport navConfig from './MenuConfig';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst APP_BAR_MOBILE = 64;\r\nconst APP_BAR_DESKTOP = 88;\r\n\r\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\r\n  height: APP_BAR_MOBILE,\r\n  transition: theme.transitions.create(['height', 'background-color'], {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  [theme.breakpoints.up('md')]: {\r\n    height: APP_BAR_DESKTOP\r\n  }\r\n}));\r\n\r\nconst ToolbarShadowStyle = styled('div')(({ theme }) => ({\r\n  left: 0,\r\n  right: 0,\r\n  bottom: 0,\r\n  height: 24,\r\n  zIndex: -1,\r\n  margin: 'auto',\r\n  borderRadius: '50%',\r\n  position: 'absolute',\r\n  width: `calc(100% - 48px)`,\r\n  boxShadow: theme.customShadows.z8\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport type MenuItemProps = {\r\n  title: string;\r\n  path: string;\r\n  icon?: JSX.Element;\r\n  to?: string;\r\n  children?: {\r\n    subheader: string;\r\n    items: {\r\n      title: string;\r\n      path: string;\r\n    }[];\r\n  }[];\r\n};\r\n\r\nexport type MenuProps = {\r\n  isOffset: boolean;\r\n  isHome: boolean;\r\n  navConfig: MenuItemProps[];\r\n};\r\nconst Language = [\r\n  {\r\n    code: 'vi',\r\n    name: 'Tiếng việt',\r\n    countryCode: 'vn'\r\n  },\r\n  {\r\n    code: 'en',\r\n    name: 'English',\r\n    countryCode: 'en'\r\n  }\r\n];\r\n\r\ntype DashboardNavbarProps = {\r\n  onOpenSidebar: VoidFunction;\r\n};\r\nexport default function MainNavbarLearn({ onOpenSidebar }: DashboardNavbarProps) {\r\n  const isOffset = useOffSetTop(-1);\r\n  const { pathname } = useLocation();\r\n  const navigate = useNavigate();\r\n  const { user, logout } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout?.();\r\n      if (isMountedRef.current) {\r\n        navigate('/');\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\r\n    }\r\n  };\r\n  const isHome = pathname === '/';\r\n  const initialLanguage = cookies.get('i18next') || 'vi';\r\n  const [currentLanguage, setCurrentLanguage] = useState('');\r\n  const { t } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    setCurrentLanguage(initialLanguage);\r\n    localStorage.setItem('i18nextLng', initialLanguage);\r\n  });\r\n\r\n  const setLanguage = (newLang: string) => {\r\n    localStorage.setItem('i18nextLng', newLang);\r\n    const current = localStorage.getItem('i18nextLng')!;\r\n    i18next.changeLanguage(current);\r\n    setCurrentLanguage(current);\r\n    console.log(currentLanguage);\r\n  };\r\n\r\n  return (\r\n    <AppBar\r\n      sx={{\r\n        boxShadow: 0,\r\n        bgcolor: '#FFFFFF',\r\n        position: 'absolute'\r\n      }}\r\n    >\r\n      <ToolbarStyle\r\n        disableGutters\r\n        sx={{\r\n          ...(isOffset && {\r\n            bgcolor: 'background.default',\r\n            height: { md: APP_BAR_DESKTOP - 16 }\r\n          })\r\n        }}\r\n      >\r\n        <Container\r\n          maxWidth=\"lg\"\r\n          sx={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between'\r\n          }}\r\n        >\r\n          <RouterLink to=\"/\">\r\n            <Logo />\r\n          </RouterLink>\r\n          <Label\r\n            sx={{\r\n              ml: 1,\r\n              color: '#14b7cc',\r\n              backgroundColor: '#fff',\r\n              textTransform: 'uppercase',\r\n              fontSize: '1.25rem'\r\n            }}\r\n          >\r\n            Krowd\r\n          </Label>\r\n          <Box sx={{ flexGrow: 1.4 }} />\r\n          <MenuDesktop\r\n            isOffset={isOffset}\r\n            isHome={isHome}\r\n            navConfig={currentLanguage === 'vi' ? navConfig.vi : navConfig.en}\r\n          />\r\n          <MHidden width=\"mdDown\">\r\n            {(user && (\r\n              <>\r\n                <Button\r\n                  sx={{ marginRight: '23px' }}\r\n                  id=\"basic-button\"\r\n                  aria-controls={open ? 'basic-menu' : undefined}\r\n                  aria-haspopup=\"true\"\r\n                  aria-expanded={open ? 'true' : undefined}\r\n                  onClick={handleClick}\r\n                  variant=\"contained\"\r\n                >\r\n                  {user?.fullName}{' '}\r\n                </Button>\r\n                <Menu\r\n                  id=\"basic-menu\"\r\n                  anchorEl={anchorEl}\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  MenuListProps={{\r\n                    'aria-labelledby': 'basic-button'\r\n                  }}\r\n                >\r\n                  <MenuItem component={Link} href={'/'}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_landing`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_DASHBOARD.user.account}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_profile`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_DASHBOARD.general.banking}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_console`)}\r\n                  </MenuItem>\r\n                  <MenuItem component={Link} href={PATH_PAGE.pageTopUp}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_wallet`)}\r\n                  </MenuItem>\r\n                  <MenuItem onClick={handleLogout}>\r\n                    {t(`mainNavbar_menu_item.mainNavbar_menu_item_logout`)}\r\n                  </MenuItem>\r\n                </Menu>\r\n              </>\r\n            )) || (\r\n              <Button\r\n                sx={{\r\n                  marginRight: '23px',\r\n                  bgcolor: 'rgb(255, 127, 80)',\r\n                  '&:hover': {\r\n                    bgcolor: 'rgb(255, 127, 80)',\r\n                    color: '#ffffff'\r\n                  }\r\n                }}\r\n                size=\"medium\"\r\n                variant=\"contained\"\r\n                href={PATH_AUTH.login}\r\n              >\r\n                {t('Navbar_login')}\r\n              </Button>\r\n            )}\r\n            {/* <div className=\"language-select\">\r\n              <div className=\"d-flex justify-content-end align-items-center language-select-root\">\r\n                <div className=\"dropdown\">\r\n                  <button\r\n                    className=\"btn btn-link dropdown-toggle\"\r\n                    type=\"button\"\r\n                    id=\"dropdownMenuButton1\"\r\n                    data-bs-toggle=\"dropdown\"\r\n                    aria-expanded=\"false\"\r\n                    style={{\r\n                      color: '#14b7cc',\r\n                      textDecoration: 'solid',\r\n                      paddingRight: '1rem'\r\n                    }}\r\n                  >\r\n                    <GlobeIcon />\r\n                    {t('language')}\r\n                  </button>\r\n                  <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n                    {Language.map(({ code, name, countryCode }) => {\r\n                      return (\r\n                        <li key={countryCode}>\r\n                          <Link\r\n                            underline=\"none\"\r\n                            sx={{ cursor: 'pointer' }}\r\n                            className={classNames('dropdown-item', {\r\n                              disabled: currentLanguage === code\r\n                            })}\r\n                            onClick={() => setLanguage(code)}\r\n                          >\r\n                            <span\r\n                              className={`/static/icons/ic_flag_${countryCode}.svg`}\r\n                              style={{\r\n                                opacity: currentLanguage === code ? 0.5 : 1\r\n                              }}\r\n                            >\r\n                              <img src={`/static/icons/ic_flag_${countryCode}.svg`} />\r\n                            </span>\r\n                            {name}\r\n                          </Link>\r\n                        </li>\r\n                      );\r\n                    })}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div> */}\r\n          </MHidden>\r\n          <MHidden width=\"lgUp\">\r\n            <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\r\n              <Icon icon={menu2Fill} />\r\n            </IconButton>\r\n          </MHidden>\r\n        </Container>\r\n      </ToolbarStyle>\r\n\r\n      {isOffset && <ToolbarShadowStyle />}\r\n    </AppBar>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\DashboardProjectSidebar.tsx",["3308","3309","3310","3311","3312"],"import { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport {\r\n  Box,\r\n  Link,\r\n  Stack,\r\n  Button,\r\n  Drawer,\r\n  Tooltip,\r\n  Typography,\r\n  CardActionArea,\r\n  Avatar\r\n} from '@mui/material';\r\n// hooks\r\nimport React from 'react';\r\n\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useCollapseDrawer from '../../hooks/useCollapseDrawer';\r\n// routes\r\nimport { PATH_DASHBOARD, PATH_DASHBOARD_PROJECT } from '../../routes/paths';\r\n// components\r\nimport Logo from '../../components/Logo';\r\nimport MyAvatar from '../../components/MyAvatar';\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport NavSection from '../../components/NavSection';\r\nimport { MHidden } from '../../components/@material-extend';\r\n//\r\nimport SidebarProjectConfig from './SidebarProjectConfig';\r\nimport { DocIllustration } from '../../assets';\r\nimport { getProjectListById } from 'redux/slices/krowd_slices/project';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\n// ----------------------------------------------------------------------\r\n\r\nconst DRAWER_WIDTH = 280;\r\nconst COLLAPSE_WIDTH = 102;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  [theme.breakpoints.up('lg')]: {\r\n    flexShrink: 0,\r\n    transition: theme.transitions.create('width', {\r\n      duration: theme.transitions.duration.complex\r\n    })\r\n  }\r\n}));\r\n\r\nconst AccountStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 2.5),\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  backgroundColor: theme.palette.grey[500_12]\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype IconCollapseProps = {\r\n  onToggleCollapse: VoidFunction;\r\n  collapseClick: boolean;\r\n};\r\n\r\nfunction IconCollapse({ onToggleCollapse, collapseClick }: IconCollapseProps) {\r\n  return (\r\n    <Tooltip title=\"Mini Menu\">\r\n      <CardActionArea\r\n        onClick={onToggleCollapse}\r\n        sx={{\r\n          width: 18,\r\n          height: 18,\r\n          display: 'flex',\r\n          cursor: 'pointer',\r\n          borderRadius: '50%',\r\n          alignItems: 'center',\r\n          color: 'text.primary',\r\n          justifyContent: 'center',\r\n          border: 'solid 1px currentColor',\r\n          ...(collapseClick && {\r\n            borderWidth: 2\r\n          })\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: 8,\r\n            height: 8,\r\n            borderRadius: '50%',\r\n            bgcolor: 'currentColor',\r\n            transition: (theme) => theme.transitions.create('all'),\r\n            ...(collapseClick && {\r\n              width: 0,\r\n              height: 0\r\n            })\r\n          }}\r\n        />\r\n      </CardActionArea>\r\n    </Tooltip>\r\n  );\r\n}\r\n\r\ntype DashboardProjectSidebarProps = {\r\n  isOpenSidebar: boolean;\r\n  onCloseSidebar: VoidFunction;\r\n};\r\n\r\nexport default function DashboardProjectSidebar({\r\n  isOpenSidebar,\r\n  onCloseSidebar\r\n}: DashboardProjectSidebarProps) {\r\n  const { pathname } = useLocation();\r\n  const { user } = useAuth();\r\n  const { detailOfProject } = useSelector((state: RootState) => state.project);\r\n  const { detailOfProjectID: projectID, isLoadingDetailOfProjectID } = detailOfProject;\r\n  const { isCollapse, collapseClick, collapseHover, onToggleCollapse, onHoverEnter, onHoverLeave } =\r\n    useCollapseDrawer();\r\n\r\n  useEffect(() => {\r\n    if (isOpenSidebar) {\r\n      onCloseSidebar();\r\n    }\r\n    dispatch(getProjectListById(`${localStorage.getItem('projectId')}`));\r\n  }, [pathname]);\r\n\r\n  const renderContent = (\r\n    <Scrollbar\r\n      sx={{\r\n        height: 1,\r\n        '& .simplebar-content': {\r\n          height: 1,\r\n          display: 'flex',\r\n          flexDirection: 'column'\r\n        }\r\n      }}\r\n    >\r\n      <Stack\r\n        spacing={3}\r\n        sx={{\r\n          px: 2.5,\r\n          pt: 3,\r\n          pb: 2,\r\n          ...(isCollapse && {\r\n            alignItems: 'center'\r\n          })\r\n        }}\r\n      >\r\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\r\n          <Box component={RouterLink} to=\"/dashboard/banking\" sx={{ display: 'inline-flex' }}>\r\n            <Logo />\r\n          </Box>\r\n\r\n          <MHidden width=\"lgDown\">\r\n            {!isCollapse && (\r\n              <IconCollapse onToggleCollapse={onToggleCollapse} collapseClick={collapseClick} />\r\n            )}\r\n          </MHidden>\r\n        </Stack>\r\n\r\n        {isCollapse ? (\r\n          <MyAvatar sx={{ mx: 'auto', mb: 2 }} />\r\n        ) : (\r\n          <Link underline=\"none\" component={RouterLink} to={PATH_DASHBOARD_PROJECT.project.root}>\r\n            <AccountStyle>\r\n              <Avatar src={projectID?.image ?? ''} alt={''}></Avatar>\r\n              <Box sx={{ ml: 2 }}>\r\n                <Typography variant=\"subtitle2\" sx={{ color: 'text.primary' }}>\r\n                  {projectID?.name ?? ''}\r\n                </Typography>\r\n              </Box>\r\n            </AccountStyle>\r\n          </Link>\r\n        )}\r\n      </Stack>\r\n\r\n      <NavSection navConfig={SidebarProjectConfig} isShow={!isCollapse} />\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n\r\n      {!isCollapse && (\r\n        <Stack\r\n          spacing={3}\r\n          alignItems=\"center\"\r\n          sx={{ px: 5, pb: 5, mt: 10, width: 1, textAlign: 'center' }}\r\n        >\r\n          <Typography gutterBottom variant=\"subtitle1\">\r\n            <Link href={PATH_DASHBOARD.projectInvested.list}>Quay lại bảng dự án</Link>\r\n          </Typography>\r\n        </Stack>\r\n      )}\r\n    </Scrollbar>\r\n  );\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        width: {\r\n          lg: isCollapse ? COLLAPSE_WIDTH : DRAWER_WIDTH\r\n        },\r\n        ...(collapseClick && {\r\n          position: 'absolute'\r\n        })\r\n      }}\r\n    >\r\n      <MHidden width=\"lgUp\">\r\n        <Drawer\r\n          open={isOpenSidebar}\r\n          onClose={onCloseSidebar}\r\n          PaperProps={{\r\n            sx: { width: DRAWER_WIDTH }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n\r\n      <MHidden width=\"lgDown\">\r\n        <Drawer\r\n          open\r\n          variant=\"persistent\"\r\n          onMouseEnter={onHoverEnter}\r\n          onMouseLeave={onHoverLeave}\r\n          PaperProps={{\r\n            sx: {\r\n              width: DRAWER_WIDTH,\r\n              bgcolor: 'background.default',\r\n              ...(isCollapse && {\r\n                width: COLLAPSE_WIDTH\r\n              }),\r\n              ...(collapseHover && {\r\n                borderRight: 0,\r\n                backdropFilter: 'blur(6px)',\r\n                WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\r\n                boxShadow: (theme) => theme.customShadows.z20,\r\n                bgcolor: (theme) => alpha(theme.palette.background.default, 0.88)\r\n              })\r\n            }\r\n          }}\r\n        >\r\n          {renderContent}\r\n        </Drawer>\r\n      </MHidden>\r\n    </RootStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\DashboardNavbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\login\\LoginFormBusiness.tsx",["3313","3314","3315","3316","3317","3318","3319","3320","3321","3322","3323","3324","3325","3326","3327","3328","3329","3330","3331","3332","3333","3334","3335","3336","3337","3338","3339"],"import * as Yup from 'yup';\r\nimport { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport { Icon } from '@iconify/react';\r\n// material\r\nimport { Link, Stack, Alert, TextField, Box, Typography } from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\n// routes\r\nimport { PATH_AUTH } from '../../../routes/paths';\r\n// hooks\r\nimport facebookFill from '@iconify/icons-eva/facebook-fill';\r\nimport useAuth from '../../../hooks/useAuth';\r\nimport useIsMountedRef from '../../../hooks/useIsMountedRef';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport Login from 'pages/authentication/Login';\r\nimport firebase from 'firebase/app';\r\n\r\n// ----------------------------------------------------------------------\r\ntype InitialValues = {\r\n  email: string;\r\n  password: string;\r\n  remember: boolean;\r\n  afterSubmit?: string;\r\n};\r\nexport default function LoginFormBusiness() {\r\n  // const { loginWithGoogle } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n  const LoginSchema = Yup.object().shape({\r\n    email: Yup.string().email('Email phải đúng định dạng').required('Yêu cầu nhập email'),\r\n    password: Yup.string().required('Yêu cầu nhập mật khẩu')\r\n  });\r\n}\r\n//   const { loginWithGoogle, loginWithFaceBook, login, loginWithPhone } = useAuth();\r\n\r\n//   const handleLoginGoogle = async () => {\r\n//     try {\r\n//       await loginWithGoogle?.();\r\n//       // const res = await auth.signInWithPopup(googleProvider);\r\n//       // console.log(\"data\", res)\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLoginFaceBook = async () => {\r\n//     try {\r\n//       await loginWithFaceBook?.();\r\n//     } catch (error) {\r\n//       console.error(error);\r\n//     }\r\n//   };\r\n//   const formik = useFormik<InitialValues>({\r\n//     initialValues: {\r\n//       email: '',\r\n//       password: '',\r\n//       remember: true\r\n//     },\r\n//     validationSchema: LoginSchema,\r\n//     onSubmit: async (values, { setErrors, setSubmitting, resetForm }) => {\r\n//       try {\r\n//         await login(values.email, values.password);\r\n//         if (isMountedRef.current) {\r\n//           setSubmitting(false);\r\n//         }\r\n//       } catch (error) {\r\n//         console.error(error);\r\n//         resetForm();\r\n//         if (isMountedRef.current) {\r\n//           setSubmitting(false);\r\n//           setErrors({ afterSubmit: error.message });\r\n//         }\r\n//       }\r\n//     }\r\n//   });\r\n\r\n//   const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n//   const handleShowPassword = () => {\r\n//     setShowPassword((show) => !show);\r\n//   };\r\n\r\n//   return (\r\n//     <FormikProvider value={formik}>\r\n//       <Stack direction=\"row\" alignItems=\"center\" sx={{ mt: 4, mb: 5 }}>\r\n//         <Box sx={{ flexGrow: 1 }}>\r\n//           <Typography variant=\"h4\" gutterBottom>\r\n//             Đăng nhập với doanh nghiệp\r\n//           </Typography>\r\n//           <Typography sx={{ color: 'text.secondary' }}>Nhập thông tin bên dưới</Typography>\r\n//         </Box>\r\n//       </Stack>\r\n//       <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n//         <Stack spacing={3}>\r\n//           {errors.afterSubmit && <Alert severity=\"error\">{errors.afterSubmit}</Alert>}\r\n\r\n//           <TextField\r\n//             fullWidth\r\n//             autoComplete=\"username\"\r\n//             type=\"number\"\r\n//             label=\"Email\"\r\n//             // onChange={(e) => setPhoneNum(e.target.value)}\r\n//             {...getFieldProps('email')}\r\n//             error={Boolean(touched.email && errors.email)}\r\n//             helperText={touched.email && errors.email}\r\n//           />\r\n\r\n//           <TextField\r\n//             fullWidth\r\n//             autoComplete=\"current-password\"\r\n//             type={showPassword ? 'text' : 'password'}\r\n//             label=\"Mật khẩu\"\r\n//             {...getFieldProps('password')}\r\n//             error={Boolean(touched.password && errors.password)}\r\n//             helperText={touched.password && errors.password}\r\n//           />\r\n//         </Stack>\r\n\r\n//         <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\r\n//           <Link component={RouterLink} variant=\"subtitle2\" to={PATH_AUTH.resetPassword}>\r\n//             Quên mật khẩu?\r\n//           </Link>\r\n//         </Stack>\r\n\r\n//         <LoadingButton\r\n//           fullWidth\r\n//           size=\"large\"\r\n//           type=\"submit\"\r\n//           variant=\"contained\"\r\n//           loading={isSubmitting}\r\n//           // onClick={handleLoginEmail}\r\n//         >\r\n//           Login\r\n//         </LoadingButton>\r\n//       </Form>\r\n//       <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ mb: 2 }}>\r\n//         <LoadingButton\r\n//           style={{\r\n//             backgroundColor: '#FFF',\r\n//             color: 'black',\r\n//             marginTop: '2rem',\r\n//             paddingRight: '2rem'\r\n//           }}\r\n//           fullWidth\r\n//           size=\"large\"\r\n//           type=\"submit\"\r\n//           variant=\"contained\"\r\n//           loading={isSubmitting}\r\n//           onClick={handleLoginGoogle}\r\n//         >\r\n//           <img\r\n//             src={`/static/icons/navbar/ic_google.svg`}\r\n//             style={{ paddingRight: '1rem' }}\r\n//             height={24}\r\n//           />\r\n//           Login with google\r\n//         </LoadingButton>\r\n//         <LoadingButton\r\n//           style={{\r\n//             backgroundColor: '#FFF',\r\n//             color: 'black',\r\n//             marginTop: '2rem',\r\n//             paddingRight: '2rem'\r\n//           }}\r\n//           fullWidth\r\n//           size=\"large\"\r\n//           type=\"submit\"\r\n//           variant=\"contained\"\r\n//           loading={isSubmitting}\r\n//           onClick={handleLoginFaceBook}\r\n//         >\r\n//           <Icon icon={facebookFill} style={{ color: '#0861a3' }} height={24} />\r\n//           Login with facebook\r\n//         </LoadingButton>\r\n//       </Stack>\r\n//     </FormikProvider>\r\n//   );\r\n// }\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\authentication\\login\\LoginForm.tsx",["3340","3341","3342"],"// material\r\n\r\nimport { LoadingButton } from '@mui/lab';\r\n// routes\r\nimport { PATH_DASHBOARD, PATH_PAGE } from '../../../routes/paths';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n//\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Box, Stack, Typography } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\nexport default function LoginForm() {\r\n  const { login } = useAuth();\r\n  const navigate = useNavigate();\r\n\r\n  const handleLoginGoogle = async () => {\r\n    try {\r\n      await login();\r\n    } catch (error) {\r\n      navigate(PATH_PAGE.page500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ p: 7 }}>\r\n        <Typography variant=\"h5\" sx={{ color: '#002226', fontWeight: '800', textAlign: 'center' }}>\r\n          {/* Login to Krowd System */}\r\n          Đăng nhập vào hệ thống của Krowd\r\n        </Typography>\r\n        <LoadingButton\r\n          style={{\r\n            backgroundColor: '#FFF',\r\n            color: 'black',\r\n            marginTop: '2rem',\r\n            paddingRight: '2rem'\r\n          }}\r\n          fullWidth\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          onClick={handleLoginGoogle}\r\n        >\r\n          <img\r\n            src={`/static/icons/navbar/ic_google.svg`}\r\n            style={{ paddingRight: '1rem' }}\r\n            height={24}\r\n          />{' '}\r\n          Đăng nhập với Google\r\n        </LoadingButton>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\SidebarConfig.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\ContactsPopover.tsx",["3343","3344","3345","3346","3347","3348","3349"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\AccountPopover.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\learnInvest\\SidebarConfigLearn.tsx",["3350","3351","3352"],"// routes\r\nimport { PATH_DASHBOARD, PATH_DASHBOARD_LEARN, PATH_PAGE } from '../../routes/paths';\r\n// components\r\nimport SvgIconStyle from '../../components/SvgIconStyle';\r\nimport React from 'react';\r\nimport { Typography } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst getIcon = (name: string) => (\r\n  <SvgIconStyle src={`/static/icons/navbar/${name}.svg`} sx={{ width: '100%', height: '100%' }} />\r\n);\r\n\r\nconst ICONS = {\r\n  user: getIcon('ic_user'),\r\n  wallet: getIcon('ic_wallet'),\r\n  banking: getIcon('ic_banking'),\r\n  analytics: getIcon('ic_analytics'),\r\n  dashboard: getIcon('ic_dashboard'),\r\n  krowd: getIcon('ic_krowd'),\r\n  booking: getIcon('ic_booking'),\r\n  project: getIcon('ic_project'),\r\n  bankTransaction: getIcon('ic_bankTransaction'),\r\n  transaction: getIcon('ic_transaction'),\r\n  payment: getIcon('ic_payment'),\r\n  walletTransaction: getIcon('ic_walletTransaction')\r\n};\r\n\r\nconst SidebarConfigLearn = [\r\n  {\r\n    subheader: 'Tìm hiểu quy trình của Krowd',\r\n    items: [\r\n      {\r\n        title: 'Cách thức hoạt động',\r\n        path: PATH_DASHBOARD_LEARN.learn.how_it_work,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Bạn được gì khi đầu tư ?',\r\n        path: PATH_DASHBOARD_LEARN.learn.what_get_invested,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Quy trình thanh khoản',\r\n        path: PATH_DASHBOARD_LEARN.learn.how_return_work,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Các điều khoản giao dịch',\r\n        path: PATH_DASHBOARD_LEARN.learn.app,\r\n        icon: ICONS.krowd\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    subheader: 'Hướng dẫn',\r\n    items: [\r\n      {\r\n        title: 'Đầu tư',\r\n        path: PATH_DASHBOARD_LEARN.learn.how_to_invest,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Trở thành chủ dự án',\r\n        path: PATH_DASHBOARD_LEARN.learn.how_to_call_invest,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Tham gia KrowdEco',\r\n        path: PATH_DASHBOARD_LEARN.learn.coming_soon,\r\n        icon: ICONS.krowd\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    subheader: 'Rủi ro',\r\n    items: [\r\n      {\r\n        title: 'Rủi ro đầu tư',\r\n        path: PATH_DASHBOARD_LEARN.learn.risk_invested,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Rủi ro nhượng quyền',\r\n        path: PATH_DASHBOARD_LEARN.learn.risk_franchise,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Rủi ro chủ dự án',\r\n        path: PATH_DASHBOARD_LEARN.learn.risk_manager,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Rủi ro từng lĩnh vực đầu tư',\r\n        path: PATH_DASHBOARD_LEARN.learn.risk_for_field,\r\n        icon: ICONS.krowd\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    subheader: 'Thông tin thêm về Krowd',\r\n    items: [\r\n      {\r\n        title: 'Liên hệ',\r\n        path: PATH_DASHBOARD_LEARN.learn.coming_soon,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Chính sách bảo mật',\r\n        path: PATH_DASHBOARD_LEARN.learn.coming_soon,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Điều khoản dịch vụ',\r\n        path: PATH_DASHBOARD_LEARN.learn.coming_soon,\r\n        icon: ICONS.krowd\r\n      },\r\n      {\r\n        title: 'Truyền thông',\r\n        path: PATH_DASHBOARD_LEARN.learn.coming_soon,\r\n        icon: ICONS.krowd\r\n      }\r\n    ]\r\n  }\r\n];\r\n\r\n//----------------------------------------------------------------------------------\r\n\r\nexport default SidebarConfigLearn;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\MenuPopover.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapZoomToBounds.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapMarkersPopups.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapClusters.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapHighlightByFilter.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\draft\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapGeoJSONAnimation.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\quill\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\MapDeckglOverlay.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProjectDetailsReview.tsx",["3353","3354","3355","3356","3357","3358","3359","3360","3361","3362","3363","3364","3365"],"import { useState } from 'react';\r\n// material\r\nimport { Divider, Collapse } from '@mui/material';\r\n//\r\nimport ProjectDetailsReviewForm from './ProjectDetailsReviewForm';\r\nimport ProjectDetailsReviewList from './ProjectDetailsReviewList';\r\nimport ProjectDetailsReviewOverview from './ProjectDetailsReviewOverview';\r\nimport { Product } from '../../../../@types/products';\r\nimport {\r\n  Box,\r\n  List,\r\n  Button,\r\n  Rating,\r\n  Avatar,\r\n  ListItem,\r\n  Pagination,\r\n  Typography,\r\n  Grid\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype ProjectDetailsReviewProps = {\r\n  product: Product;\r\n};\r\n\r\nexport default function ProjectDetailsReview({ product }: ProjectDetailsReviewProps) {\r\n  const [reviewBox, setReviewBox] = useState(false);\r\n\r\n  const handleOpenReviewBox = () => {\r\n    setReviewBox((prev) => !prev);\r\n  };\r\n\r\n  const handleCloseReviewBox = () => {\r\n    setReviewBox(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid\r\n        container\r\n        width={'100%'}\r\n        mt={0}\r\n        mx={0}\r\n        spacing={3}\r\n        sx={{ justifyContent: 'space-around' }}\r\n      >\r\n        <Box sx={{ my: 3, fontWeight: '900' }}>\r\n          <Typography variant=\"subtitle1\" sx={{ ml: 1, fontSize: '20px' }}>\r\n            Danh sách các thành viên trong dự án\r\n          </Typography>\r\n        </Box>\r\n        <ProjectDetailsReviewList product={product} />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-details\\ProductDetailsCarousel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-list\\ProductListToolbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPackageSummary.tsx",["3366","3367"],"import { Icon } from '@iconify/react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\n// material\r\nimport {\r\n  Box,\r\n  Card,\r\n  Stack,\r\n  Button,\r\n  Divider,\r\n  TextField,\r\n  CardHeader,\r\n  Typography,\r\n  CardContent,\r\n  InputAdornment\r\n} from '@mui/material';\r\n// utils\r\nimport { fCurrency } from '../../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype CheckoutSummaryProps = {\r\n  total: number;\r\n  discount?: number;\r\n  subtotal: number;\r\n  onEdit?: VoidFunction;\r\n  enableEdit?: boolean;\r\n  onApplyDiscount?: (discount: number) => void;\r\n  enableDiscount?: boolean;\r\n};\r\n\r\nexport default function CheckoutPackageSummary({\r\n  total,\r\n  onEdit,\r\n  discount,\r\n  subtotal,\r\n  onApplyDiscount,\r\n  enableEdit = false,\r\n  enableDiscount = false\r\n}: CheckoutSummaryProps) {\r\n  return (\r\n    <Card sx={{ mb: 3 }}>\r\n      <CardHeader\r\n        title=\"Số gói bạn đã chọn\"\r\n        action={\r\n          enableEdit && (\r\n            <Button\r\n              size=\"small\"\r\n              type=\"button\"\r\n              onClick={onEdit}\r\n              startIcon={<Icon icon={editFill} />}\r\n            >\r\n              Edit\r\n            </Button>\r\n          )\r\n        }\r\n      />\r\n\r\n      <CardContent>\r\n        <Stack spacing={2}>\r\n          <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              Tổng số tiền các gói\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">{fCurrency(subtotal)}</Typography>\r\n          </Stack>\r\n\r\n          <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n              Giảm giá\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">{discount ? fCurrency(-discount) : '-'}</Typography>\r\n          </Stack>\r\n\r\n          <Divider />\r\n\r\n          <Stack direction=\"row\" justifyContent=\"space-between\">\r\n            <Typography variant=\"subtitle1\">Total</Typography>\r\n            <Box sx={{ textAlign: 'right' }}>\r\n              <Typography variant=\"subtitle1\" sx={{ color: 'error.main' }}>\r\n                {fCurrency(total)}\r\n              </Typography>\r\n              <Typography variant=\"caption\" sx={{ fontStyle: 'italic' }}>\r\n                (VAT included if applicable)\r\n              </Typography>\r\n            </Box>\r\n          </Stack>\r\n        </Stack>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\product-list\\ProductListHead.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutProductList.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPaymentMethods.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPayment.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutOrderComplete.tsx",["3368","3369","3370","3371","3372"],"import { Icon } from '@iconify/react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport filePdfFilled from '@iconify/icons-ant-design/file-pdf-filled';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\n// material\r\nimport { styled } from '@mui/material/styles';\r\nimport { Box, Link, Button, Divider, Typography, Stack, DialogProps } from '@mui/material';\r\n// redux\r\nimport { useDispatch } from '../../../../redux/store';\r\nimport { onBackStep, resetCart } from '../../../../redux/slices/product';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n//\r\nimport { DialogAnimate } from '../../../animate';\r\nimport { OrderCompleteIllustration } from '../../../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DialogStyle = styled(DialogAnimate)(({ theme }) => ({\r\n  '& .MuiDialog-paper': {\r\n    margin: 0,\r\n    [theme.breakpoints.up('md')]: {\r\n      maxWidth: 'calc(100% - 48px)',\r\n      maxHeight: 'calc(100% - 48px)'\r\n    }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CheckoutOrderComplete({ open }: DialogProps) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const handleResetStep = () => {\r\n    dispatch(resetCart());\r\n    navigate('/');\r\n  };\r\n  const handleBackStep = () => {\r\n    dispatch(onBackStep());\r\n  };\r\n\r\n  return (\r\n    <DialogStyle fullScreen open={open}>\r\n      <Box sx={{ p: 4, maxWidth: 480, margin: 'auto' }}>\r\n        <Box sx={{ textAlign: 'center' }}>\r\n          <Typography variant=\"h4\" paragraph>\r\n            Quét mã để tải ứng dụng hoặc thanh toán ngay\r\n          </Typography>\r\n          <img src=\"https://static.mservice.io/img/momo-upload-api-220622150620-637915071801318808.png\" />\r\n          <Typography align=\"left\" sx={{ color: 'text.secondary' }}>\r\n            <br /> <br /> Sử dụng App MoMo hoặc ứng dụng Camera hỗ trợ QR code để quét mã.\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 3 }} />\r\n\r\n        <Stack\r\n          direction={{ xs: 'column-reverse', sm: 'row' }}\r\n          justifyContent=\"space-between\"\r\n          spacing={2}\r\n        >\r\n          <Button\r\n            color=\"inherit\"\r\n            onClick={handleBackStep}\r\n            startIcon={<Icon icon={arrowIosBackFill} />}\r\n          >\r\n            Trở về\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Icon icon={filePdfFilled} />}\r\n            onClick={handleBackStep}\r\n          >\r\n            Tải định dạng PDF\r\n          </Button>\r\n        </Stack>\r\n      </Box>\r\n    </DialogStyle>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutNewAddressForm.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutDelivery.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\SidebarProjectConfig.tsx",["3373"],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboardProject\\AccountPopover.tsx",["3374","3375"],"import { Icon } from '@iconify/react';\r\nimport { useSnackbar } from 'notistack';\r\nimport { useRef, useState } from 'react';\r\nimport homeFill from '@iconify/icons-eva/home-fill';\r\nimport personFill from '@iconify/icons-eva/person-fill';\r\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n// material\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Button, Box, Divider, MenuItem, Typography } from '@mui/material';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useIsMountedRef from '../../hooks/useIsMountedRef';\r\n// components\r\nimport { MIconButton } from '../../components/@material-extend';\r\nimport MyAvatar from '../../components/MyAvatar';\r\nimport MenuPopover from '../../components/MenuPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MENU_OPTIONS = [\r\n  {\r\n    label: 'Thông tin cá nhân',\r\n    icon: personFill,\r\n    linkTo: PATH_DASHBOARD.user.account\r\n  }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function AccountPopover() {\r\n  const navigate = useNavigate();\r\n  const anchorRef = useRef(null);\r\n  const { user, logout } = useAuth();\r\n  const isMountedRef = useIsMountedRef();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await logout?.();\r\n      if (isMountedRef.current) {\r\n        navigate('/');\r\n        handleClose();\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      enqueueSnackbar('Unable to logout', { variant: 'error' });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        onClick={handleOpen}\r\n        sx={{\r\n          padding: 0,\r\n          width: 44,\r\n          height: 44,\r\n          ...(open && {\r\n            '&:before': {\r\n              zIndex: 1,\r\n              content: \"''\",\r\n              width: '100%',\r\n              height: '100%',\r\n              borderRadius: '50%',\r\n              position: 'absolute',\r\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\r\n            }\r\n          })\r\n        }}\r\n      >\r\n        <MyAvatar />\r\n      </MIconButton>\r\n\r\n      <MenuPopover\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorEl={anchorRef.current}\r\n        sx={{ width: 220 }}\r\n      >\r\n        <Box sx={{ my: 1.5, px: 2.5 }}>\r\n          <Typography variant=\"subtitle1\" noWrap>\r\n            {user?.displayName}\r\n          </Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n            {user?.email}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Divider sx={{ my: 1 }} />\r\n\r\n        {MENU_OPTIONS.map((option) => (\r\n          <MenuItem\r\n            key={option.label}\r\n            to={option.linkTo}\r\n            component={RouterLink}\r\n            onClick={handleClose}\r\n            sx={{ typography: 'body2', py: 1, px: 2.5 }}\r\n          >\r\n            <Box\r\n              component={Icon}\r\n              icon={option.icon}\r\n              sx={{\r\n                mr: 2,\r\n                width: 24,\r\n                height: 24\r\n              }}\r\n            />\r\n\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n\r\n        <Box sx={{ p: 2, pt: 1.5 }}>\r\n          <Button fullWidth color=\"inherit\" variant=\"outlined\" onClick={handleLogout}>\r\n            Logout\r\n          </Button>\r\n        </Box>\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutPackage.tsx",["3376","3377"],"import { sum } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\n// material\r\nimport { Grid, Card, Button, CardHeader, Typography } from '@mui/material';\r\n// @types\r\nimport { ProductState } from '../../../../@types/products';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../../redux/store';\r\nimport {\r\n  deleteCart,\r\n  onNextStep,\r\n  applyDiscount,\r\n  increaseQuantity,\r\n  decreaseQuantity\r\n} from '../../../../redux/slices/product';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../../routes/paths';\r\n//\r\nimport Scrollbar from '../../../Scrollbar';\r\nimport EmptyContent from '../../../EmptyContent';\r\nimport CheckoutPackageSummary from './CheckoutPackageSummary';\r\nimport CheckoutProductList from './CheckoutProductList';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CheckoutPackage() {\r\n  const dispatch = useDispatch();\r\n  const { checkout } = useSelector((state: { product: ProductState }) => state.product);\r\n  const { cart, total, discount, subtotal } = checkout;\r\n  const isEmptyCart = cart.length === 0;\r\n\r\n  const handleDeleteCart = (productId: string) => {\r\n    dispatch(deleteCart(productId));\r\n  };\r\n\r\n  const handleNextStep = () => {\r\n    dispatch(onNextStep());\r\n  };\r\n\r\n  const handleIncreaseQuantity = (productId: string) => {\r\n    dispatch(increaseQuantity(productId));\r\n  };\r\n\r\n  const handleDecreaseQuantity = (productId: string) => {\r\n    dispatch(decreaseQuantity(productId));\r\n  };\r\n\r\n  const handleApplyDiscount = (value: number) => {\r\n    dispatch(applyDiscount(value));\r\n  };\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: { products: cart },\r\n    onSubmit: async (values, { setErrors, setSubmitting }) => {\r\n      try {\r\n        setSubmitting(true);\r\n        handleNextStep();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { values, handleSubmit } = formik;\r\n  const totalItems = sum(values.products.map((item) => item.quantity));\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <Card sx={{ mb: 3 }}>\r\n              <CardHeader\r\n                title={\r\n                  <Typography variant=\"h6\">\r\n                    Gói đã chọn\r\n                    <Typography component=\"span\" sx={{ color: 'text.secondary' }}>\r\n                      &nbsp;({totalItems} gói)\r\n                    </Typography>\r\n                  </Typography>\r\n                }\r\n                sx={{ mb: 3 }}\r\n              />\r\n\r\n              {!isEmptyCart ? (\r\n                <Scrollbar>\r\n                  <CheckoutProductList\r\n                    products={values.products}\r\n                    onDelete={handleDeleteCart}\r\n                    onIncreaseQuantity={handleIncreaseQuantity}\r\n                    onDecreaseQuantity={handleDecreaseQuantity}\r\n                  />\r\n                </Scrollbar>\r\n              ) : (\r\n                <EmptyContent\r\n                  title=\"Bạn chưa chọn gói nào\"\r\n                  description=\"Có vẻ như bạn không có gói nào\"\r\n                  img=\"/static/illustrations/illustration_empty_cart.svg\"\r\n                />\r\n              )}\r\n            </Card>\r\n\r\n            <Button\r\n              color=\"inherit\"\r\n              component={RouterLink}\r\n              to={'/details'}\r\n              startIcon={<Icon icon={arrowIosBackFill} />}\r\n            >\r\n              Trở về\r\n            </Button>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <CheckoutPackageSummary\r\n              total={total}\r\n              enableDiscount\r\n              discount={discount}\r\n              subtotal={subtotal}\r\n              // onApplyDiscount={handleApplyDiscount}\r\n            />\r\n            <Button\r\n              fullWidth\r\n              size=\"large\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              // disabled={values.products.length === 0}\r\n            >\r\n              Thanh toán\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutBillingInfo.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\CheckoutBillingAddress.tsx",["3378","3379"],"import { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\n// material\r\nimport { Box, Grid, Card, Button, Typography } from '@mui/material';\r\n// @types\r\nimport {\r\n  BillingAddress as Address,\r\n  OnCreateBilling,\r\n  ProductState\r\n} from '../../../../@types/products';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../../redux/store';\r\nimport { onBackStep, onNextStep, createBilling } from '../../../../redux/slices/product';\r\n// utils\r\nimport mockData from '../../../../utils/mock-data';\r\n\r\n//\r\nimport Label from '../../../Label';\r\nimport CheckoutPackageSummary from './CheckoutPackageSummary';\r\nimport CheckoutNewAddressForm from './CheckoutNewAddressForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_ADDRESS_BOOKS = [...Array(1)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  receiver: mockData.name.fullName(index),\r\n  fullAddress: mockData.address.fullAddress(index),\r\n  phone: mockData.phoneNumber(index),\r\n  addressType: index === 0 ? 'Account' : 'Office',\r\n  isDefault: index === 1\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype AddressItemProps = {\r\n  address: Address;\r\n  onNextStep: VoidFunction;\r\n  onCreateBilling: OnCreateBilling;\r\n};\r\n\r\nfunction AddressItem({ address, onNextStep, onCreateBilling }: AddressItemProps) {\r\n  const { receiver, fullAddress, addressType, phone, isDefault } = address;\r\n\r\n  const handleCreateBilling = () => {\r\n    onCreateBilling(address);\r\n    onNextStep();\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ p: 3, mb: 3, position: 'relative' }}>\r\n      <Box sx={{ mb: 1, display: 'flex', alignItems: 'center' }}>\r\n        <Typography variant=\"subtitle1\">{receiver}</Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          &nbsp;({addressType})\r\n        </Typography>\r\n        {isDefault && (\r\n          <Label color=\"info\" sx={{ ml: 1 }}>\r\n            Default\r\n          </Label>\r\n        )}\r\n      </Box>\r\n      <Typography variant=\"body2\" gutterBottom>\r\n        {fullAddress}\r\n      </Typography>\r\n      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n        {phone}\r\n      </Typography>\r\n\r\n      <Box\r\n        sx={{\r\n          mt: 3,\r\n          display: 'flex',\r\n          position: { sm: 'absolute' },\r\n          right: { sm: 24 },\r\n          bottom: { sm: 24 }\r\n        }}\r\n      >\r\n        {!isDefault && (\r\n          <Button variant=\"outlined\" size=\"small\" color=\"inherit\">\r\n            Delete\r\n          </Button>\r\n        )}\r\n        <Box sx={{ mx: 0.5 }} />\r\n        <Button variant=\"outlined\" size=\"small\" onClick={handleCreateBilling}>\r\n          Thanh toán\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default function CheckoutBillingAddress() {\r\n  //\r\n  const dispatch = useDispatch();\r\n  const { checkout } = useSelector((state: { product: ProductState }) => state.product);\r\n  const { total, discount, subtotal } = checkout;\r\n  //\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleNextStep = () => {\r\n    dispatch(onNextStep());\r\n  };\r\n\r\n  const handleBackStep = () => {\r\n    dispatch(onBackStep());\r\n  };\r\n\r\n  const handleCreateBilling = (value: Address) => {\r\n    dispatch(createBilling(value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={8}>\r\n          {MOCK_ADDRESS_BOOKS.map((address, index) => (\r\n            <AddressItem\r\n              key={index}\r\n              address={address}\r\n              onNextStep={handleNextStep}\r\n              onCreateBilling={handleCreateBilling}\r\n            />\r\n          ))}\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <Button\r\n              size=\"small\"\r\n              color=\"inherit\"\r\n              onClick={handleBackStep}\r\n              startIcon={<Icon icon={arrowIosBackFill} />}\r\n            >\r\n              Trở về\r\n            </Button>\r\n          </Box>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={4}>\r\n          <CheckoutPackageSummary subtotal={subtotal} total={total} discount={discount} />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <CheckoutNewAddressForm\r\n        open={open}\r\n        onClose={handleClose}\r\n        onNextStep={handleNextStep}\r\n        onCreateBilling={handleCreateBilling}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\profile\\Profile.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountBillingAddressBook.tsx",["3380"],"import { Icon } from '@iconify/react';\r\nimport plusFill from '@iconify/icons-eva/plus-fill';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\r\n// material\r\nimport { Box, Card, Button, Typography, CardProps, Stack, Paper } from '@mui/material';\r\n// @types\r\nimport { UserAddressBook } from '../../../../@types/user';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ninterface AccountBillingAddressBookProp extends CardProps {\r\n  addressBook: UserAddressBook[];\r\n}\r\n\r\nexport default function AccountBillingAddressBook({ addressBook }: AccountBillingAddressBookProp) {\r\n  return (\r\n    <Card sx={{ p: 3 }}>\r\n      <Stack spacing={3} alignItems=\"flex-start\">\r\n        <Typography variant=\"overline\" sx={{ color: 'text.secondary' }}>\r\n          Billing Info\r\n        </Typography>\r\n\r\n        {addressBook.map((address) => (\r\n          <Paper\r\n            key={address.id}\r\n            sx={{\r\n              p: 3,\r\n              width: 1,\r\n              bgcolor: 'background.neutral'\r\n            }}\r\n          >\r\n            <Typography variant=\"subtitle1\" gutterBottom>\r\n              {address.name}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\r\n                Address: &nbsp;\r\n              </Typography>\r\n              {`${address.street}, ${address.city}, ${address.state}, ${address.country} ${address.zipCode}`}\r\n            </Typography>\r\n\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              <Typography variant=\"body2\" component=\"span\" sx={{ color: 'text.secondary' }}>\r\n                Phone: &nbsp;\r\n              </Typography>\r\n              {address.phone}\r\n            </Typography>\r\n\r\n            <Box sx={{ mt: 1 }}>\r\n              <Button\r\n                color=\"error\"\r\n                size=\"small\"\r\n                startIcon={<Icon icon={trash2Fill} />}\r\n                onClick={() => {}}\r\n                sx={{ mr: 1 }}\r\n              >\r\n                Delete\r\n              </Button>\r\n              <Button size=\"small\" startIcon={<Icon icon={editFill} />} onClick={() => {}}>\r\n                Edit\r\n              </Button>\r\n            </Box>\r\n          </Paper>\r\n        ))}\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\user\\account\\AccountBilling.tsx",["3381","3382","3383","3384","3385","3386"],"import * as Yup from 'yup';\r\nimport { useFormik } from 'formik';\r\nimport { useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\n// material\r\nimport { Box, Grid, Card, Button, Typography, Stack } from '@mui/material';\r\n// utils\r\nimport fakeRequest from '../../../../utils/fakeRequest';\r\n// @types\r\nimport { CreditCard, UserAddressBook, UserInvoice } from '../../../../@types/user';\r\n//\r\nimport AccountBillingAddressBook from './AccountBillingAddressBook';\r\nimport AccountBillingInvoiceHistory from './AccountBillingInvoiceHistory';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype AccountBillingProps = {\r\n  cards: CreditCard[];\r\n  invoices: UserInvoice[];\r\n  addressBook: UserAddressBook[];\r\n};\r\n\r\nexport default function AccountBilling({ cards, addressBook, invoices }: AccountBillingProps) {\r\n  const [open, setOpen] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const NewCardSchema = Yup.object().shape({\r\n    cardName: Yup.string().required('Name is required'),\r\n    cardNumber: Yup.string().required('Card number is required'),\r\n    cardExpired: Yup.string().required('Card expired is required'),\r\n    cardCvv: Yup.string().required('Cvv is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      cardName: '',\r\n      cardNumber: '',\r\n      cardExpired: '',\r\n      cardCvv: ''\r\n    },\r\n    validationSchema: NewCardSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm }) => {\r\n      await fakeRequest(500);\r\n      handleCancel();\r\n      resetForm();\r\n      setSubmitting(false);\r\n      alert(JSON.stringify(values, null, 2));\r\n      enqueueSnackbar('Add card success', { variant: 'success' });\r\n    }\r\n  });\r\n\r\n  const handleOpenAddCard = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setOpen(false);\r\n    formik.resetForm();\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={5}>\r\n      <Grid item xs={12} md={8}>\r\n        <Stack spacing={3}>\r\n          <AccountBillingAddressBook addressBook={addressBook} />\r\n        </Stack>\r\n      </Grid>\r\n\r\n      <Grid item xs={12} md={4}>\r\n        <AccountBillingInvoiceHistory invoices={invoices} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\index.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-interaction\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-viewport-animation\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-heatmap\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-geojson\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-dynamic-styling\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-draggable-markers\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-change-theme\\index.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\quill\\QuillEditorToolbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\utils\\getColorName.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\draft\\DraftEditorStyle.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\draft\\DraftEditorToolbar.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_dashboard\\e-commerce\\checkout\\countries.ts",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlScale.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlPopup.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlGeolocate.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlNavigation.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlMarker.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\controls\\MapControlFullscreen.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-change-theme\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-draggable-markers\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-geojson\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-dynamic-styling\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-viewport-animation\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-interaction\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\map\\map-heatmap\\ControlPanel.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\editor\\quill\\QuillEditorToolbarStyle.tsx",[],"D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\layouts\\dashboard\\NotificationsPopover.tsx",["3387","3388","3389","3390","3391","3392","3393","3394"],"import { noCase } from 'change-case';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport { Icon } from '@iconify/react';\r\nimport bellFill from '@iconify/icons-eva/bell-fill';\r\nimport clockFill from '@iconify/icons-eva/clock-fill';\r\nimport doneAllFill from '@iconify/icons-eva/done-all-fill';\r\n// material\r\nimport {\r\n  Box,\r\n  List,\r\n  Badge,\r\n  Button,\r\n  Avatar,\r\n  Tooltip,\r\n  Divider,\r\n  Typography,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemAvatar,\r\n  ListItemButton\r\n} from '@mui/material';\r\n// utils\r\nimport { fToNow } from '../../utils/formatTime';\r\nimport mockData from '../../utils/mock-data';\r\n// components\r\nimport Scrollbar from '../../components/Scrollbar';\r\nimport MenuPopover from '../../components/MenuPopover';\r\nimport { MIconButton } from '../../components/@material-extend';\r\nimport { dispatch, RootState, useSelector } from 'redux/store';\r\nimport { getNotification } from 'redux/slices/krowd_slices/user';\r\nimport Logo from 'components/Logo';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ITEM_HEIGHT = 64;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\ntype TNotificationPopover2 = {\r\n  title: string;\r\n  entityId: string;\r\n  image: string;\r\n  createDate: string;\r\n  seen: boolean;\r\n};\r\n\r\nfunction renderContent(notification: TNotificationPopover2) {\r\n  const title = (\r\n    <Typography variant=\"subtitle2\">\r\n      {notification.title}\r\n      {/* <Typography component=\"span\" variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n        &nbsp; {noCase(notification.title)}\r\n      </Typography> */}\r\n    </Typography>\r\n  );\r\n\r\n  // if (notification.type === 'order_placed') {\r\n  //   return {\r\n  //     avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_package.svg\" />,\r\n  //     title\r\n  //   };\r\n  // }\r\n  // if (notification.type === 'order_shipped') {\r\n  //   return {\r\n  //     avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_shipping.svg\" />,\r\n  //     title\r\n  //   };\r\n  // }\r\n  // if (notification.type === 'mail') {\r\n  //   return {\r\n  //     avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_mail.svg\" />,\r\n  //     title\r\n  //   };\r\n  // }\r\n  // if (notification.type === 'chat_message') {\r\n  //   return {\r\n  //     avatar: <img alt={notification.title} src=\"/static/icons/ic_notification_chat.svg\" />,\r\n  //     title\r\n  //   };\r\n  // }\r\n  return {\r\n    avatar: notification.image ? <img alt={notification.title} src={notification.image} /> : null,\r\n    title\r\n  };\r\n}\r\n\r\nfunction NotificationItem({ notification }: { notification: TNotificationPopover2 }) {\r\n  const { avatar, title } = renderContent(notification);\r\n\r\n  return (\r\n    <ListItemButton\r\n      to=\"#\"\r\n      component={RouterLink}\r\n      sx={{\r\n        py: 1.5,\r\n        px: 2.5,\r\n        mt: '1px',\r\n        ...(!notification.seen && {\r\n          bgcolor: '#b5b5b559'\r\n        })\r\n      }}\r\n    >\r\n      <ListItemAvatar>\r\n        {avatar ? (\r\n          <Avatar sx={{ bgcolor: 'background.neutral' }}>{avatar}</Avatar>\r\n        ) : (\r\n          <Box sx={{ width: 40, height: 40 }}>\r\n            <img src=\"/static/home/logo.png\" />\r\n          </Box>\r\n        )}\r\n      </ListItemAvatar>\r\n      <ListItemText\r\n        primary={title}\r\n        secondary={\r\n          <Typography\r\n            variant=\"caption\"\r\n            sx={{\r\n              mt: 0.5,\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              color: 'text.disabled'\r\n            }}\r\n          >\r\n            <Box component={Icon} icon={clockFill} sx={{ mr: 0.5, width: 16, height: 16 }} />\r\n            {fToNow(notification.createDate)}\r\n          </Typography>\r\n        }\r\n      />\r\n    </ListItemButton>\r\n  );\r\n}\r\n\r\nexport default function NotificationsPopover() {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const [seen, setSeen] = useState(false);\r\n  const { NotificationDetailState } = useSelector((state: RootState) => state.userKrowd);\r\n  const {\r\n    isLoading,\r\n    details,\r\n    total: totalUserUnRead,\r\n    new: newNotification\r\n  } = NotificationDetailState;\r\n\r\n  useEffect(() => {\r\n    dispatch(getNotification(localStorage.getItem('userId') ?? '', seen));\r\n  }, [dispatch, seen]);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMarkAllAsRead = () => {\r\n    dispatch(getNotification(localStorage.getItem('userId') ?? '', true));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MIconButton\r\n        ref={anchorRef}\r\n        size=\"large\"\r\n        color={open ? 'primary' : 'default'}\r\n        onClick={handleOpen}\r\n      >\r\n        <Badge badgeContent={newNotification} color=\"error\">\r\n          <Icon icon={bellFill} width={20} height={20} />\r\n        </Badge>\r\n      </MIconButton>\r\n\r\n      <MenuPopover\r\n        open={open}\r\n        onClose={handleClose}\r\n        anchorEl={anchorRef.current}\r\n        sx={{ width: 420 }}\r\n      >\r\n        <Box sx={{ display: 'flex', alignItems: 'center', py: 2, px: 2.5 }}>\r\n          <Box sx={{ flexGrow: 1 }}>\r\n            <Typography variant=\"subtitle1\">Thông báo ({totalUserUnRead})</Typography>\r\n            {newNotification > 0 ? (\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                Bạn có <strong> {newNotification}</strong> thông báo mới chưa đọc\r\n              </Typography>\r\n            ) : (\r\n              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                Bạn có đã xem tất cả tin trong ngày\r\n              </Typography>\r\n            )}\r\n          </Box>\r\n\r\n          {newNotification > 0 && (\r\n            <Tooltip title=\"Đánh dấu đã đọc\">\r\n              <MIconButton onClick={handleMarkAllAsRead} color=\"primary\">\r\n                <Icon icon={doneAllFill} width={20} height={20} />\r\n              </MIconButton>\r\n            </Tooltip>\r\n          )}\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        <Scrollbar sx={{ height: { xs: 340, sm: 'auto' } }}>\r\n          <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                Thông báo mới\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            <Scrollbar sx={{ height: ITEM_HEIGHT * 12 }}>\r\n              {details.map((notification) => (\r\n                <NotificationItem key={notification.entityId} notification={notification} />\r\n              ))}\r\n            </Scrollbar>\r\n          </List>\r\n\r\n          {/* <List\r\n            disablePadding\r\n            subheader={\r\n              <ListSubheader disableSticky sx={{ py: 1, px: 2.5, typography: 'overline' }}>\r\n                Thông báo đã xem\r\n              </ListSubheader>\r\n            }\r\n          >\r\n            <Scrollbar sx={{ height: ITEM_HEIGHT * 4 }}>\r\n              {details.map((notification) => (\r\n                <NotificationItem key={notification.entityId} notification={notification} />\r\n              ))}\r\n            </Scrollbar>\r\n          </List> */}\r\n        </Scrollbar>\r\n\r\n        <Divider />\r\n        {/* \r\n        <Box sx={{ p: 1 }}>\r\n          <Button fullWidth disableRipple component={RouterLink} to=\"#\">\r\n            View All\r\n          </Button>\r\n        </Box> */}\r\n      </MenuPopover>\r\n    </>\r\n  );\r\n}\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\components\\_external-pages\\project-detail\\ProjectDetailUpdateNews.tsx",["3395","3396"],"import { Box, Grid, styled, Typography } from '@mui/material';\r\nimport parse from 'html-react-parser';\r\nimport { useState } from 'react';\r\nimport _ from 'lodash';\r\nconst FixQL = styled('div')(() => ({\r\n  '.ql-align-center': {\r\n    textAlign: 'center'\r\n  },\r\n  '.ql-align-right': {\r\n    textAlign: 'right'\r\n  },\r\n  '.ql-align-justify': {\r\n    textAlign: 'justify'\r\n  },\r\n  blockquote: {\r\n    background: '#f9f9f9',\r\n    borderLeft: '10px solid #ccc',\r\n    margin: '1.5em 10px',\r\n    padding: '0.5em 10px',\r\n    quotes: '201C 201D 2018 2019'\r\n  },\r\n  'blockquote:before': {\r\n    color: '#ccc',\r\n    content: 'open-quote',\r\n    fontSize: '4em',\r\n    lineHeight: '0.1em',\r\n    marginRight: '0.25em',\r\n    verticalAlign: '-0.4em'\r\n  },\r\n  'blockquote p': {\r\n    display: 'inline'\r\n  },\r\n  '.ql-video': {\r\n    width: '100%',\r\n    height: '500px'\r\n  }\r\n}));\r\n\r\ntype UpdateProps = {\r\n  id: string;\r\n  title: string;\r\n  link: string;\r\n  content: string;\r\n  description: string;\r\n  updateDate: string;\r\n};\r\ntype UpdateNewsListProps = {\r\n  updates: UpdateProps[];\r\n};\r\nfunction ProjectDetailUpdateNews({ updates }: UpdateNewsListProps) {\r\n  return (\r\n    <>\r\n      {updates &&\r\n        updates.map(\r\n          (v, i) =>\r\n            v && (\r\n              <Box key={i} my={5} py={0.4}>\r\n                <Grid container>\r\n                  <Box pb={2}>\r\n                    <Box>\r\n                      <Box display={'flex'}>\r\n                        <Box>\r\n                          {v.updateDate.toString().substring(0, 5)}\r\n                          <br />\r\n                          <Typography\r\n                            sx={{ fontSize: '13px', textAlign: 'right' }}\r\n                            color={'GrayText'}\r\n                          >\r\n                            {v.updateDate.toString().substring(6, 10)}\r\n                          </Typography>\r\n                        </Box>\r\n\r\n                        <Box>\r\n                          <Typography variant=\"h4\" color={'#666'} height={50}>\r\n                            <Box mx={2}>{`${v.title}`}</Box>\r\n                          </Typography>\r\n\r\n                          <Grid xs={12} sm={9} md={11} lg={11}>\r\n                            <Box mx={2} display={'flex'}>\r\n                              {v.content && <FixQL>{parse(v.content)}</FixQL>}\r\n                            </Box>\r\n                          </Grid>\r\n                        </Box>\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                </Grid>\r\n              </Box>\r\n            )\r\n        )}\r\n    </>\r\n  );\r\n}\r\nexport default ProjectDetailUpdateNews;\r\n","D:\\FPT\\Ky 10\\RevenueSharingInvest_FrontEnd\\src\\pages\\dashboard\\ProjectKrowdManager\\PaymentHistory.tsx",["3397","3398","3399"],{"ruleId":"3400","severity":1,"message":"3401","line":44,"column":10,"nodeType":"3402","messageId":"3403","endLine":44,"endColumn":26},{"ruleId":"3404","replacedBy":"3405"},{"ruleId":"3406","replacedBy":"3407"},{"ruleId":"3400","severity":1,"message":"3408","line":9,"column":8,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3409","line":72,"column":9,"nodeType":"3402","messageId":"3403","endLine":72,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3410","line":164,"column":9,"nodeType":"3402","messageId":"3403","endLine":164,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3411","line":6,"column":29,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3412","line":8,"column":9,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":14},{"ruleId":"3413","severity":1,"message":"3414","line":12,"column":7,"nodeType":"3415","endLine":12,"endColumn":42},{"ruleId":"3400","severity":1,"message":"3416","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3417","line":4,"column":6,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3418","line":8,"column":10,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3419","line":2,"column":20,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3420","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3421","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3422","line":6,"column":17,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3419","line":2,"column":20,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3420","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3423","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3424","line":5,"column":20,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3425","line":5,"column":48,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":56},{"ruleId":"3400","severity":1,"message":"3421","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3426","line":7,"column":32,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":42},{"ruleId":"3400","severity":1,"message":"3427","line":69,"column":13,"nodeType":"3402","messageId":"3403","endLine":69,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3428","line":5,"column":3,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3429","line":7,"column":3,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":10},{"ruleId":"3400","severity":1,"message":"3430","line":9,"column":3,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3431","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3432","line":1,"column":15,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3427","line":111,"column":13,"nodeType":"3402","messageId":"3403","endLine":111,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3431","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3432","line":1,"column":15,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3419","line":2,"column":20,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3420","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3423","line":7,"column":3,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3421","line":14,"column":10,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3433","line":16,"column":8,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3434","line":17,"column":10,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3431","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3432","line":1,"column":15,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3420","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3435","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3436","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3421","line":8,"column":10,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3431","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3432","line":1,"column":15,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3437","line":3,"column":22,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3438","line":329,"column":7,"nodeType":"3402","messageId":"3403","endLine":329,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3439","line":333,"column":7,"nodeType":"3402","messageId":"3403","endLine":333,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3440","line":336,"column":7,"nodeType":"3402","messageId":"3403","endLine":336,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3441","line":352,"column":7,"nodeType":"3402","messageId":"3403","endLine":352,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3442","line":1,"column":18,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3443","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":8},{"ruleId":"3400","severity":1,"message":"3444","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3445","line":22,"column":10,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3446","line":51,"column":10,"nodeType":"3402","messageId":"3403","endLine":51,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3447","line":51,"column":16,"nodeType":"3402","messageId":"3403","endLine":51,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3409","line":52,"column":9,"nodeType":"3402","messageId":"3403","endLine":52,"endColumn":17},{"ruleId":"3448","severity":1,"message":"3449","line":56,"column":6,"nodeType":"3450","endLine":56,"endColumn":16,"suggestions":"3451"},{"ruleId":"3400","severity":1,"message":"3452","line":108,"column":19,"nodeType":"3402","messageId":"3403","endLine":108,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3453","line":108,"column":79,"nodeType":"3402","messageId":"3403","endLine":108,"endColumn":92},{"ruleId":"3400","severity":1,"message":"3454","line":111,"column":11,"nodeType":"3402","messageId":"3403","endLine":111,"endColumn":20},{"ruleId":"3413","severity":1,"message":"3414","line":142,"column":11,"nodeType":"3415","endLine":142,"endColumn":96},{"ruleId":"3413","severity":1,"message":"3414","line":183,"column":17,"nodeType":"3415","endLine":186,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3455","line":10,"column":10,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":35},{"ruleId":"3400","severity":1,"message":"3456","line":10,"column":37,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":61},{"ruleId":"3400","severity":1,"message":"3457","line":33,"column":11,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":19},{"ruleId":"3448","severity":1,"message":"3458","line":40,"column":6,"nodeType":"3450","endLine":40,"endColumn":13,"suggestions":"3459"},{"ruleId":"3400","severity":1,"message":"3460","line":12,"column":3,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3461","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3442","line":24,"column":18,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3462","line":24,"column":30,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3463","line":26,"column":18,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3464","line":43,"column":10,"nodeType":"3402","messageId":"3403","endLine":43,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3465","line":43,"column":30,"nodeType":"3402","messageId":"3403","endLine":43,"endColumn":49},{"ruleId":"3400","severity":1,"message":"3466","line":48,"column":8,"nodeType":"3402","messageId":"3403","endLine":48,"endColumn":23},{"ruleId":"3467","severity":1,"message":"3468","line":72,"column":34,"nodeType":"3469","messageId":"3470","endLine":72,"endColumn":36},{"ruleId":"3400","severity":1,"message":"3446","line":97,"column":10,"nodeType":"3402","messageId":"3403","endLine":97,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3471","line":104,"column":20,"nodeType":"3402","messageId":"3403","endLine":104,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3472","line":112,"column":10,"nodeType":"3402","messageId":"3403","endLine":112,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3473","line":112,"column":23,"nodeType":"3402","messageId":"3403","endLine":112,"endColumn":37},{"ruleId":"3400","severity":1,"message":"3474","line":113,"column":10,"nodeType":"3402","messageId":"3403","endLine":113,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3475","line":113,"column":24,"nodeType":"3402","messageId":"3403","endLine":113,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3476","line":114,"column":10,"nodeType":"3402","messageId":"3403","endLine":114,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3477","line":114,"column":23,"nodeType":"3402","messageId":"3403","endLine":114,"endColumn":37},{"ruleId":"3400","severity":1,"message":"3478","line":115,"column":10,"nodeType":"3402","messageId":"3403","endLine":115,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3479","line":115,"column":29,"nodeType":"3402","messageId":"3403","endLine":115,"endColumn":49},{"ruleId":"3400","severity":1,"message":"3480","line":129,"column":9,"nodeType":"3402","messageId":"3403","endLine":129,"endColumn":35},{"ruleId":"3448","severity":1,"message":"3481","line":153,"column":6,"nodeType":"3450","endLine":153,"endColumn":16,"suggestions":"3482"},{"ruleId":"3400","severity":1,"message":"3483","line":157,"column":32,"nodeType":"3402","messageId":"3403","endLine":157,"endColumn":44},{"ruleId":"3400","severity":1,"message":"3454","line":157,"column":46,"nodeType":"3402","messageId":"3403","endLine":157,"endColumn":55},{"ruleId":"3400","severity":1,"message":"3484","line":173,"column":9,"nodeType":"3402","messageId":"3403","endLine":173,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3485","line":186,"column":9,"nodeType":"3402","messageId":"3403","endLine":186,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3486","line":189,"column":9,"nodeType":"3402","messageId":"3403","endLine":189,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3487","line":269,"column":9,"nodeType":"3402","messageId":"3403","endLine":269,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3488","line":272,"column":11,"nodeType":"3402","messageId":"3403","endLine":272,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3489","line":272,"column":27,"nodeType":"3402","messageId":"3403","endLine":272,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3453","line":272,"column":79,"nodeType":"3402","messageId":"3403","endLine":272,"endColumn":92},{"ruleId":"3413","severity":1,"message":"3414","line":291,"column":17,"nodeType":"3415","endLine":291,"endColumn":81},{"ruleId":"3448","severity":1,"message":"3449","line":84,"column":6,"nodeType":"3450","endLine":84,"endColumn":20,"suggestions":"3490"},{"ruleId":"3400","severity":1,"message":"3484","line":42,"column":9,"nodeType":"3402","messageId":"3403","endLine":42,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3491","line":12,"column":10,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3492","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3444","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3493","line":13,"column":10,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3494","line":14,"column":10,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3495","line":14,"column":20,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3496","line":14,"column":31,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":42},{"ruleId":"3400","severity":1,"message":"3497","line":15,"column":10,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3498","line":17,"column":8,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3499","line":18,"column":10,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3435","line":19,"column":10,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3500","line":29,"column":7,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3494","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3501","line":4,"column":22,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3502","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3503","line":5,"column":16,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3504","line":5,"column":32,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3420","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3505","line":32,"column":28,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3501","line":7,"column":3,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3492","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3444","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3506","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3500","line":22,"column":7,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3492","line":3,"column":3,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3507","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3493","line":14,"column":10,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3508","line":48,"column":30,"nodeType":"3402","messageId":"3403","endLine":48,"endColumn":39},{"ruleId":"3509","severity":1,"message":"3510","line":72,"column":30,"nodeType":"3511","messageId":"3512","endLine":72,"endColumn":37},{"ruleId":"3400","severity":1,"message":"3501","line":4,"column":3,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3444","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3506","line":18,"column":10,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3497","line":18,"column":21,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3442","line":19,"column":18,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3513","line":26,"column":8,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3514","line":27,"column":26,"nodeType":"3402","messageId":"3403","endLine":27,"endColumn":43},{"ruleId":"3400","severity":1,"message":"3515","line":28,"column":10,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3516","line":50,"column":11,"nodeType":"3402","messageId":"3403","endLine":50,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3517","line":8,"column":3,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3493","line":12,"column":10,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3518","line":46,"column":20,"nodeType":"3402","messageId":"3403","endLine":46,"endColumn":24},{"ruleId":"3413","severity":1,"message":"3414","line":74,"column":15,"nodeType":"3415","endLine":74,"endColumn":84},{"ruleId":"3413","severity":1,"message":"3414","line":107,"column":29,"nodeType":"3415","endLine":110,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3519","line":11,"column":8,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":18},{"ruleId":"3467","severity":1,"message":"3468","line":47,"column":38,"nodeType":"3469","messageId":"3470","endLine":47,"endColumn":40},{"ruleId":"3467","severity":1,"message":"3468","line":51,"column":38,"nodeType":"3469","messageId":"3470","endLine":51,"endColumn":40},{"ruleId":"3448","severity":1,"message":"3520","line":67,"column":21,"nodeType":"3521","endLine":67,"endColumn":37},{"ruleId":"3413","severity":1,"message":"3414","line":18,"column":11,"nodeType":"3415","endLine":18,"endColumn":67},{"ruleId":"3400","severity":1,"message":"3522","line":12,"column":10,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":17},{"ruleId":"3413","severity":1,"message":"3414","line":119,"column":21,"nodeType":"3415","endLine":126,"endColumn":23},{"ruleId":"3413","severity":1,"message":"3414","line":33,"column":13,"nodeType":"3415","endLine":33,"endColumn":48},{"ruleId":"3400","severity":1,"message":"3484","line":97,"column":9,"nodeType":"3402","messageId":"3403","endLine":97,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3523","line":99,"column":31,"nodeType":"3402","messageId":"3403","endLine":99,"endColumn":52},{"ruleId":"3448","severity":1,"message":"3449","line":136,"column":6,"nodeType":"3450","endLine":136,"endColumn":16,"suggestions":"3524"},{"ruleId":"3413","severity":1,"message":"3414","line":368,"column":31,"nodeType":"3415","endLine":368,"endColumn":86},{"ruleId":"3400","severity":1,"message":"3525","line":2,"column":17,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3526","line":22,"column":3,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3484","line":104,"column":9,"nodeType":"3402","messageId":"3403","endLine":104,"endColumn":24},{"ruleId":"3448","severity":1,"message":"3449","line":146,"column":6,"nodeType":"3450","endLine":146,"endColumn":16,"suggestions":"3527"},{"ruleId":"3413","severity":1,"message":"3414","line":393,"column":31,"nodeType":"3415","endLine":393,"endColumn":86},{"ruleId":"3413","severity":1,"message":"3414","line":139,"column":21,"nodeType":"3415","endLine":139,"endColumn":90},{"ruleId":"3400","severity":1,"message":"3528","line":3,"column":15,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3529","line":7,"column":10,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3530","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3531","line":19,"column":7,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":19},{"ruleId":"3532","severity":1,"message":"3533","line":89,"column":13,"nodeType":"3415","endLine":96,"endColumn":15},{"ruleId":"3413","severity":1,"message":"3414","line":71,"column":21,"nodeType":"3415","endLine":78,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3535","line":8,"column":37,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":50},{"ruleId":"3400","severity":1,"message":"3536","line":18,"column":26,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":48},{"ruleId":"3400","severity":1,"message":"3442","line":19,"column":24,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3409","line":118,"column":9,"nodeType":"3402","messageId":"3403","endLine":118,"endColumn":17},{"ruleId":"3509","severity":1,"message":"3537","line":207,"column":47,"nodeType":"3538","messageId":"3539","endLine":207,"endColumn":49},{"ruleId":"3413","severity":1,"message":"3414","line":359,"column":35,"nodeType":"3415","endLine":359,"endColumn":94},{"ruleId":"3413","severity":1,"message":"3414","line":391,"column":35,"nodeType":"3415","endLine":394,"endColumn":37},{"ruleId":"3509","severity":1,"message":"3537","line":471,"column":49,"nodeType":"3538","messageId":"3539","endLine":471,"endColumn":51},{"ruleId":"3413","severity":1,"message":"3414","line":547,"column":13,"nodeType":"3415","endLine":550,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3540","line":1,"column":42,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":56},{"ruleId":"3400","severity":1,"message":"3506","line":5,"column":21,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3541","line":5,"column":32,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":38},{"ruleId":"3400","severity":1,"message":"3542","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3484","line":29,"column":9,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3411","line":2,"column":31,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3543","line":15,"column":11,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3411","line":2,"column":31,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3454","line":15,"column":11,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":20},{"ruleId":"3448","severity":1,"message":"3449","line":19,"column":6,"nodeType":"3450","endLine":19,"endColumn":16,"suggestions":"3544"},{"ruleId":"3400","severity":1,"message":"3515","line":22,"column":10,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3545","line":24,"column":10,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3546","line":27,"column":10,"nodeType":"3402","messageId":"3403","endLine":27,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3547","line":28,"column":8,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3494","line":30,"column":10,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3425","line":31,"column":23,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3548","line":71,"column":10,"nodeType":"3402","messageId":"3403","endLine":71,"endColumn":23},{"ruleId":"3448","severity":1,"message":"3549","line":93,"column":6,"nodeType":"3450","endLine":93,"endColumn":8,"suggestions":"3550"},{"ruleId":"3400","severity":1,"message":"3551","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3552","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3553","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3554","line":17,"column":3,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3555","line":18,"column":3,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3556","line":19,"column":3,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3557","line":20,"column":3,"nodeType":"3402","messageId":"3403","endLine":20,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3526","line":21,"column":3,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3558","line":22,"column":3,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":6},{"ruleId":"3400","severity":1,"message":"3559","line":30,"column":10,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3560","line":31,"column":10,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3561","line":32,"column":8,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3420","line":38,"column":8,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3562","line":43,"column":7,"nodeType":"3402","messageId":"3403","endLine":43,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3446","line":68,"column":10,"nodeType":"3402","messageId":"3403","endLine":68,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3447","line":68,"column":16,"nodeType":"3402","messageId":"3403","endLine":68,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3471","line":74,"column":20,"nodeType":"3402","messageId":"3403","endLine":74,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3563","line":77,"column":24,"nodeType":"3402","messageId":"3403","endLine":77,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3564","line":78,"column":10,"nodeType":"3402","messageId":"3403","endLine":78,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3565","line":78,"column":16,"nodeType":"3402","messageId":"3403","endLine":78,"endColumn":30},{"ruleId":"3448","severity":1,"message":"3449","line":92,"column":6,"nodeType":"3450","endLine":92,"endColumn":16,"suggestions":"3566"},{"ruleId":"3400","severity":1,"message":"3567","line":98,"column":9,"nodeType":"3402","messageId":"3403","endLine":98,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3452","line":180,"column":19,"nodeType":"3402","messageId":"3403","endLine":180,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3568","line":16,"column":10,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3494","line":17,"column":10,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3484","line":94,"column":9,"nodeType":"3402","messageId":"3403","endLine":94,"endColumn":24},{"ruleId":"3413","severity":1,"message":"3414","line":123,"column":17,"nodeType":"3415","endLine":123,"endColumn":73},{"ruleId":"3400","severity":1,"message":"3506","line":2,"column":17,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3569","line":22,"column":8,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3495","line":25,"column":20,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3496","line":26,"column":10,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3570","line":44,"column":24,"nodeType":"3402","messageId":"3403","endLine":44,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3563","line":45,"column":24,"nodeType":"3402","messageId":"3403","endLine":45,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3541","line":17,"column":28,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3571","line":85,"column":7,"nodeType":"3402","messageId":"3403","endLine":85,"endColumn":15},{"ruleId":"3448","severity":1,"message":"3572","line":128,"column":3,"nodeType":"3402","endLine":128,"endColumn":12,"suggestions":"3573"},{"ruleId":"3400","severity":1,"message":"3574","line":133,"column":9,"nodeType":"3402","messageId":"3403","endLine":133,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3546","line":17,"column":10,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3575","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3442","line":7,"column":18,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3576","line":7,"column":30,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3577","line":7,"column":41,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":52},{"ruleId":"3400","severity":1,"message":"3462","line":7,"column":54,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":65},{"ruleId":"3400","severity":1,"message":"3517","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3578","line":5,"column":3,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3579","line":6,"column":3,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3580","line":8,"column":38,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":50},{"ruleId":"3400","severity":1,"message":"3581","line":11,"column":10,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3582","line":17,"column":8,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3583","line":18,"column":10,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3584","line":18,"column":21,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3585","line":18,"column":33,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3586","line":24,"column":22,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":35},{"ruleId":"3400","severity":1,"message":"3587","line":25,"column":11,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3588","line":28,"column":10,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3589","line":28,"column":21,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3505","line":29,"column":28,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3590","line":32,"column":5,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3591","line":33,"column":33,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":50},{"ruleId":"3400","severity":1,"message":"3592","line":34,"column":19,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":34},{"ruleId":"3448","severity":1,"message":"3449","line":40,"column":6,"nodeType":"3450","endLine":40,"endColumn":28,"suggestions":"3593"},{"ruleId":"3400","severity":1,"message":"3558","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3594","line":2,"column":15,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3411","line":2,"column":44,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":54},{"ruleId":"3400","severity":1,"message":"3558","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3594","line":2,"column":15,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3411","line":2,"column":44,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":54},{"ruleId":"3400","severity":1,"message":"3595","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3541","line":8,"column":28,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3596","line":10,"column":8,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3460","line":26,"column":3,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3556","line":27,"column":3,"nodeType":"3402","messageId":"3403","endLine":27,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3411","line":28,"column":3,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3484","line":188,"column":9,"nodeType":"3402","messageId":"3403","endLine":188,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3597","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3598","line":6,"column":27,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3506","line":7,"column":10,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3497","line":7,"column":21,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3494","line":8,"column":10,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3495","line":8,"column":20,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3496","line":8,"column":31,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":42},{"ruleId":"3400","severity":1,"message":"3599","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3597","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3598","line":6,"column":27,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3506","line":7,"column":10,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3497","line":7,"column":21,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3494","line":8,"column":10,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3495","line":8,"column":20,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3496","line":8,"column":31,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":42},{"ruleId":"3400","severity":1,"message":"3599","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3600","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3601","line":8,"column":21,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3602","line":8,"column":31,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":35},{"ruleId":"3400","severity":1,"message":"3603","line":19,"column":10,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3484","line":53,"column":9,"nodeType":"3402","messageId":"3403","endLine":53,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3604","line":54,"column":11,"nodeType":"3402","messageId":"3403","endLine":54,"endColumn":12},{"ruleId":"3448","severity":1,"message":"3605","line":60,"column":6,"nodeType":"3450","endLine":60,"endColumn":16,"suggestions":"3606"},{"ruleId":"3400","severity":1,"message":"3607","line":112,"column":9,"nodeType":"3402","messageId":"3403","endLine":112,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3515","line":11,"column":10,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3608","line":19,"column":8,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3609","line":26,"column":8,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3610","line":5,"column":61,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":66},{"ruleId":"3400","severity":1,"message":"3611","line":21,"column":3,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3612","line":22,"column":3,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3613","line":24,"column":3,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3614","line":84,"column":10,"nodeType":"3402","messageId":"3403","endLine":84,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3615","line":127,"column":9,"nodeType":"3402","messageId":"3403","endLine":127,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3616","line":131,"column":9,"nodeType":"3402","messageId":"3403","endLine":131,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3617","line":135,"column":9,"nodeType":"3402","messageId":"3403","endLine":135,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3618","line":8,"column":3,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3619","line":9,"column":3,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3620","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3621","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3622","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3623","line":14,"column":3,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3624","line":17,"column":3,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3625","line":19,"column":3,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3516","line":23,"column":11,"nodeType":"3402","messageId":"3403","endLine":23,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3626","line":25,"column":11,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3454","line":25,"column":23,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3627","line":19,"column":20,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":13,"column":7,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3632","line":38,"column":11,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":13,"column":7,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3632","line":38,"column":11,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":13,"column":7,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3632","line":38,"column":11,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":13,"column":7,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3632","line":38,"column":11,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":47,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":52},{"ruleId":"3400","severity":1,"message":"3569","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3629","line":17,"column":7,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3633","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3630","line":29,"column":7,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":32,"column":7,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3634","line":44,"column":7,"nodeType":"3402","messageId":"3403","endLine":44,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3632","line":49,"column":11,"nodeType":"3402","messageId":"3403","endLine":49,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3604","line":50,"column":22,"nodeType":"3402","messageId":"3403","endLine":50,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":47,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":52},{"ruleId":"3400","severity":1,"message":"3629","line":17,"column":7,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3631","line":32,"column":7,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3634","line":44,"column":7,"nodeType":"3402","messageId":"3403","endLine":44,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3632","line":49,"column":11,"nodeType":"3402","messageId":"3403","endLine":49,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":50,"column":11,"nodeType":"3402","messageId":"3403","endLine":50,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":14,"column":7,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":19,"column":7,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":22,"column":7,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3635","line":25,"column":7,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3634","line":34,"column":7,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3632","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":40,"column":11,"nodeType":"3402","messageId":"3403","endLine":40,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":13,"column":7,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3635","line":24,"column":7,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3634","line":33,"column":7,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3632","line":38,"column":11,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":5,"column":3,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":10},{"ruleId":"3400","severity":1,"message":"3610","line":9,"column":3,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":8},{"ruleId":"3400","severity":1,"message":"3517","line":19,"column":10,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":23,"column":7,"nodeType":"3402","messageId":"3403","endLine":23,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":28,"column":7,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":31,"column":7,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3635","line":34,"column":7,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3634","line":43,"column":7,"nodeType":"3402","messageId":"3403","endLine":43,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3632","line":48,"column":11,"nodeType":"3402","messageId":"3403","endLine":48,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":49,"column":11,"nodeType":"3402","messageId":"3403","endLine":49,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3628","line":2,"column":26,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3517","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3629","line":13,"column":7,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3630","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3631","line":21,"column":7,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3635","line":24,"column":7,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3634","line":33,"column":7,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3632","line":38,"column":11,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":39,"column":11,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3558","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":41,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3610","line":2,"column":27,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3636","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3637","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3638","line":14,"column":3,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3639","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3640","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3641","line":17,"column":3,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3642","line":18,"column":3,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3454","line":29,"column":23,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":32},{"ruleId":"3448","severity":1,"message":"3449","line":32,"column":6,"nodeType":"3450","endLine":32,"endColumn":16,"suggestions":"3643"},{"ruleId":"3400","severity":1,"message":"3558","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3644","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3645","line":9,"column":7,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":18},{"ruleId":"3413","severity":1,"message":"3414","line":89,"column":19,"nodeType":"3415","endLine":92,"endColumn":21},{"ruleId":"3413","severity":1,"message":"3414","line":119,"column":19,"nodeType":"3415","endLine":122,"endColumn":21},{"ruleId":"3413","severity":1,"message":"3414","line":149,"column":19,"nodeType":"3415","endLine":152,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3558","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":13},{"ruleId":"3413","severity":1,"message":"3414","line":63,"column":15,"nodeType":"3415","endLine":63,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":90,"column":15,"nodeType":"3415","endLine":90,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":118,"column":15,"nodeType":"3415","endLine":118,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":145,"column":15,"nodeType":"3415","endLine":145,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":172,"column":15,"nodeType":"3415","endLine":172,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":200,"column":15,"nodeType":"3415","endLine":200,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":229,"column":15,"nodeType":"3415","endLine":229,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":258,"column":15,"nodeType":"3415","endLine":258,"endColumn":53},{"ruleId":"3413","severity":1,"message":"3414","line":296,"column":15,"nodeType":"3415","endLine":296,"endColumn":54},{"ruleId":"3400","severity":1,"message":"3536","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3646","line":3,"column":34,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":43},{"ruleId":"3400","severity":1,"message":"3647","line":4,"column":10,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3648","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3627","line":24,"column":20,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3409","line":26,"column":9,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":17},{"ruleId":"3448","severity":1,"message":"3449","line":33,"column":6,"nodeType":"3450","endLine":33,"endColumn":27,"suggestions":"3649"},{"ruleId":"3400","severity":1,"message":"3442","line":1,"column":18,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3517","line":4,"column":23,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3558","line":4,"column":52,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":55},{"ruleId":"3400","severity":1,"message":"3650","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3651","line":8,"column":8,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3646","line":3,"column":34,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":43},{"ruleId":"3400","severity":1,"message":"3627","line":34,"column":20,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":31},{"ruleId":"3448","severity":1,"message":"3449","line":38,"column":6,"nodeType":"3450","endLine":38,"endColumn":27,"suggestions":"3652"},{"ruleId":"3400","severity":1,"message":"3653","line":3,"column":3,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3654","line":64,"column":17,"nodeType":"3402","messageId":"3403","endLine":64,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3627","line":67,"column":20,"nodeType":"3402","messageId":"3403","endLine":67,"endColumn":31},{"ruleId":"3448","severity":1,"message":"3449","line":76,"column":6,"nodeType":"3450","endLine":76,"endColumn":57,"suggestions":"3655"},{"ruleId":"3448","severity":1,"message":"3656","line":22,"column":6,"nodeType":"3450","endLine":22,"endColumn":27,"suggestions":"3657"},{"ruleId":"3400","severity":1,"message":"3658","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3492","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3528","line":6,"column":18,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3659","line":8,"column":3,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3587","line":21,"column":11,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3589","line":30,"column":21,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":33},{"ruleId":"3448","severity":1,"message":"3449","line":33,"column":6,"nodeType":"3450","endLine":33,"endColumn":28,"suggestions":"3660"},{"ruleId":"3400","severity":1,"message":"3661","line":19,"column":63,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":74},{"ruleId":"3400","severity":1,"message":"3627","line":22,"column":20,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":31},{"ruleId":"3448","severity":1,"message":"3662","line":25,"column":6,"nodeType":"3450","endLine":25,"endColumn":27,"suggestions":"3663"},{"ruleId":"3400","severity":1,"message":"3492","line":7,"column":3,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3664","line":35,"column":11,"nodeType":"3402","messageId":"3403","endLine":35,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3627","line":46,"column":20,"nodeType":"3402","messageId":"3403","endLine":46,"endColumn":31},{"ruleId":"3448","severity":1,"message":"3449","line":54,"column":6,"nodeType":"3450","endLine":54,"endColumn":35,"suggestions":"3665"},{"ruleId":"3400","severity":1,"message":"3528","line":4,"column":38,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":42},{"ruleId":"3400","severity":1,"message":"3666","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3667","line":11,"column":7,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3668","line":5,"column":3,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3669","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3507","line":14,"column":3,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3670","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3461","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3671","line":20,"column":3,"nodeType":"3402","messageId":"3403","endLine":20,"endColumn":10},{"ruleId":"3400","severity":1,"message":"3672","line":64,"column":10,"nodeType":"3402","messageId":"3403","endLine":64,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3673","line":64,"column":27,"nodeType":"3402","messageId":"3403","endLine":64,"endColumn":45},{"ruleId":"3400","severity":1,"message":"3627","line":65,"column":20,"nodeType":"3402","messageId":"3403","endLine":65,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3674","line":67,"column":10,"nodeType":"3402","messageId":"3403","endLine":67,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3675","line":67,"column":34,"nodeType":"3402","messageId":"3403","endLine":67,"endColumn":59},{"ruleId":"3448","severity":1,"message":"3449","line":75,"column":6,"nodeType":"3450","endLine":75,"endColumn":27,"suggestions":"3676"},{"ruleId":"3413","severity":1,"message":"3414","line":461,"column":25,"nodeType":"3415","endLine":461,"endColumn":77},{"ruleId":"3400","severity":1,"message":"3627","line":31,"column":20,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":31},{"ruleId":"3448","severity":1,"message":"3656","line":34,"column":6,"nodeType":"3450","endLine":34,"endColumn":27,"suggestions":"3677"},{"ruleId":"3400","severity":1,"message":"3484","line":22,"column":9,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":24},{"ruleId":"3413","severity":1,"message":"3414","line":73,"column":13,"nodeType":"3415","endLine":73,"endColumn":49},{"ruleId":"3400","severity":1,"message":"3678","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":12,"column":11,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3411","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3556","line":12,"column":3,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3460","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3679","line":22,"column":19,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3596","line":27,"column":8,"nodeType":"3402","messageId":"3403","endLine":27,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3541","line":30,"column":28,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3595","line":31,"column":8,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3680","line":36,"column":8,"nodeType":"3402","messageId":"3403","endLine":36,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3571","line":101,"column":7,"nodeType":"3402","messageId":"3403","endLine":101,"endColumn":15},{"ruleId":"3448","severity":1,"message":"3572","line":144,"column":3,"nodeType":"3402","endLine":144,"endColumn":12,"suggestions":"3681"},{"ruleId":"3400","severity":1,"message":"3506","line":11,"column":17,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3595","line":12,"column":8,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3484","line":78,"column":9,"nodeType":"3402","messageId":"3403","endLine":78,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3682","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3492","line":11,"column":21,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3506","line":18,"column":17,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3595","line":19,"column":8,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3484","line":77,"column":9,"nodeType":"3402","messageId":"3403","endLine":77,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3558","line":4,"column":10,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3484","line":49,"column":9,"nodeType":"3402","messageId":"3403","endLine":49,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3683","line":3,"column":15,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3684","line":1,"column":13,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3506","line":3,"column":23,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3553","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3555","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3554","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3569","line":20,"column":8,"nodeType":"3402","messageId":"3403","endLine":20,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3685","line":24,"column":10,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3496","line":25,"column":10,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3495","line":26,"column":20,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3686","line":37,"column":9,"nodeType":"3402","messageId":"3403","endLine":37,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3687","line":47,"column":5,"nodeType":"3402","messageId":"3403","endLine":47,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3688","line":48,"column":5,"nodeType":"3402","messageId":"3403","endLine":48,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3551","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3506","line":3,"column":23,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3670","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3689","line":39,"column":6,"nodeType":"3402","messageId":"3403","endLine":39,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3446","line":45,"column":10,"nodeType":"3402","messageId":"3403","endLine":45,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3447","line":45,"column":16,"nodeType":"3402","messageId":"3403","endLine":45,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3551","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3506","line":3,"column":23,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3554","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3670","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3559","line":23,"column":10,"nodeType":"3402","messageId":"3403","endLine":23,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3446","line":40,"column":10,"nodeType":"3402","messageId":"3403","endLine":40,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3447","line":40,"column":16,"nodeType":"3402","messageId":"3403","endLine":40,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3452","line":90,"column":19,"nodeType":"3402","messageId":"3403","endLine":90,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3453","line":90,"column":64,"nodeType":"3402","messageId":"3403","endLine":90,"endColumn":77},{"ruleId":"3400","severity":1,"message":"3690","line":11,"column":10,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3411","line":12,"column":28,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":38},{"ruleId":"3400","severity":1,"message":"3424","line":14,"column":10,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":36},{"ruleId":"3400","severity":1,"message":"3569","line":17,"column":8,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3484","line":97,"column":9,"nodeType":"3402","messageId":"3403","endLine":97,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3691","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3683","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3692","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3693","line":26,"column":8,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3452","line":71,"column":11,"nodeType":"3402","messageId":"3403","endLine":71,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3694","line":71,"column":34,"nodeType":"3402","messageId":"3403","endLine":71,"endColumn":46},{"ruleId":"3400","severity":1,"message":"3497","line":1,"column":21,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3695","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3696","line":19,"column":26,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":35},{"ruleId":"3448","severity":1,"message":"3697","line":90,"column":6,"nodeType":"3450","endLine":90,"endColumn":16,"suggestions":"3698"},{"ruleId":"3400","severity":1,"message":"3699","line":11,"column":8,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3497","line":1,"column":21,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3442","line":2,"column":18,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3517","line":7,"column":3,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3492","line":9,"column":3,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3671","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":10},{"ruleId":"3400","severity":1,"message":"3411","line":12,"column":3,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3695","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3515","line":19,"column":10,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3696","line":19,"column":26,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":35},{"ruleId":"3400","severity":1,"message":"3700","line":21,"column":8,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3701","line":22,"column":8,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3702","line":30,"column":10,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3703","line":47,"column":6,"nodeType":"3402","messageId":"3403","endLine":47,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3516","line":62,"column":11,"nodeType":"3402","messageId":"3403","endLine":62,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3704","line":63,"column":53,"nodeType":"3402","messageId":"3403","endLine":63,"endColumn":69},{"ruleId":"3448","severity":1,"message":"3697","line":70,"column":6,"nodeType":"3450","endLine":70,"endColumn":16,"suggestions":"3705"},{"ruleId":"3400","severity":1,"message":"3432","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3706","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3707","line":9,"column":8,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3708","line":11,"column":10,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3709","line":45,"column":10,"nodeType":"3402","messageId":"3403","endLine":45,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3412","line":70,"column":9,"nodeType":"3402","messageId":"3403","endLine":70,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3710","line":4,"column":10,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3541","line":1,"column":21,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3711","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3706","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3442","line":5,"column":18,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3712","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3713","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3714","line":8,"column":8,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3715","line":9,"column":8,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3716","line":10,"column":8,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3717","line":11,"column":8,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3718","line":12,"column":8,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3719","line":14,"column":8,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3720","line":15,"column":8,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3721","line":21,"column":3,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3557","line":26,"column":3,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3722","line":33,"column":3,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3679","line":40,"column":10,"nodeType":"3402","messageId":"3403","endLine":40,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3583","line":44,"column":10,"nodeType":"3402","messageId":"3403","endLine":44,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3723","line":54,"column":10,"nodeType":"3402","messageId":"3403","endLine":54,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3454","line":73,"column":11,"nodeType":"3402","messageId":"3403","endLine":73,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3724","line":73,"column":54,"nodeType":"3402","messageId":"3403","endLine":73,"endColumn":77},{"ruleId":"3400","severity":1,"message":"3725","line":75,"column":21,"nodeType":"3402","messageId":"3403","endLine":75,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3627","line":76,"column":20,"nodeType":"3402","messageId":"3403","endLine":76,"endColumn":31},{"ruleId":"3448","severity":1,"message":"3726","line":79,"column":6,"nodeType":"3450","endLine":79,"endColumn":16,"suggestions":"3727"},{"ruleId":"3413","severity":1,"message":"3414","line":104,"column":25,"nodeType":"3415","endLine":104,"endColumn":95},{"ruleId":"3400","severity":1,"message":"3717","line":8,"column":8,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3454","line":186,"column":11,"nodeType":"3402","messageId":"3403","endLine":186,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3728","line":24,"column":21,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":29},{"ruleId":"3448","severity":1,"message":"3449","line":71,"column":6,"nodeType":"3450","endLine":71,"endColumn":16,"suggestions":"3729"},{"ruleId":"3400","severity":1,"message":"3454","line":79,"column":11,"nodeType":"3402","messageId":"3403","endLine":79,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3730","line":149,"column":13,"nodeType":"3402","messageId":"3403","endLine":149,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3731","line":154,"column":20,"nodeType":"3402","messageId":"3403","endLine":154,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3732","line":44,"column":10,"nodeType":"3402","messageId":"3403","endLine":44,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3454","line":84,"column":11,"nodeType":"3402","messageId":"3403","endLine":84,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3730","line":204,"column":13,"nodeType":"3402","messageId":"3403","endLine":204,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3731","line":209,"column":20,"nodeType":"3402","messageId":"3403","endLine":209,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3733","line":270,"column":13,"nodeType":"3402","messageId":"3403","endLine":270,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3734","line":2,"column":8,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3534","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3735","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3736","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3720","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3728","line":11,"column":21,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3506","line":14,"column":10,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3494","line":15,"column":10,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3599","line":17,"column":10,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3454","line":53,"column":11,"nodeType":"3402","messageId":"3403","endLine":53,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3737","line":56,"column":9,"nodeType":"3402","messageId":"3403","endLine":56,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3442","line":1,"column":18,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3529","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3738","line":3,"column":18,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3739","line":3,"column":32,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":43},{"ruleId":"3400","severity":1,"message":"3492","line":5,"column":22,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3740","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":25},{"ruleId":"3413","severity":1,"message":"3414","line":49,"column":7,"nodeType":"3415","endLine":56,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3411","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3492","line":3,"column":22,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3741","line":3,"column":36,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":47},{"ruleId":"3400","severity":1,"message":"3501","line":3,"column":60,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":69},{"ruleId":"3400","severity":1,"message":"3742","line":4,"column":10,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":30},{"ruleId":"3400","severity":1,"message":"3455","line":4,"column":32,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":57},{"ruleId":"3400","severity":1,"message":"3740","line":4,"column":59,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":74},{"ruleId":"3413","severity":1,"message":"3414","line":37,"column":7,"nodeType":"3415","endLine":43,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3580","line":1,"column":38,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":50},{"ruleId":"3400","severity":1,"message":"3743","line":5,"column":21,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3728","line":5,"column":30,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":38},{"ruleId":"3400","severity":1,"message":"3505","line":13,"column":28,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":40},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3506","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3541","line":2,"column":21,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3497","line":2,"column":29,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":37},{"ruleId":"3400","severity":1,"message":"3706","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3442","line":4,"column":18,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3714","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3715","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3744","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3716","line":8,"column":8,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3717","line":9,"column":8,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3718","line":10,"column":8,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3745","line":13,"column":8,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3558","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":6},{"ruleId":"3400","severity":1,"message":"3721","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3492","line":19,"column":3,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3557","line":21,"column":3,"nodeType":"3402","messageId":"3403","endLine":21,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3411","line":26,"column":3,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3542","line":32,"column":8,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3513","line":34,"column":8,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3679","line":36,"column":10,"nodeType":"3402","messageId":"3403","endLine":36,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3494","line":37,"column":10,"nodeType":"3402","messageId":"3403","endLine":37,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3746","line":38,"column":10,"nodeType":"3402","messageId":"3403","endLine":38,"endColumn":36},{"ruleId":"3400","severity":1,"message":"3412","line":43,"column":9,"nodeType":"3402","messageId":"3403","endLine":43,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3747","line":1,"column":8,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3529","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3497","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3541","line":3,"column":20,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3442","line":4,"column":18,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3748","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3525","line":6,"column":17,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3741","line":7,"column":10,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3542","line":9,"column":8,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3749","line":11,"column":10,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3750","line":11,"column":26,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3528","line":3,"column":35,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3492","line":3,"column":41,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":47},{"ruleId":"3400","severity":1,"message":"3728","line":5,"column":21,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3494","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3454","line":40,"column":11,"nodeType":"3402","messageId":"3403","endLine":40,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3525","line":4,"column":18,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3728","line":26,"column":21,"nodeType":"3402","messageId":"3403","endLine":26,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3506","line":28,"column":10,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3599","line":29,"column":25,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":38},{"ruleId":"3400","severity":1,"message":"3749","line":34,"column":38,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":52},{"ruleId":"3400","severity":1,"message":"3454","line":86,"column":11,"nodeType":"3402","messageId":"3403","endLine":86,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3488","line":177,"column":11,"nodeType":"3402","messageId":"3403","endLine":177,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3452","line":177,"column":19,"nodeType":"3402","messageId":"3403","endLine":177,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3489","line":177,"column":27,"nodeType":"3402","messageId":"3403","endLine":177,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3751","line":177,"column":50,"nodeType":"3402","messageId":"3403","endLine":177,"endColumn":62},{"ruleId":"3400","severity":1,"message":"3752","line":177,"column":64,"nodeType":"3402","messageId":"3403","endLine":177,"endColumn":77},{"ruleId":"3400","severity":1,"message":"3453","line":177,"column":79,"nodeType":"3402","messageId":"3403","endLine":177,"endColumn":92},{"ruleId":"3400","severity":1,"message":"3733","line":235,"column":13,"nodeType":"3402","messageId":"3403","endLine":235,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3753","line":237,"column":19,"nodeType":"3402","messageId":"3403","endLine":237,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3748","line":4,"column":10,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3492","line":5,"column":15,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3754","line":7,"column":19,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3755","line":2,"column":8,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3492","line":6,"column":15,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3754","line":8,"column":19,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3756","line":20,"column":7,"nodeType":"3402","messageId":"3403","endLine":20,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3755","line":2,"column":8,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3492","line":5,"column":15,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3754","line":7,"column":19,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3756","line":18,"column":7,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3748","line":4,"column":10,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3492","line":5,"column":15,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3754","line":7,"column":19,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3706","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3757","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3758","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3759","line":11,"column":43,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":51},{"ruleId":"3400","severity":1,"message":"3760","line":13,"column":8,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3525","line":15,"column":10,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3452","line":171,"column":11,"nodeType":"3402","messageId":"3403","endLine":171,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3489","line":171,"column":19,"nodeType":"3402","messageId":"3403","endLine":171,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3488","line":171,"column":28,"nodeType":"3402","messageId":"3403","endLine":171,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3752","line":171,"column":36,"nodeType":"3402","messageId":"3403","endLine":171,"endColumn":49},{"ruleId":"3400","severity":1,"message":"3534","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3761","line":3,"column":8,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3762","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3763","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3690","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3764","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3492","line":12,"column":3,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3691","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3765","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3754","line":22,"column":10,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3766","line":27,"column":10,"nodeType":"3402","messageId":"3403","endLine":27,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3767","line":28,"column":17,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3768","line":28,"column":25,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3769","line":28,"column":34,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3770","line":28,"column":64,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":75},{"ruleId":"3400","severity":1,"message":"3771","line":30,"column":9,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3748","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3772","line":46,"column":10,"nodeType":"3402","messageId":"3403","endLine":46,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3773","line":47,"column":10,"nodeType":"3402","messageId":"3403","endLine":47,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3774","line":50,"column":10,"nodeType":"3402","messageId":"3403","endLine":50,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3541","line":25,"column":28,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":34},{"ruleId":"3400","severity":1,"message":"3571","line":85,"column":7,"nodeType":"3402","messageId":"3403","endLine":85,"endColumn":15},{"ruleId":"3448","severity":1,"message":"3572","line":132,"column":3,"nodeType":"3402","endLine":132,"endColumn":12,"suggestions":"3775"},{"ruleId":"3400","severity":1,"message":"3574","line":137,"column":9,"nodeType":"3402","messageId":"3403","endLine":137,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3492","line":9,"column":3,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3702","line":31,"column":10,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3516","line":111,"column":11,"nodeType":"3402","messageId":"3403","endLine":111,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3776","line":113,"column":41,"nodeType":"3402","messageId":"3403","endLine":113,"endColumn":67},{"ruleId":"3448","severity":1,"message":"3697","line":122,"column":6,"nodeType":"3450","endLine":122,"endColumn":16,"suggestions":"3777"},{"ruleId":"3400","severity":1,"message":"3442","line":4,"column":18,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3504","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3502","line":5,"column":21,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3503","line":5,"column":27,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3534","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3517","line":8,"column":10,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3610","line":8,"column":16,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3778","line":8,"column":23,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3507","line":8,"column":30,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3558","line":8,"column":41,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":44},{"ruleId":"3400","severity":1,"message":"3411","line":8,"column":46,"nodeType":"3402","messageId":"3403","endLine":8,"endColumn":56},{"ruleId":"3400","severity":1,"message":"3779","line":9,"column":10,"nodeType":"3402","messageId":"3403","endLine":9,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3650","line":11,"column":10,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3780","line":13,"column":8,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3569","line":14,"column":8,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":15},{"ruleId":"3400","severity":1,"message":"3679","line":17,"column":10,"nodeType":"3402","messageId":"3403","endLine":17,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3781","line":18,"column":8,"nodeType":"3402","messageId":"3403","endLine":18,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3782","line":19,"column":8,"nodeType":"3402","messageId":"3403","endLine":19,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3783","line":22,"column":6,"nodeType":"3402","messageId":"3403","endLine":22,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3686","line":30,"column":9,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3784","line":31,"column":11,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3785","line":31,"column":28,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":41},{"ruleId":"3400","severity":1,"message":"3786","line":32,"column":10,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":22},{"ruleId":"3400","severity":1,"message":"3787","line":32,"column":24,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3788","line":33,"column":10,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3789","line":33,"column":20,"nodeType":"3402","messageId":"3403","endLine":33,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3790","line":34,"column":9,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3515","line":5,"column":10,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3610","line":10,"column":15,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":20},{"ruleId":"3413","severity":1,"message":"3414","line":45,"column":11,"nodeType":"3415","endLine":49,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3551","line":2,"column":28,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":39},{"ruleId":"3400","severity":1,"message":"3420","line":10,"column":8,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3686","line":27,"column":9,"nodeType":"3402","messageId":"3403","endLine":27,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3791","line":29,"column":16,"nodeType":"3402","messageId":"3403","endLine":29,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3454","line":31,"column":11,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3792","line":31,"column":31,"nodeType":"3402","messageId":"3403","endLine":31,"endColumn":36},{"ruleId":"3448","severity":1,"message":"3449","line":35,"column":6,"nodeType":"3450","endLine":35,"endColumn":22,"suggestions":"3793"},{"ruleId":"3400","severity":1,"message":"3515","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3646","line":2,"column":48,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":57},{"ruleId":"3400","severity":1,"message":"3411","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":20},{"ruleId":"3400","severity":1,"message":"3628","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3794","line":3,"column":19,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":27},{"ruleId":"3400","severity":1,"message":"3795","line":5,"column":8,"nodeType":"3402","messageId":"3403","endLine":5,"endColumn":32},{"ruleId":"3400","severity":1,"message":"3796","line":7,"column":8,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":36},{"ruleId":"3400","severity":1,"message":"3764","line":11,"column":3,"nodeType":"3402","messageId":"3403","endLine":11,"endColumn":7},{"ruleId":"3400","severity":1,"message":"3492","line":12,"column":3,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3691","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3797","line":14,"column":3,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3798","line":15,"column":3,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":11},{"ruleId":"3400","severity":1,"message":"3765","line":16,"column":3,"nodeType":"3402","messageId":"3403","endLine":16,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3799","line":28,"column":10,"nodeType":"3402","messageId":"3403","endLine":28,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3800","line":30,"column":9,"nodeType":"3402","messageId":"3403","endLine":30,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3801","line":34,"column":9,"nodeType":"3402","messageId":"3403","endLine":34,"endColumn":29},{"ruleId":"3400","severity":1,"message":"3507","line":10,"column":3,"nodeType":"3402","messageId":"3403","endLine":10,"endColumn":12},{"ruleId":"3400","severity":1,"message":"3802","line":14,"column":3,"nodeType":"3402","messageId":"3403","endLine":14,"endColumn":17},{"ruleId":"3400","severity":1,"message":"3517","line":7,"column":15,"nodeType":"3402","messageId":"3403","endLine":7,"endColumn":19},{"ruleId":"3400","severity":1,"message":"3515","line":12,"column":10,"nodeType":"3402","messageId":"3403","endLine":12,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3455","line":15,"column":10,"nodeType":"3402","messageId":"3403","endLine":15,"endColumn":35},{"ruleId":"3400","severity":1,"message":"3803","line":35,"column":9,"nodeType":"3402","messageId":"3403","endLine":35,"endColumn":24},{"ruleId":"3413","severity":1,"message":"3414","line":50,"column":11,"nodeType":"3415","endLine":50,"endColumn":107},{"ruleId":"3400","severity":1,"message":"3515","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3804","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3805","line":6,"column":8,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":21},{"ruleId":"3400","severity":1,"message":"3515","line":20,"column":10,"nodeType":"3402","messageId":"3403","endLine":20,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3806","line":51,"column":9,"nodeType":"3402","messageId":"3403","endLine":51,"endColumn":28},{"ruleId":"3400","severity":1,"message":"3757","line":3,"column":8,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3485","line":102,"column":9,"nodeType":"3402","messageId":"3403","endLine":102,"endColumn":24},{"ruleId":"3400","severity":1,"message":"3757","line":2,"column":8,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3558","line":6,"column":10,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3807","line":6,"column":21,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":25},{"ruleId":"3400","severity":1,"message":"3492","line":6,"column":27,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":33},{"ruleId":"3400","severity":1,"message":"3411","line":6,"column":35,"nodeType":"3402","messageId":"3403","endLine":6,"endColumn":45},{"ruleId":"3400","severity":1,"message":"3446","line":24,"column":10,"nodeType":"3402","messageId":"3403","endLine":24,"endColumn":14},{"ruleId":"3400","severity":1,"message":"3808","line":52,"column":9,"nodeType":"3402","messageId":"3403","endLine":52,"endColumn":26},{"ruleId":"3400","severity":1,"message":"3809","line":1,"column":10,"nodeType":"3402","messageId":"3403","endLine":1,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3492","line":13,"column":3,"nodeType":"3402","messageId":"3403","endLine":13,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3542","line":25,"column":8,"nodeType":"3402","messageId":"3403","endLine":25,"endColumn":16},{"ruleId":"3400","severity":1,"message":"3700","line":32,"column":8,"nodeType":"3402","messageId":"3403","endLine":32,"endColumn":12},{"ruleId":"3413","severity":1,"message":"3414","line":109,"column":13,"nodeType":"3415","endLine":109,"endColumn":48},{"ruleId":"3400","severity":1,"message":"3791","line":138,"column":16,"nodeType":"3402","messageId":"3403","endLine":138,"endColumn":23},{"ruleId":"3400","severity":1,"message":"3454","line":141,"column":5,"nodeType":"3402","messageId":"3403","endLine":141,"endColumn":14},{"ruleId":"3448","severity":1,"message":"3449","line":149,"column":6,"nodeType":"3450","endLine":149,"endColumn":22,"suggestions":"3810"},{"ruleId":"3400","severity":1,"message":"3497","line":3,"column":10,"nodeType":"3402","messageId":"3403","endLine":3,"endColumn":18},{"ruleId":"3400","severity":1,"message":"3811","line":4,"column":8,"nodeType":"3402","messageId":"3403","endLine":4,"endColumn":9},{"ruleId":"3400","severity":1,"message":"3558","line":2,"column":10,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":13},{"ruleId":"3400","severity":1,"message":"3594","line":2,"column":15,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":31},{"ruleId":"3400","severity":1,"message":"3411","line":2,"column":44,"nodeType":"3402","messageId":"3403","endLine":2,"endColumn":54},"@typescript-eslint/no-unused-vars","'SettingsProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["3812"],"no-negated-in-lhs",["3813"],"'Settings' is defined but never used.","'navigate' is assigned a value but never used.","'resetPassword' is assigned a value but never used.","'Typography' is defined but never used.","'theme' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'string' is defined but never used.","'InvestorFormPostImage' is defined but never used.","'getHeaderFormData' is defined but never used.","'store' is defined but never used.","'axios' is defined but never used.","'REACT_APP_API_URL' is defined but never used.","'ProjectStageList' is defined but never used.","'business' is defined but never used.","'NewProjectEntityFormValues' is defined but never used.","'Project1' is defined but never used.","'WalletType' is defined but never used.","'response' is assigned a value but never used.","'Investment' is defined but never used.","'Payment' is defined but never used.","'WalletTransaction' is defined but never used.","'map' is defined but never used.","'filter' is defined but never used.","'PackageVoucherCheckout' is defined but never used.","'BusinessAPI' is defined but never used.","'useSnackbar' is defined but never used.","'closeFill' is defined but never used.","'frFR' is defined but never used.","'KrowdNewProjectEntity' is assigned a value but never used.","'KrowdNewProjectMedia' is assigned a value but never used.","'KrowdNewProjectOwner' is assigned a value but never used.","'UserPaymentProject' is assigned a value but never used.","'RouterLink' is defined but never used.","'Modal' is defined but never used.","'Dialog' is defined but never used.","'SeverErrorIllustration' is defined but never used.","'open' is assigned a value but never used.","'setOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'dispatch'. Either exclude it or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["3814"],"'values' is assigned a value but never used.","'setFieldValue' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'OrderCompleteIllustration' is defined but never used.","'PageNotFoundIllustration' is defined but never used.","'interval' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["3815"],"'FormControl' is defined but never used.","'DialogActions' is defined but never used.","'useNavigate' is defined but never used.","'Toolbar' is defined but never used.","'getAllProjectStage' is defined but never used.","'getProjectStageList' is defined but never used.","'UserAccountForm' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'setValueMin' is assigned a value but never used.","'PackageName' is assigned a value but never used.","'setPackageName' is assigned a value but never used.","'PackagePrice' is assigned a value but never used.","'setPackagePrice' is assigned a value but never used.","'PackageQuan' is assigned a value but never used.","'setPackageQuan' is assigned a value but never used.","'PackageRemainQuan' is assigned a value but never used.","'setPackageRemainQuan' is assigned a value but never used.","'handleCloseConfilmInvested' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'user?.id'. Either include them or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.",["3816"],"'mainInvestor' is assigned a value but never used.","'currentLanguage' is assigned a value but never used.","'handleClickOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'inputProps' is assigned a value but never used.","'errors' is assigned a value but never used.","'touched' is assigned a value but never used.",["3817"],"'hook1' is defined but never used.","'Button' is defined but never used.","'height' is defined but never used.","'dispatch' is defined but never used.","'RootState' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","'editTwotone' is defined but never used.","'ProjectAPI' is defined but never used.","'NavbarBottomAnchor' is assigned a value but never used.","'Container' is defined but never used.","'Form' is defined but never used.","'FormikProvider' is defined but never used.","'useFormik' is defined but never used.","'packageLists' is assigned a value but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'projectID' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'Label' is defined but never used.","'getProjectPackage' is defined but never used.","'PATH_DASHBOARD' is defined but never used.","'user' is assigned a value but never used.","'Link' is defined but never used.","'name' is assigned a value but never used.","'MainNavbar' is defined but never used.","Assignments to the 'lastScrollTop' variable from inside React Hook useCallback will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useCallback.","ConditionalExpression","'Package' is defined but never used.","'listAllProjectLanding' is assigned a value but never used.",["3818"],"'useTheme' is defined but never used.","'OutlinedInput' is defined but never used.",["3819"],"'Grid' is defined but never used.","'motion' is defined but never used.","'margin' is defined but never used.","'ContentStyle' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Icon' is defined but never used.","'varFadeInDown' is defined but never used.","'PATH_DASHBOARD_PROJECT' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'TableSortLabel' is defined but never used.","'useRef' is defined but never used.","'mockData' is defined but never used.","'listOfProject' is assigned a value but never used.",["3820"],"'Post' is defined but never used.","'useTranslation' is defined but never used.","'Cookies' is defined but never used.","'searchResults' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'handleChangeSearch' and 'searchQuery'. Either include them or remove the dependency array.",["3821"],"'useCallback' is defined but never used.","'Chip' is defined but never used.","'Switch' is defined but never used.","'FormHelperText' is defined but never used.","'FormControlLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Box' is defined but never used.","'QuillEditor' is defined but never used.","'UploadSingleFile' is defined but never used.","'BlogNewPostPreview' is defined but never used.","'TAGS_OPTION' is assigned a value but never used.","'setMaxDate' is assigned a value but never used.","'date' is assigned a value but never used.","'setDateExpress' is assigned a value but never used.",["3822"],"'handleClosePreview' is assigned a value but never used.","'getProjectListById' is defined but never used.","'useAuth' is defined but never used.","'setMinDate' is assigned a value but never used.","'Language' is assigned a value but never used.","React Hook useEffect contains a call to 'setCurrentLanguage'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [initialLanguage] as a second argument to the useEffect Hook.",["3823"],"'setLanguage' is assigned a value but never used.","'MessengerChat' is defined but never used.","'matchPath' is defined but never used.","'useLocation' is defined but never used.","'getAllPaymentListRevenue' is defined but never used.","'getBillDailyReport' is defined but never used.","'varWrapEnter' is defined but never used.","'KrowdProjectStage' is defined but never used.","'ProjectReportRevenue' is defined but never used.","'DATA_TYPE' is defined but never used.","'KrowdTable' is defined but never used.","'RowData' is defined but never used.","'setPageIndex2' is assigned a value but never used.","'paymentListState' is assigned a value but never used.","'pageSize2' is assigned a value but never used.","'setPageSize2' is assigned a value but never used.","'isLoadingPeriodRevenue' is assigned a value but never used.","'listPeriodRevenue' is assigned a value but never used.","'numberOfRevenue' is assigned a value but never used.",["3824"],"'CircularProgress' is defined but never used.","'classNames' is defined but never used.","'i18next' is defined but never used.","'BlogPostsSearch' is defined but never used.","'BlogPostsSort' is defined but never used.","'getWalletList' is defined but never used.","'capitalCase' is defined but never used.","'Tab' is defined but never used.","'Tabs' is defined but never used.","'AccountBilling' is defined but never used.","'t' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user?.id'. Either include it or remove the dependency array.",["3825"],"'handleSelectAllClick' is assigned a value but never used.","'HeaderBreadcrumbs' is defined but never used.","'KrowdPackage' is defined but never used.","'Stack' is defined but never used.","'ShopTagFiltered' is defined but never used.","'ShopProductSort' is defined but never used.","'ShopFilterSidebar' is defined but never used.","'openFilter' is assigned a value but never used.","'handleOpenFilter' is assigned a value but never used.","'handleCloseFilter' is assigned a value but never used.","'handleResetFilter' is assigned a value but never used.","'AnalyticsTasks' is defined but never used.","'MembersParticipation' is defined but never used.","'TermOfProject' is defined but never used.","'MultiplierProject' is defined but never used.","'SharedRevenue' is defined but never used.","'AnalyticsOrderTimeline' is defined but never used.","'AnalyticsTrafficBySite' is defined but never used.","'AnalyticsConversionRates' is defined but never used.","'UserDetail' is assigned a value but never used.","'setPageSize' is assigned a value but never used.","'Divider' is defined but never used.","'SubContentStyle' is assigned a value but never used.","'BoldStyle' is assigned a value but never used.","'ItalicStyle' is assigned a value but never used.","'themeStretch' is assigned a value but never used.","'SubTitle' is assigned a value but never used.","'ImageStyle' is assigned a value but never used.","'BorderBoxStyle' is assigned a value but never used.","'AppWidgets1' is defined but never used.","'AppWidgets2' is defined but never used.","'AppTopRelated' is defined but never used.","'AppAreaInstalled' is defined but never used.","'AppTotalDownloads' is defined but never used.","'AppTotalInstalled' is defined but never used.","'AppCurrentDownload' is defined but never used.",["3826"],"'CardMedia' is defined but never used.","'MOCK_NUMBER' is assigned a value but never used.","'PATH_PAGE' is defined but never used.","'ACTION_TYPE' is defined but never used.","'eyeFill' is defined but never used.",["3827"],"'PATH_AUTH' is defined but never used.","'AuthLayout' is defined but never used.",["3828"],"'getInvestmentByID' is defined but never used.","'setValue' is assigned a value but never used.",["3829"],"React Hook useEffect has a missing dependency: 'pageSize'. Either include it or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.",["3830"],"'useParams' is defined but never used.","'getAllPaymentList' is defined but never used.",["3831"],"'filterCount' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'projectId'. Either include it or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.",["3832"],"'investorKrowdDetail' is assigned a value but never used.",["3833"],"'varFadeIn' is defined but never used.","'CONTACTS' is assigned a value but never used.","'getTransactionList' is defined but never used.","'DialogTitle' is defined but never used.","'Autocomplete' is defined but never used.","'Tooltip' is defined but never used.","'pageIndexPaging' is assigned a value but never used.","'setPageIndexPaging' is assigned a value but never used.","'currentWithdrawRequest' is assigned a value but never used.","'setCurrentWithdrawRequest' is assigned a value but never used.",["3834"],["3835"],"'MainNavbarLogin' is defined but never used.","'MIconButton' is defined but never used.","'useLocales' is defined but never used.",["3836"],"'roundArrowRightAlt' is defined but never used.","'Checkbox' is defined but never used.","'Yup' is defined but never used.","'User' is defined but never used.","'isMountedRef' is assigned a value but never used.","'role' is assigned a value but never used.","'status' is assigned a value but never used.","'ProjectEntityNewFormProps' is defined but never used.","'styled' is defined but never used.","'Rating' is defined but never used.","'FormGroup' is defined but never used.","'ColorManyPicker' is defined but never used.","'handleChange' is assigned a value but never used.","'CardActionArea' is defined but never used.","'PATH_DOCS' is defined but never used.","React Hook useEffect has missing dependencies: 'isOpenSidebar' and 'onCloseSidebar'. Either include them or remove the dependency array. If 'onCloseSidebar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["3837"],"'ContactsPopover' is defined but never used.","'Logo' is defined but never used.","'MyAvatar' is defined but never used.","'DocIllustration' is defined but never used.","'IconCollapseProps' is defined but never used.","'onToggleCollapse' is assigned a value but never used.",["3838"],"'sentenceCase' is defined but never used.","'getColorName' is defined but never used.","'ProductFilter' is defined but never used.","'labelPriceRange' is defined but never used.","'MAvatar' is defined but never used.","'format' is defined but never used.","'bookFill' is defined but never used.","'heartFill' is defined but never used.","'shareFill' is defined but never used.","'printerFill' is defined but never used.","'downloadFill' is defined but never used.","'trash2Outline' is defined but never used.","'moreVerticalFill' is defined but never used.","'diagonalArrowRightUpFill' is defined but never used.","'diagonalArrowLeftDownFill' is defined but never used.","'Menu' is defined but never used.","'TableContainer' is defined but never used.","'AvatarIcon' is defined but never used.","'numOfAccountTransaction' is assigned a value but never used.","'setPageIndex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'pageIndex' and 'pageSize'. Either include them or remove the dependency array. Outer scope values like 'dispatch' aren't valid dependencies because mutating them doesn't re-render the component.",["3839"],"'fPercent' is defined but never used.",["3840"],"'valuesTranfer' is assigned a value but never used.","'setFieldValueTranfer' is assigned a value but never used.","'animate' is defined but never used.","'valuesWithDraw' is assigned a value but never used.","'ReactApexChart' is defined but never used.","'trendingUpFill' is defined but never used.","'trendingDownFill' is defined but never used.","'chartOptions' is assigned a value but never used.","'useAnimation' is defined but never used.","'MotionProps' is defined but never used.","'SeoIllustration' is defined but never used.","'CardContent' is defined but never used.","'CheckOutIllustration' is defined but never used.","'fNumber' is defined but never used.","'archiveFill' is defined but never used.","'arrowIosForwardFill' is defined but never used.","'getProjectListInvestedById' is defined but never used.","'Slider' is defined but never used.","'alpha' is defined but never used.","'varFadeInRight' is defined but never used.","'MotionContainer' is defined but never used.","'handleSubmit' is assigned a value but never used.","'getFieldProps' is assigned a value but never used.","'isSubmittingWithDraw' is assigned a value but never used.","'fShortenNumber' is defined but never used.","'appleFilled' is defined but never used.","'IconWrapperStyle' is assigned a value but never used.","'plusFill' is defined but never used.","'minusFill' is defined but never used.","'useField' is defined but never used.","'roundAddShoppingCart' is defined but never used.","'roundThumbUp' is defined but never used.","'roundVerified' is defined but never used.","'checkmarkFill' is defined but never used.","'List' is defined but never used.","'Pagination' is defined but never used.","'isHelpful' is assigned a value but never used.","'rating' is assigned a value but never used.","'comment' is assigned a value but never used.","'helpful' is assigned a value but never used.","'isPurchased' is assigned a value but never used.","'handleClickHelpful' is assigned a value but never used.","'openLightbox' is assigned a value but never used.","'selectedImage' is assigned a value but never used.","'nav1' is assigned a value but never used.",["3841"],"'isLoadingDetailOfProjectID' is assigned a value but never used.",["3842"],"'Alert' is defined but never used.","'LoadingButton' is defined but never used.","'facebookFill' is defined but never used.","'Login' is defined but never used.","'firebase' is defined but never used.","'InitialValues' is defined but never used.","'enqueueSnackbar' is assigned a value but never used.","'closeSnackbar' is assigned a value but never used.","'showPassword' is assigned a value but never used.","'setShowPassword' is assigned a value but never used.","'phoneNum' is assigned a value but never used.","'setPhoneNum' is assigned a value but never used.","'LoginSchema' is assigned a value but never used.","'setSeen' is assigned a value but never used.","'total' is assigned a value but never used.",["3843"],"'Collapse' is defined but never used.","'ProjectDetailsReviewForm' is defined but never used.","'ProjectDetailsReviewOverview' is defined but never used.","'Avatar' is defined but never used.","'ListItem' is defined but never used.","'reviewBox' is assigned a value but never used.","'handleOpenReviewBox' is assigned a value but never used.","'handleCloseReviewBox' is assigned a value but never used.","'InputAdornment' is defined but never used.","'handleResetStep' is assigned a value but never used.","'homeFill' is defined but never used.","'settings2Fill' is defined but never used.","'handleApplyDiscount' is assigned a value but never used.","'Card' is defined but never used.","'handleOpenAddCard' is assigned a value but never used.","'noCase' is defined but never used.",["3844"],"'_' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"3845","fix":"3846"},{"desc":"3847","fix":"3848"},{"desc":"3849","fix":"3850"},{"desc":"3851","fix":"3852"},{"desc":"3845","fix":"3853"},{"desc":"3845","fix":"3854"},{"desc":"3845","fix":"3855"},{"desc":"3856","fix":"3857"},{"desc":"3845","fix":"3858"},{"desc":"3859","fix":"3860"},{"desc":"3861","fix":"3862"},{"desc":"3863","fix":"3864"},{"desc":"3845","fix":"3865"},{"desc":"3866","fix":"3867"},{"desc":"3866","fix":"3868"},{"desc":"3869","fix":"3870"},{"desc":"3871","fix":"3872"},{"desc":"3861","fix":"3873"},{"desc":"3874","fix":"3875"},{"desc":"3876","fix":"3877"},{"desc":"3866","fix":"3878"},{"desc":"3871","fix":"3879"},{"desc":"3859","fix":"3880"},{"desc":"3881","fix":"3882"},{"desc":"3881","fix":"3883"},{"desc":"3871","fix":"3884"},{"desc":"3845","fix":"3885"},{"desc":"3859","fix":"3886"},{"desc":"3881","fix":"3887"},{"desc":"3888","fix":"3889"},{"desc":"3888","fix":"3890"},"Update the dependencies array to be: []",{"range":"3891","text":"3892"},"Update the dependencies array to be: [count, navigate]",{"range":"3893","text":"3894"},"Update the dependencies array to be: [id, user?.id]",{"range":"3895","text":"3896"},"Update the dependencies array to be: [id]",{"range":"3897","text":"3898"},{"range":"3899","text":"3892"},{"range":"3900","text":"3892"},{"range":"3901","text":"3892"},"Update the dependencies array to be: [handleChangeSearch, searchQuery]",{"range":"3902","text":"3903"},{"range":"3904","text":"3892"},"Add dependencies array: [initialLanguage]",{"range":"3905","text":"3906"},"Update the dependencies array to be: [pageIndex2]",{"range":"3907","text":"3908"},"Update the dependencies array to be: [dispatch, user?.id]",{"range":"3909","text":"3910"},{"range":"3911","text":"3892"},"Update the dependencies array to be: [pageIndex]",{"range":"3912","text":"3913"},{"range":"3914","text":"3913"},"Update the dependencies array to be: [pageIndex, InvestmentDetail?.createDate]",{"range":"3915","text":"3916"},"Update the dependencies array to be: [pageIndex, pageSize]",{"range":"3917","text":"3918"},{"range":"3919","text":"3908"},"Update the dependencies array to be: [pageIndex, projectId]",{"range":"3920","text":"3921"},"Update the dependencies array to be: [pageIndex, filter]",{"range":"3922","text":"3923"},{"range":"3924","text":"3913"},{"range":"3925","text":"3918"},{"range":"3926","text":"3906"},"Update the dependencies array to be: [isOpenSidebar, onCloseSidebar, pathname]",{"range":"3927","text":"3928"},{"range":"3929","text":"3928"},{"range":"3930","text":"3918"},{"range":"3931","text":"3892"},{"range":"3932","text":"3906"},{"range":"3933","text":"3928"},"Update the dependencies array to be: [seen]",{"range":"3934","text":"3935"},{"range":"3936","text":"3935"},[1695,1705],"[]",[1401,1408],"[count, navigate]",[5181,5191],"[id, user?.id]",[2982,2996],"[id]",[4094,4104],[4551,4561],[696,706],[2965,2967],"[handleChangeSearch, searchQuery]",[3006,3016],[5017,5017],", [initialLanguage]",[1993,2015],"[pageIndex2]",[1946,1956],"[dispatch, user?.id]",[1050,1060],[1564,1585],"[pageIndex]",[1605,1626],[2912,2963],"[pageIndex, InvestmentDetail?.createDate]",[1144,1165],"[pageIndex, pageSize]",[1360,1382],[1348,1369],"[pageIndex, projectId]",[2115,2144],"[pageIndex, filter]",[2840,2861],[1467,1488],[5213,5213],[2576,2586],"[isOpenSidebar, onCloseSidebar, pathname]",[1955,1965],[2686,2696],[2279,2289],[3676,3676],[3591,3601],[1502,1518],"[seen]",[4326,4342]]